<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>springboot2.2.2 多租户saas（动态数据源，多数据源动态切换）</title>
      <link href="/2019/12/18/springboot/dynamic%20data%20source/"/>
      <url>/2019/12/18/springboot/dynamic%20data%20source/</url>
      
        <content type="html"><![CDATA[<ol><li><em>SaaS</em>,是Software-as-a-Service的缩写名称,意思为软件即服务,即通过网络提供软件服务。</li></ol><p>springboot实现saas的一种方式，一个平台用户一个数据库。当某个用户登录时，判断是某个租户平台的，寻找到对应的数据库作相应操作。</p><p>spring的AbstractRoutingDataSource类就是指数据源路由，我们依赖这个类做一定操作。首先了解这个类。AbstractRoutingDataSource实现了InitializingBean，即初始化项目立即运行；类包含了targetDataSources，defaultTargetDataSource，resolvedDefaultDataSource。这里必须有一个默认数据库即defaultTargetDataSource，否则初始化报错；然后targetDataSources则是&lt;租户名字，DataSource&gt;的一个Map，我们设置后需要afterPropertiesSet()这个方法去初始化resolvedDefaultDataSource（最后使用的数据源）。AbstractRoutingDataSource提供determineCurrentLookupKey()方法给我们让我们定义当前使用的数据源，determineCurrentLookupKey()方法返回的值即 租户名字。每次我们调用数据库，则会自动经过determineCurrentLookupKey()方法，自动使用对应的数据源去做数据库操作。</p><p>为了每单词调用的数据源是相同的，我们使用ThreadLocal来存储租户名字。</p><ol start="2"><li><p>开始编码：此例子基于mybatis</p><p><strong>mysql</strong></p></li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库-存放租户信息</span></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3306:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br><span class="line"><span class="comment"># 租户库-存放业务信息</span></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3305:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3304:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br></pre></td></tr></table></figure><p>主库3306创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`master_tenant`</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> <span class="string">'utf8mb4'</span> <span class="keyword">COLLATE</span> <span class="string">'utf8mb4_general_ci'</span>;</span><br><span class="line"><span class="keyword">use</span> master_tenant;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`MASTER_TENANT`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`TENANT`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`URL`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`USERNAME`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`PASSWORD`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`MASTER_TENANT`</span>(<span class="string">`ID`</span>, <span class="string">`TENANT`</span>, <span class="string">`URL`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>) <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'tenant1'</span>, <span class="string">'jdbc:mysql://10.68.8.81:3305/master_tenant?useSSL=false'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`MASTER_TENANT`</span>(<span class="string">`ID`</span>, <span class="string">`TENANT`</span>, <span class="string">`URL`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>) <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'tenant2'</span>, <span class="string">'jdbc:mysql://10.68.8.81:3304/master_tenant?useSSL=false'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br></pre></td></tr></table></figure><p>租户库3305和3304</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`master_tenant`</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> <span class="string">'utf8mb4'</span> <span class="keyword">COLLATE</span> <span class="string">'utf8mb4_general_ci'</span>;</span><br><span class="line"><span class="keyword">use</span> master_tenant;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`USER`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`USERNAME`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`PASSWORD`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`TENANT`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line">分别3305</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`USER`</span>(<span class="string">`ID`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>, <span class="string">`TENANT`</span>) <span class="keyword">VALUES</span> (<span class="string">'3305'</span>, <span class="string">'x'</span>, <span class="string">'root'</span>, <span class="string">''</span>);</span><br><span class="line">和3304</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`USER`</span>(<span class="string">`ID`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>, <span class="string">`TENANT`</span>) <span class="keyword">VALUES</span> (<span class="string">'3304'</span>, <span class="string">'x'</span>, <span class="string">'root'</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure><p>​    <strong>java代码</strong></p><p><em>pom.xml</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>saas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>saas<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>saas project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>application.properties</em>配置主数据源</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.url</span>=jdbc:mysql:<span class="comment">//10.68.8.81:3306/master_tenant?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.username</span>=root</span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.password</span>=root</span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.driverClassName</span>=com<span class="selector-class">.mysql</span><span class="selector-class">.jdbc</span><span class="selector-class">.Driver</span></span><br></pre></td></tr></table></figure><p>维护单个请求相同的数据源的类基础</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class DynamicDataSourceContextHolder &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;<span class="keyword">String</span>&gt; db = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> setDataSourceKey(<span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line">        db.<span class="built_in">set</span>(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getDataSourceKey() &#123;</span><br><span class="line">        <span class="keyword">return</span> db.<span class="built_in">get</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> clearDataSourceKey() &#123;</span><br><span class="line">        db.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要类，实现数据源路由</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DynamicRoutingDataSource <span class="keyword">extends</span> AbstractRoutingDataSource &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; targetTargetDataSources = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">Object</span> determineCurrentLookupKey() &#123;</span><br><span class="line">        <span class="comment">// 每次连接数据库，都会去设置数据源</span></span><br><span class="line">        <span class="keyword">return</span> DynamicDataSourceContextHolder.getDataSourceKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置targetDataSources并记录数据源（这里可以记录每个数据源的最近使用时间，可以做删除不经常使用的数据源）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> setTargetDataSources(Map&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; targetDataSources) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setTargetDataSources(targetDataSources);</span><br><span class="line">        <span class="keyword">super</span>.afterPropertiesSet();</span><br><span class="line">        targetTargetDataSources = targetDataSources;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加数据源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> addDataSource(<span class="built_in">String</span> tenant, Map&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; dataSourceProperties) &#123;</span><br><span class="line">        targetTargetDataSources.put(tenant, dataSource(dataSourceProperties));</span><br><span class="line">        <span class="keyword">super</span>.setTargetDataSources(targetTargetDataSources);</span><br><span class="line">        afterPropertiesSet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否存在数据源，存在直接取</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> existDataSource(<span class="built_in">String</span> tenant) &#123;</span><br><span class="line">        <span class="keyword">return</span> targetTargetDataSources.containsKey(tenant);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 组装数据源</span></span><br><span class="line">    <span class="keyword">public</span> DataSource dataSource(Map&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; dataSourceProperties) &#123;</span><br><span class="line">        DataSource dataSource;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(dataSourceProperties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"dataSource: &#123;&#125;"</span>, e);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置默认数据源和数据源路由bean</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.<span class="keyword">factory</span>.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Map</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.url&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> url;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.username&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.username&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.driverClassName&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> driverClassName;</span><br><span class="line"></span><br><span class="line">    private <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; getProperties() &#123;</span><br><span class="line">        <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"driverClassName"</span>, driverClassName);</span><br><span class="line">        map.put(<span class="string">"url"</span>, url);</span><br><span class="line">        map.put(<span class="string">"username"</span>, username);</span><br><span class="line">        map.put(<span class="string">"password"</span>, password);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"dynamicDataSource"</span>)</span><br><span class="line">    public DynamicRoutingDataSource dynamicDataSource() &#123;</span><br><span class="line">        DynamicRoutingDataSource dynamicRoutingDataSource = <span class="keyword">new</span> DynamicRoutingDataSource();</span><br><span class="line">        <span class="built_in">Map</span>&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; dataSourceMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        dataSourceMap.put(<span class="string">"default_db"</span>, dynamicRoutingDataSource.dataSource(getProperties()));</span><br><span class="line">        dynamicRoutingDataSource.setTargetDataSources(dataSourceMap);</span><br><span class="line">        dynamicRoutingDataSource.setDefaultTargetDataSource(dynamicRoutingDataSource.dataSource(getProperties()));</span><br><span class="line">        <span class="keyword">return</span> dynamicRoutingDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来业务实现，租户dto和dao</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TenantDto</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TenantDao</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.saas</span><span class="selector-class">.dao</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.saas</span><span class="selector-class">.model</span><span class="selector-class">.TenantDto</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Mapper</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Param</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Select</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Mapper</span></span><br><span class="line"><span class="keyword">public</span> interface TenantDao &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Select</span>("<span class="keyword">select</span> url,username,password from MASTER_TENANT where tenant = #&#123;<span class="selector-tag">tenant</span>&#125;")</span><br><span class="line">    <span class="selector-tag">TenantDto</span> <span class="selector-tag">findByTenant</span>(@<span class="keyword">Param</span>("<span class="keyword">tenant</span>") String tenant);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务就以用户登录和添加为测试</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDto</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">package</span> com.example.saas.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.UserDto;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line">@Mapper</span><br><span class="line">public interface UserDao &#123;</span><br><span class="line"></span><br><span class="line">    @Select(<span class="string">"select id,username,password from USER where username = <span class="subst">#&#123;username&#125;</span> and password = <span class="subst">#&#123;password&#125;</span>"</span>)</span><br><span class="line">    UserDto findByUsernameAndPassword(UserDto dto);</span><br><span class="line"></span><br><span class="line">    @Insert(<span class="string">"insert into USER(id,username,password) values (<span class="subst">#&#123;id&#125;</span>, <span class="subst">#&#123;username&#125;</span>, <span class="subst">#&#123;password&#125;</span>)"</span>)</span><br><span class="line">    //自增返回主键@Options(useGeneratedKeys=<span class="literal">true</span>, keyProperty=<span class="string">"id"</span>, keyColumn=<span class="string">"id"</span>)</span><br><span class="line">    void insertOne(UserDto dto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller业务实现和租户完全透明</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.UserDto;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.<span class="keyword">annotation</span>.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(<span class="meta-string">"/login"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String login(HttpServletRequest request, <span class="meta">@RequestBody</span> UserDto dto) &#123;</span><br><span class="line"></span><br><span class="line">        UserDto userDto = userDao.findByUsernameAndPassword(dto);</span><br><span class="line">        <span class="keyword">if</span> (userDto != <span class="literal">null</span>) &#123;</span><br><span class="line">            request.getSession().setAttribute(<span class="string">"tenant"</span>, request.getHeader(<span class="string">"tenant"</span>));</span><br><span class="line">            <span class="keyword">return</span> JSONObject.toJSONString(userDto);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"无此用户"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(<span class="meta-string">"/add"</span>)</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> String add() &#123;</span><br><span class="line"></span><br><span class="line">        UserDto dto1 = new UserDto();</span><br><span class="line">        dto1.setId(<span class="string">"11"</span>);</span><br><span class="line">        dto1.setUsername(<span class="string">"user1"</span>);</span><br><span class="line">        dto1.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        userDao.insertOne(dto1);</span><br><span class="line"><span class="comment">//        int a = 1/0;</span></span><br><span class="line">        UserDto dto2 = new UserDto();</span><br><span class="line">        dto2.setId(<span class="string">"22"</span>);</span><br><span class="line">        dto2.setUsername(<span class="string">"user2"</span>);</span><br><span class="line">        dto2.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        userDao.insertOne(dto2);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一个业务的数据源控制，这里使用拦截器实现即可</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.saas.dao.TenantDao;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.TenantDto;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterceptorConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TenantInterceptor tenantInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addInterceptor(tenantInterceptor).addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TenantInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TenantDao tenantDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRoutingDataSource dynamicRoutingDataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.datasource.driverClassName&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = request.getServletPath();</span><br><span class="line">        String tenant;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"/login"</span>.equals(url) || <span class="string">"/register"</span>.equals(url)) &#123;</span><br><span class="line">            <span class="comment">// 登录的时候获取下租户数据库信息</span></span><br><span class="line">            tenant = request.getHeader(<span class="string">"tenant"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 其他所有接口走session</span></span><br><span class="line">            Object tenantObj = request.getSession().getAttribute(<span class="string">"tenant"</span>);</span><br><span class="line">            <span class="keyword">if</span> (tenantObj == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"租户未登录"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            tenant = tenantObj.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(tenant)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!dynamicRoutingDataSource.existDataSource(tenant)) &#123;</span><br><span class="line">                <span class="comment">//搜索默认数据库，去注册租户的数据源，下次进来直接session匹配数据源</span></span><br><span class="line">                TenantDto dto = tenantDao.findByTenant(tenant);</span><br><span class="line">                <span class="keyword">if</span> (dto == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此租户"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                map.put(<span class="string">"driverClassName"</span>, driverClassName);</span><br><span class="line">                map.put(<span class="string">"url"</span>, dto.getUrl());</span><br><span class="line">                map.put(<span class="string">"username"</span>, dto.getUsername());</span><br><span class="line">                map.put(<span class="string">"password"</span>, dto.getPassword());</span><br><span class="line">                dynamicRoutingDataSource.addDataSource(tenant, map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 为了单次请求，多次连接数据库的情况，这里设置localThread，AbstractRoutingDataSource的方法去获取设置数据源</span></span><br><span class="line">        DynamicDataSourceContextHolder.setDataSourceKey(tenant);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> postHandle(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>,</span><br><span class="line">                           ModelAndView modelAndView) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 请求结束删除localThread</span></span><br><span class="line">        DynamicDataSourceContextHolder.clearDataSourceKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，至此，代码完成。</p><p><strong>运行测试</strong></p><p>curl -X POST \<br>  <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a> \<br>  -H ‘Content-Type: application/json’ \<br>  -H ‘Postman-Token: 30833305-d96a-4734-9abd-f760ac3dd24b’ \<br>  -H ‘cache-control: no-cache’ \<br>  -H ‘tenant: tenant1’ \<br>  -d ‘{“username”:”x”,”password”:”root”}’</p><p>租户找到3305数据库，登录信息返回3305数据库数据</p><p>{“id”:”3305”,”password”:”root”,”username”:”x”}</p><p>相同session下3305添加用户成功</p><p>curl -X POST \<br>  <a href="http://localhost:8080/add" target="_blank" rel="noopener">http://localhost:8080/add</a> \<br>  -H ‘Authorization: KEDACOM123’ \<br>  -H ‘Content-Type: application/json’ \<br>  -H ‘Postman-Token: f30d60e2-3fde-48dd-94ef-7e73179ffa13’ \<br>  -H ‘cache-control: no-cache’ \<br>  -H ‘tenant: tenant2’ \<br>  -d ‘{}’</p><p><em>代码</em>： <a href="/images/springboot/saas.zip">saas.zip</a></p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker-compose 安装工具</title>
      <link href="/2019/07/02/docker/docker-compose%20install%20tools/"/>
      <url>/2019/07/02/docker/docker-compose%20install%20tools/</url>
      
        <content type="html"><![CDATA[<p><strong>安装</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br><span class="line">docker pull <span class="keyword">redi</span><span class="variable">s:3</span>.<span class="number">2</span></span><br><span class="line">docker pull mysq<span class="variable">l:5</span>.<span class="number">7</span></span><br><span class="line">docker pull fauria/vsftpd</span><br></pre></td></tr></table></figure><p><strong>docker-compose 部署前提</strong></p><p><strong><em>mysql</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/mysql/<span class="keyword">data</span>  #存储数据可以不写，后续自动生成</span></span><br><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/mysql/init  #初始化语句存放，这里用来创建用户</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/mysql/my.cnf</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/mysql/init/init.sql</span></span><br></pre></td></tr></table></figure><p>/data/mysql/my.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">20</span>M</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="comment">#data     = /var/lib/mysql</span></span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">20</span>M</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTIO</span><br></pre></td></tr></table></figure><p>/data/mysql/init/init.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tablename <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'pwd'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span>,<span class="keyword">CREATE</span>,<span class="keyword">UPDATE</span>,<span class="keyword">DELETE</span>,<span class="keyword">DROP</span>,<span class="keyword">ALTER</span> <span class="keyword">ON</span> tablename.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">User</span> = <span class="string">'root'</span> <span class="keyword">and</span> Host=<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p><strong><em>sftpd</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/vsftpd</span></span><br></pre></td></tr></table></figure><p><strong><em>nginx</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/nginx</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/nginx/nginx.conf</span></span><br></pre></td></tr></table></figure><p>/data/nginx/nginx.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span>  nginx;</span><br><span class="line"><span class="comment">#启动进程,通常设置成和cpu的数量相等</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="attribute">error_log</span>  /var/log/nginx/error.log <span class="literal">warn</span>;</span><br><span class="line"><span class="attribute">pid</span>        /var/run/nginx.pid;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"> </span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_min_length</span>  <span class="number">5k</span>;</span><br><span class="line">    <span class="attribute">gzip_buffers</span>     <span class="number">4</span> <span class="number">16k</span>;</span><br><span class="line">    <span class="comment">#gzip_http_version 1.0;</span></span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">4</span>;</span><br><span class="line">    <span class="attribute">gzip_types</span>       application/javascript text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">upstream</span> rams_api &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">148.70.71.218:8080</span>;</span><br><span class="line">        <span class="attribute">keepalive</span> <span class="number">30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">         <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">         <span class="attribute">server_name</span> localhost;</span><br><span class="line">         <span class="comment">#location / &#123;</span></span><br><span class="line">         <span class="comment">#    root /;</span></span><br><span class="line">         <span class="comment">#    index index.html index.htm;</span></span><br><span class="line">         <span class="comment">#&#125;</span></span><br><span class="line">       </span><br><span class="line">         <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">         <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">             <span class="attribute">root</span>   html;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="attribute">location</span> /file/ &#123;</span><br><span class="line">             <span class="attribute">alias</span> /data/vsftpd/;</span><br><span class="line">             <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        </span><br><span class="line">         <span class="attribute">location</span> /rams/ &#123;</span><br><span class="line">             <span class="attribute">alias</span> /data/rams/rams_web/dist/;</span><br><span class="line">             <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="attribute">location</span> /api/ &#123;</span><br><span class="line">            <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">            <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">10</span>;</span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">300</span>;</span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">            <span class="attribute">proxy_buffer_size</span>  <span class="number">128k</span>;</span><br><span class="line">            <span class="attribute">proxy_buffers</span>  <span class="number">1000</span> <span class="number">128k</span>;</span><br><span class="line">            <span class="attribute">proxy_busy_buffers_size</span> <span class="number">256k</span>;</span><br><span class="line">            <span class="attribute">proxy_temp_file_write_size</span> <span class="number">256k</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://rams_api/rams/;</span><br><span class="line">            <span class="attribute">proxy_cookie_path</span> /rams/ /api/;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>服务启动</strong></p><p><strong><em>java后端</em></strong> </p><p>springboot项目下载到/data/rams/rams_server</p><p>build_rams_server.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DIR=/data/rams/rams_server</span><br><span class="line">JARFILE=rams-0.0.1-SNAPSHOT.jar</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span></span><br><span class="line">git pull</span><br><span class="line">PIDS=`ps -ef | grep <span class="variable">$JARFILE</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$PIDS</span>"</span> != <span class="string">""</span> ];<span class="keyword">then</span></span><br><span class="line">    ps -ef | grep <span class="variable">$JARFILE</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span> | xargs <span class="built_in">kill</span> -9</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">mvn clean install</span><br><span class="line"><span class="built_in">cd</span> /data/rams/rams_server/target</span><br><span class="line">java -jar <span class="variable">$JARFILE</span> --server.port=8080 &gt; /home/rams_server.log &amp;</span><br><span class="line"><span class="built_in">echo</span> end</span><br><span class="line">tail -f /home/rams_server.log</span><br></pre></td></tr></table></figure><p><strong><em>vue前端</em></strong></p><p>vue项目下载到/data/rams/rams_web</p><p>build_rams_web.sh</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /data/rams/rams_web</span><br><span class="line">git pull</span><br><span class="line">node -v</span><br><span class="line"><span class="built_in">npm</span> -v <span class="comment">#检查编译环境</span></span><br><span class="line"><span class="built_in">npm</span> config set registry https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org </span><br><span class="line"><span class="built_in">npm</span> install</span><br><span class="line">rm -R dist</span><br><span class="line"><span class="built_in">npm</span> run build <span class="comment">#编译项目</span></span><br></pre></td></tr></table></figure><p><strong>使用docker-compose启动服务</strong></p><p>docker-compose.yml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: '3'</span><br><span class="line"></span><br><span class="line"><span class="attribute">services:</span></span><br><span class="line">  redis:</span><br><span class="line">    <span class="attribute">image</span>: redis:3.2</span><br><span class="line">    <span class="attribute">container_name</span>: myRedis</span><br><span class="line">    <span class="attribute">restart</span>: always</span><br><span class="line">    <span class="attribute">command</span>: redis-server --requirepass 123456</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '6379:6379'</span><br><span class="line">  <span class="attribute">mysql:</span></span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    <span class="attribute">container_name</span>: myMysql</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '3306:3306' </span><br><span class="line">    <span class="attribute">environment:</span></span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/mysql/my.cnf:/etc/my.cnf</span><br><span class="line">      - /data/mysql/data:/var/lib/mysql</span><br><span class="line">      - /data/mysql/init:/docker-entrypoint-initdb.d/</span><br><span class="line">  <span class="attribute">vsftpd:</span></span><br><span class="line">    image: fauria/vsftpd</span><br><span class="line">    <span class="attribute">container_name</span>: myFtp</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '20:20'</span><br><span class="line">      - '21:21'</span><br><span class="line">      - '21100-21110:21100-21110'</span><br><span class="line">    <span class="attribute">environment:</span></span><br><span class="line">      FTP_USER: rams</span><br><span class="line">      <span class="attribute">FTP_PASS</span>: rams</span><br><span class="line">      <span class="attribute">FILE_OPEN_MODE</span>: 0777   # FILE_OPEN_MODE,LOCAL_UMASK用户上传文件的权限chmod</span><br><span class="line">      <span class="attribute">LOCAL_UMASK</span>: 022</span><br><span class="line">    <span class="attribute">privileged</span>: true</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/vsftpd:/home/vsftpd</span><br><span class="line">  <span class="attribute">nginx:</span></span><br><span class="line">    image: nginx</span><br><span class="line">    <span class="attribute">container_name</span>: myNginx</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '80:80'</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">      - /data/vsftpd:/data/vsftpd</span><br><span class="line">      - /data/rams/rams_web/dist:/data/rams/rams_web/dist</span><br></pre></td></tr></table></figure><p>启动docker-compose</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d       <span class="comment">#全部启动</span></span><br><span class="line">docker-compose up -d nginx <span class="comment">#启动单个</span></span><br><span class="line">docker-compose down        <span class="comment">#全部停掉</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 基础命令</title>
      <link href="/2019/07/02/docker/docker%20cmd/"/>
      <url>/2019/07/02/docker/docker%20cmd/</url>
      
        <content type="html"><![CDATA[<p><strong>HELP 命令</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">version</span>:版本</span><br><span class="line">docker info：信息</span><br><span class="line">docker <span class="comment">--help：帮助</span></span><br></pre></td></tr></table></figure><p><strong>docker 基础</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">docker images (-<span class="keyword">a</span>) (-q) (--digests) (--<span class="keyword">no</span>-<span class="built_in">trunc</span>)</span><br><span class="line">    -<span class="keyword">a</span> :列出本地所有的镜像（含中间映像层）</span><br><span class="line">    -q :只显示镜像ID。</span><br><span class="line">    --digests :显示镜像的摘要信息</span><br><span class="line">    --<span class="keyword">no</span>-<span class="built_in">trunc</span> :显示完整的镜像信息</span><br><span class="line">各个选项说明:</span><br><span class="line">    REPOSITORY：表示镜像的仓库源</span><br><span class="line">    TAG：镜像的标签</span><br><span class="line">    IMAGE ID：镜像ID</span><br><span class="line">    CREATED：镜像创建时间</span><br><span class="line">    SIZE：镜像大小</span><br><span class="line">    同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。</span><br><span class="line">    如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像</span><br><span class="line">    </span><br><span class="line">docker <span class="built_in">search</span> 某个XXX镜像名字 (--<span class="keyword">no</span>-<span class="built_in">trunc</span>) (-s) (--automated)</span><br><span class="line">    --<span class="keyword">no</span>-<span class="built_in">trunc</span> : 显示完整的镜像描述</span><br><span class="line">    -s : 列出收藏数不小于指定值的镜像。</span><br><span class="line">    --automated : 只列出 automated build类型的镜像；</span><br><span class="line">    网站 http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span></span><br><span class="line"></span><br><span class="line">docker rmi 某个XXX镜像名字ID  删除镜像</span><br><span class="line">    删除单个 docker rmi  -<span class="keyword">f</span> 镜像ID</span><br><span class="line">    删除多个 docker rmi -<span class="keyword">f</span> 镜像名<span class="number">1</span>:TAG 镜像名<span class="number">2</span>:TAG </span><br><span class="line">    删除全部 docker rmi -<span class="keyword">f</span> $(docker images -<span class="keyword">qa</span>)</span><br><span class="line"></span><br><span class="line"># 登陆http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span>查看版本</span><br><span class="line">docker pull 某个XXX镜像名字  下载镜像</span><br><span class="line">docker pull 镜像名字[:TAG]</span><br><span class="line"></span><br><span class="line">docker run --name=<span class="string">"容器新名字"</span> -d -<span class="keyword">p</span> <span class="number">8081</span>:<span class="number">8080</span> --privileged=true</span><br><span class="line"></span><br><span class="line">一次性删除多个容器</span><br><span class="line">    docker rm -<span class="keyword">f</span> $(docker <span class="keyword">ps</span> -<span class="keyword">a</span> -q)</span><br><span class="line">    docker <span class="keyword">ps</span> -<span class="keyword">a</span> -q | xargs docker rm</span><br><span class="line"></span><br><span class="line">查看容器日志</span><br><span class="line">  docker logs -<span class="keyword">f</span> -t --tail <span class="number">8</span> 容器ID</span><br><span class="line">    *   -t 是加入时间戳</span><br><span class="line">    *   -<span class="keyword">f</span> 跟随最新的日志打印</span><br><span class="line">    *   --tail 数字 显示最后多少条</span><br><span class="line"></span><br><span class="line">查看容器内运行的进程 docker top 容器ID</span><br><span class="line">查看容器内部细节 docker inspect 容器ID</span><br><span class="line">进入正在运行的容器并以命令行交互 docker exec -it 容器ID /bin/bash</span><br><span class="line">重新进入  docker attach 容器ID</span><br><span class="line">述两个区别</span><br><span class="line">      attach 直接进入容器启动命令的终端，不会启动新的进程</span><br><span class="line">      exec 是在容器中打开新的终端，并且可以启动新的进程</span><br><span class="line">从容器内拷贝文件到主机上 docker <span class="keyword">cp</span>  容器ID:容器内路径 目的主机路径</span><br></pre></td></tr></table></figure><p>命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">attach    <span class="comment"># 当前 shell 下 attach 连接指定运行镜像</span></span><br><span class="line">build     <span class="comment"># 通过 Dockerfile 定制镜像</span></span><br><span class="line"><span class="keyword">commit</span>    <span class="comment"># 提交当前容器为新的镜像</span></span><br><span class="line">cp        <span class="comment">#从容器中拷贝指定文件或者目录到宿主机中</span></span><br><span class="line"><span class="keyword">create</span>    <span class="comment"># 创建一个新的容器，同 run，但不启动容器</span></span><br><span class="line">diff      <span class="comment"># 查看 docker 容器变化</span></span><br><span class="line"><span class="keyword">events</span>    <span class="comment"># 从 docker 服务获取容器实时事件</span></span><br><span class="line">exec      <span class="comment"># 在已存在的容器上运行命令</span></span><br><span class="line"><span class="keyword">export</span>    <span class="comment"># 导出容器的内容流作为一个 tar 归档文件[对应 import ]</span></span><br><span class="line">history   <span class="comment"># 展示一个镜像形成历史</span></span><br><span class="line">images    <span class="comment"># 列出系统当前镜像</span></span><br><span class="line"><span class="keyword">import</span>    <span class="comment"># 从tar包中的内容创建一个新的文件系统映像[对应export]</span></span><br><span class="line">info      <span class="comment"># 显示系统相关信息</span></span><br><span class="line">inspect   <span class="comment"># 查看容器详细信息</span></span><br><span class="line"><span class="keyword">kill</span>      <span class="comment"># kill 指定 docker 容器</span></span><br><span class="line"><span class="keyword">load</span>      <span class="comment"># 从一个 tar 包中加载一个镜像[对应 save]</span></span><br><span class="line">login     <span class="comment"># 注册或者登陆一个 docker 源服务器</span></span><br><span class="line">logout    <span class="comment"># 从当前 Docker registry 退出</span></span><br><span class="line"><span class="keyword">logs</span>      <span class="comment"># 输出当前容器日志信息</span></span><br><span class="line">port      <span class="comment"># 查看映射端口对应的容器内部源端口</span></span><br><span class="line">pause     <span class="comment"># 暂停容器</span></span><br><span class="line">ps        <span class="comment"># 列出容器列表</span></span><br><span class="line">pull      <span class="comment"># 从docker镜像源服务器拉取指定镜像或者库镜像</span></span><br><span class="line">push      <span class="comment"># 推送指定镜像或者库镜像至docker源服务器</span></span><br><span class="line">restart   <span class="comment"># 重启运行的容器</span></span><br><span class="line">rm        <span class="comment"># 移除一个或者多个容器</span></span><br><span class="line">rmi       <span class="comment"># 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]</span></span><br><span class="line">run       <span class="comment"># 创建一个新的容器并运行一个命令</span></span><br><span class="line"><span class="keyword">save</span>      <span class="comment"># 保存一个镜像为一个 tar 包[对应 load]</span></span><br><span class="line"><span class="keyword">search</span>    <span class="comment"># 在 docker hub 中搜索镜像</span></span><br><span class="line"><span class="keyword">start</span>     <span class="comment"># 启动容器</span></span><br><span class="line"><span class="keyword">stop</span>      <span class="comment"># 停止容器</span></span><br><span class="line">tag       <span class="comment"># 给源中镜像打标签</span></span><br><span class="line">top       <span class="comment"># 查看容器中运行的进程信息</span></span><br><span class="line">unpause   <span class="comment"># 取消暂停容器</span></span><br><span class="line"><span class="keyword">version</span>   <span class="comment"># 查看 docker 版本号</span></span><br><span class="line"><span class="keyword">wait</span>      <span class="comment"># 截取容器停止时的退出状态值</span></span><br></pre></td></tr></table></figure><p><strong>将容器生成镜像</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.  从Hub上下载tomcat镜像到本地并成功运行 docker run -it -<span class="selector-tag">p</span> <span class="number">8080</span>:<span class="number">8080</span> tomcat</span><br><span class="line">    -<span class="selector-tag">p</span> 主机端口:docker容器端口</span><br><span class="line">    -P 随机分配端口</span><br><span class="line">    <span class="selector-tag">i</span>:交互</span><br><span class="line">    t:终端</span><br><span class="line"><span class="number">2</span>.故意删除上一步镜像生产tomcat容器的文档</span><br><span class="line">docker ps </span><br><span class="line">docker exec -it <span class="number">346</span>a87913be9  /bin/bash</span><br><span class="line">cd /webapps</span><br><span class="line">ls -l</span><br><span class="line">rm -rf docs</span><br><span class="line"><span class="number">3</span>.也即当前的tomcat运行实例是一个没有文档内容的容器， 以它为模板commit一个没有doc的tomcat新镜像zhw/tomcat02</span><br><span class="line">docker commit -a=<span class="string">"zhw"</span> -m=<span class="string">"自定义镜像"</span> <span class="number">346</span>a87913be9 zhw/tomcat2:<span class="number">1.0</span></span><br><span class="line">启动我们的新镜像并和原来的对比</span><br><span class="line">  启动zhw/tomcat02，它没有docs</span><br><span class="line">  新启动原来的tomcat，它有docs</span><br></pre></td></tr></table></figure><p><strong>DockerFile添加镜像</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得一个新镜像jingxiang,/mydocker/dockerfile2是Dockerfile</span></span><br><span class="line">docker build -f /mydocker/dockerfile2 -t jingxiang . </span><br><span class="line"></span><br><span class="line"><span class="comment"># VOLUME 创建数据卷</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/dataVolumeContainer1"</span>,<span class="string">"/dataVolumeContainer2"</span>]</span></span><br><span class="line"><span class="bash">CMD <span class="built_in">echo</span> <span class="string">"finished,--------success1"</span></span></span><br><span class="line"><span class="bash">CMD /bin/bash</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">docker run -it --name dc01 jingxiang</span></span><br><span class="line"><span class="bash"><span class="comment"># 共享数据卷</span></span></span><br><span class="line"><span class="bash">docker run -it --name dc02 --volumes-from dc01  jingxiang</span></span><br></pre></td></tr></table></figure><p><strong>DockerFile格式</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    基础镜像，当前新镜像是基于哪个镜像的</span><br><span class="line"><span class="keyword">MAINTAINER</span></span><br><span class="line">    镜像维护者的姓名和邮箱地址</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"></span></span><br><span class="line"><span class="bash">    容器构建时需要运行的命令</span></span><br><span class="line"><span class="bash">EXPOSE</span></span><br><span class="line"><span class="bash">    当前容器对外暴露出的端口</span></span><br><span class="line"><span class="bash">WORKDIR</span></span><br><span class="line"><span class="bash">    指定在创建容器后，终端默认登陆的进来工作目录，一个落脚点</span></span><br><span class="line"><span class="bash">ENV</span></span><br><span class="line"><span class="bash">    用来在构建镜像过程中设置环境变量</span></span><br><span class="line"><span class="bash"> </span></span><br><span class="line"><span class="bash">    ENV MY_PATH /usr/mytest 这个环境变量可以在后续的任何RUN指令中使用，这就如同在命令前面指定了环境变量前缀一样；也可以在其它指令中直接使用这些环境变量，比如：WORKDIR <span class="variable">$MY_PATH</span></span></span><br><span class="line"><span class="bash">ADD</span></span><br><span class="line"><span class="bash">    将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包</span></span><br><span class="line"><span class="bash">COPY</span></span><br><span class="line"><span class="bash">    类似ADD，拷贝文件和目录到镜像中。 将从构建上下文目录中 &lt;源路径&gt; 的文件/目录复制到新的一层的镜像内的 &lt;目标路径&gt; 位置</span></span><br><span class="line"><span class="bash">VOLUME</span></span><br><span class="line"><span class="bash">    容器数据卷，用于数据保存和持久化工作</span></span><br><span class="line"><span class="bash">CMD</span></span><br><span class="line"><span class="bash">    指定一个容器启动时要运行的命令</span></span><br><span class="line"><span class="bash">    Dockerfile 中可以有多个 CMD 指令，但只有最后一个生效，CMD 会被 docker run 之后的参数替换</span></span><br><span class="line"><span class="bash">ENTRYPOINT </span></span><br><span class="line"><span class="bash">    指定一个容器启动时要运行的命令</span></span><br><span class="line"><span class="bash">    ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数</span></span><br><span class="line"><span class="bash">ONBUILD</span></span><br><span class="line"><span class="bash">    当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发</span></span><br></pre></td></tr></table></figure><p><strong>自定义TOMCAT</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. mkdir -p /zhwfile/mydockerfile/tomcat9</span><br><span class="line"><span class="number">2</span>. 在上述目录下touch c.txt</span><br><span class="line"><span class="number">3</span>. 将jdk和tomcat安装的压缩包拷贝进上一步目录</span><br><span class="line">    apache-tomcat-<span class="number">9.0</span>.<span class="number">8</span>.tar.gz</span><br><span class="line">    jdk-<span class="number">8</span>u171-linux-x64.tar.gz</span><br><span class="line"><span class="number">4</span>.在/zhwfile/mydockerfile/tomcat9目录下新建Dockerfile文件</span><br><span class="line">目录内容:</span><br><span class="line"><span class="comment">#基础镜像，当前新镜像是基于哪个镜像的</span></span><br><span class="line"><span class="keyword">FROM</span>         centos </span><br><span class="line"><span class="comment">#镜像维护者的姓名和邮箱地址</span></span><br><span class="line"><span class="keyword">MAINTAINER</span>    zhw&lt;zhw731727335@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="comment">#把宿主机当前上下文的c.txt拷贝到容器/usr/local/路径下</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> c.txt /usr/<span class="built_in">local</span>/cincontainer.txt</span></span><br><span class="line"><span class="bash"><span class="comment">#把java与tomcat添加到容器中</span></span></span><br><span class="line"><span class="bash">ADD jdk-8u171-linux-x64.tar.gz /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="bash">ADD apache-tomcat-9.0.8.tar.gz /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="bash"><span class="comment">#安装vim编辑器</span></span></span><br><span class="line"><span class="bash">RUN yum -y install vim</span></span><br><span class="line"><span class="bash"><span class="comment">#设置工作访问时候的WORKDIR路径，登录落脚点</span></span></span><br><span class="line"><span class="bash">ENV MYPATH /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="bash">WORKDIR <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="bash"><span class="comment">#配置java与tomcat环境变量</span></span></span><br><span class="line"><span class="bash">ENV JAVA_HOME /usr/<span class="built_in">local</span>/jdk1.8.0_171</span></span><br><span class="line"><span class="bash">ENV CLASSPATH <span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span></span><br><span class="line"><span class="bash">ENV CATALINA_HOME /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="bash">ENV CATALINA_BASE /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="bash">ENV PATH <span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$CATALINA_HOME</span>/lib:<span class="variable">$CATALINA_HOME</span>/bin</span></span><br><span class="line"><span class="bash"><span class="comment">#容器运行时监听的端口</span></span></span><br><span class="line"><span class="bash">EXPOSE  8080</span></span><br><span class="line"><span class="bash"><span class="comment">#启动时运行tomcat</span></span></span><br><span class="line"><span class="bash"><span class="comment"># ENTRYPOINT ["/usr/local/apache-tomcat-9.0.8/bin/startup.sh" ]</span></span></span><br><span class="line"><span class="bash"><span class="comment"># CMD ["/usr/local/apache-tomcat-9.0.8/bin/catalina.sh","run"]</span></span></span><br><span class="line"><span class="bash">CMD /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/bin/startup.sh &amp;&amp; tail -F /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/bin/logs/catalina.out</span></span><br><span class="line"><span class="bash">5.在该目录下执行构建 docker build -t zhwTomcat</span></span><br><span class="line"><span class="bash">6.查看构建是否成功</span></span><br><span class="line"><span class="bash">docker images</span></span><br><span class="line"><span class="bash">7.运行：</span></span><br><span class="line"><span class="bash">docker run -d -p 9080:8080 --name myt9 -v /zhwfile/mydockerfile/tomcat9/<span class="built_in">test</span>:/usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/webapps/<span class="built_in">test</span> -v /zhwfile/mydockerfile/tomcat9/tomcat9logs/:/usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/logs --privileged=<span class="literal">true</span> zhwTomcat</span></span><br><span class="line"><span class="bash">8.验证是否成功：</span></span><br><span class="line"><span class="bash"> http://94.191.86.252:9080/</span></span><br><span class="line"><span class="bash">9.将项目放在/zhwfile/mydockerfile/tomcat9/<span class="built_in">test</span>下浏览器进行访问，查看是否成功。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker/docker-compose安装</title>
      <link href="/2019/07/02/docker/install%20docker/"/>
      <url>/2019/07/02/docker/install%20docker/</url>
      
        <content type="html"><![CDATA[<p>以下是在linux环境下的安装</p><p>1.<strong>安装docker</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</span></span><br><span class="line"><span class="comment"># 通过 uname -r 命令查看你当前的内核版本</span></span><br><span class="line">uname -r</span><br><span class="line"><span class="comment"># 使用 root 权限登录 Centos。确保 yum 包更新到最新。</span></span><br><span class="line">sudo yum <span class="keyword">update</span></span><br><span class="line"><span class="comment"># 卸载旧版本(如果安装过旧版本的话)</span></span><br><span class="line">sudo yum remove docker  docker-common docker-selinux docker-<span class="keyword">engine</span></span><br><span class="line"><span class="comment"># 安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span></span><br><span class="line">sudo yum <span class="keyword">install</span> -y yum-utils device-mapper-persistent-<span class="keyword">data</span> lvm2</span><br><span class="line"><span class="comment"># 设置yum源</span></span><br><span class="line">sudo yum-config-manager <span class="comment">--add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="comment"># 可以查看所有仓库中所有docker版本，并选择特定版本安装</span></span><br><span class="line">yum <span class="keyword">list</span> docker-ce <span class="comment">--showduplicates | sort -r</span></span><br><span class="line"><span class="comment"># 安装docker</span></span><br><span class="line">sudo yum <span class="keyword">install</span> docker-ce  <span class="comment">#由于repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0</span></span><br><span class="line">sudo yum <span class="keyword">install</span> &lt;FQPN&gt;  <span class="comment"># 例如：sudo yum install docker-ce-17.12.0.ce</span></span><br><span class="line"><span class="comment"># 启动并加入开机启动</span></span><br><span class="line">sudo systemctl <span class="keyword">start</span> docker</span><br><span class="line">sudo systemctl <span class="keyword">enable</span> docker</span><br><span class="line"><span class="comment"># 验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</span></span><br><span class="line">docker <span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>加速镜像</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http<span class="variable">s:</span>//<span class="built_in">get</span>.daocloud.io/daotools/set_mirror.<span class="keyword">sh</span> | <span class="keyword">sh</span> -s http://<span class="number">94.191</span>.<span class="number">114.178</span>.<span class="keyword">m</span>.daocloud.io</span><br><span class="line"><span class="keyword">vi</span> /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>问题：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">因为之前已经安装过旧版本的docker，在安装的时候报错如下：</span><br><span class="line">Transaction check error:</span><br><span class="line">  file /usr/bin/docker from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/docker-containerd from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/docker-containerd-shim from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/dockerd from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line"></span><br><span class="line">卸载旧版本的包</span><br><span class="line">sudo yum erase docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line"></span><br><span class="line">再次安装docker</span><br><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>Docker卸载：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker </span><br><span class="line">yum -y remove docker-ce</span><br><span class="line">rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span></span></span><br></pre></td></tr></table></figure><p>2.<strong>安装docker-componse</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装pip源</span></span><br><span class="line">yum -y <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum -y <span class="keyword">install</span> python-pip</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip <span class="keyword">install</span> docker-compose</span><br><span class="line"><span class="comment">#查找路径</span></span><br><span class="line">which docker-compose</span><br><span class="line"><span class="comment">#修改权限</span></span><br><span class="line">chmod +x 安装路径下的/docker-compose </span><br><span class="line"><span class="comment">#版本</span></span><br><span class="line">docker-compose <span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>3.<strong>docker离线安装</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">https://pan.baidu.com/s/13W2ZNMdkx2hwRGZTO9zQDA</span></span><br><span class="line"><span class="comment"># 1、解压</span></span><br><span class="line">tar -xvf docker-18.06.1-ce.tgz</span><br><span class="line"><span class="comment"># 2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下</span></span><br><span class="line">cp docker/* /usr/bin/</span><br><span class="line"><span class="comment"># 3、将docker注册为service</span></span><br><span class="line">vim /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="comment"># the default is not to use systemd for cgroups because the delegate issues still</span></span><br><span class="line"><span class="comment"># exists and systemd currently does not support the cgroup feature set required</span></span><br><span class="line"><span class="comment"># for containers run by docker</span></span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"><span class="comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class="line"><span class="comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"><span class="comment"># Uncomment TasksMax if your systemd version supports it.</span></span><br><span class="line"><span class="comment"># Only systemd 226 and above support this version.</span></span><br><span class="line"><span class="comment">#TasksMax=infinity</span></span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"><span class="comment"># set delegate yes so that systemd does not reset the cgroups of docker containers</span></span><br><span class="line">Delegate=yes</span><br><span class="line"><span class="comment"># kill only the docker process, not all processes in the cgroup</span></span><br><span class="line">KillMode=process</span><br><span class="line"><span class="comment"># restart the docker process if it exits prematurely</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="comment"># 4、启动 添加文件权限并启动docker</span></span><br><span class="line">chmod +x /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker<span class="comment">#启动Docker</span></span><br><span class="line">systemctl enable docker.service<span class="comment">#设置开机自启</span></span><br><span class="line"><span class="comment"># 5、验证</span></span><br><span class="line">systemctl status docker<span class="comment">#查看Docker状态</span></span><br><span class="line">docker -v<span class="comment">#查看Docker版本</span></span><br></pre></td></tr></table></figure><p>4.离线安装docker-compose</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//github.com/docker/compose/releases/tag/1.24.1</span></span><br><span class="line">下载后上传到服务器<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span>目录下</span><br><span class="line">cd <span class="meta-keyword">/usr/</span>local/bin</span><br><span class="line">mv docker-compose-Linux-x86_64  docker-compose</span><br><span class="line">sudo chmod +x docker-compose</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>es 简单操作</title>
      <link href="/2019/03/11/other/elastic%20search%20dump/"/>
      <url>/2019/03/11/other/elastic%20search%20dump/</url>
      
        <content type="html"><![CDATA[<h5 id="集群信息"><a href="#集群信息" class="headerlink" title="集群信息"></a>集群信息</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">GET</span> _cluster/health?pretty</span><br></pre></td></tr></table></figure><h5 id="设置搜索最大条数"><a href="#设置搜索最大条数" class="headerlink" title="设置搜索最大条数"></a>设置搜索最大条数</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT http:<span class="string">//ip</span><span class="function">:9200</span>/&#123;index&#125;<span class="string">/_settings</span> -d '&#123; <span class="string">"index"</span> : &#123; <span class="string">"max_result_window"</span> : 1000000000&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="查询全部索引"><a href="#查询全部索引" class="headerlink" title="查询全部索引"></a>查询全部索引</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">GET</span> _cat/indices</span><br></pre></td></tr></table></figure><h5 id="删除index"><a href="#删除index" class="headerlink" title="删除index"></a>删除index</h5><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> &#123;<span class="keyword">index</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="查询结果"><a href="#查询结果" class="headerlink" title="查询结果"></a>查询结果</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET &#123;index&#125;/&#123;type&#125;/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123; </span><br><span class="line">     <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查询分词结果"><a href="#查询分词结果" class="headerlink" title="查询分词结果"></a>查询分词结果</h5><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">直接查询分词结果</span><br><span class="line">GET &#123;index&#125;/&#123;<span class="built_in">type</span>&#125;/&#123;<span class="variable">_id</span>&#125;/<span class="variable">_termvectors</span>?fields=<span class="built_in">className</span></span><br><span class="line">使用指定分词器</span><br><span class="line">http:<span class="comment">//&#123;ip&#125;:9200/_analyze?analyzer=standard&amp;pretty&amp;text=文字</span></span><br></pre></td></tr></table></figure><h5 id="查询mapping"><a href="#查询mapping" class="headerlink" title="查询mapping"></a>查询mapping</h5><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">GET </span><span class="template-variable">&#123;index&#125;</span><span class="xml">/</span><span class="template-variable">&#123;type&#125;</span><span class="xml">/_mapping</span></span><br></pre></td></tr></table></figure><h5 id="导出mapping-–output-也可以指定的es服务器http-xxxx-9200-index"><a href="#导出mapping-–output-也可以指定的es服务器http-xxxx-9200-index" class="headerlink" title="导出mapping  (–output=也可以指定的es服务器http://xxxx:9200/index)"></a>导出mapping  (–output=也可以指定的es服务器<a href="http://xxxx:9200/index" target="_blank" rel="noopener">http://xxxx:9200/index</a>)</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--ignore-errors</span>=<span class="literal">true</span>  <span class="attribute">--scrollTime</span>=120m  <span class="attribute">--bulk</span>=<span class="literal">true</span> <span class="attribute">--input</span>=http://ip:9200/index <span class="attribute">--output</span>=E:\road_mapping.json <span class="attribute">--type</span>=mapping</span><br></pre></td></tr></table></figure><h5 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--ignore-errors</span>=<span class="literal">true</span>  <span class="attribute">--scrollTime</span>=120m <span class="attribute">--bulk</span>=<span class="literal">true</span> <span class="attribute">--input</span>=http://ip:9200/index <span class="attribute">--output</span>=E:\road.json <span class="attribute">--type</span>=data --searchBody <span class="string">"&#123;\"query\":&#123;\"wildcard\":&#123;\"kind\": \"*\"&#125;&#125;&#125;"</span></span><br></pre></td></tr></table></figure><h5 id="导入mapping"><a href="#导入mapping" class="headerlink" title="导入mapping"></a>导入mapping</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--input</span>=E:\road_mapping.json <span class="attribute">--type</span>=mapping <span class="attribute">--output</span>=http://ip:9200/index</span><br></pre></td></tr></table></figure><h5 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--input</span>=E:\road.json <span class="attribute">--type</span>=data <span class="attribute">--output</span>=http://ip:9200/index --limit 1000</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 简单操作</title>
      <link href="/2019/03/11/other/docker%20in%20out/"/>
      <url>/2019/03/11/other/docker%20in%20out/</url>
      
        <content type="html"><![CDATA[<h5 id="导出命令-镜像"><a href="#导出命令-镜像" class="headerlink" title="导出命令-镜像"></a>导出命令-镜像</h5><p>docker save [options] images [images…]<br>示例<br>docker save -o nginx.tar nginx:latest </p><h5 id="导入命令-镜像"><a href="#导入命令-镜像" class="headerlink" title="导入命令-镜像"></a>导入命令-镜像</h5><p>docker load [options]<br>示例<br>docker load -i nginx.tar </p><h5 id="容器生成镜像"><a href="#容器生成镜像" class="headerlink" title="容器生成镜像"></a>容器生成镜像</h5><p>docker commit -m “change somth” -a “somebody info” {容器id} {镜像:tag}<br>再导出镜像（保存有镜像历史）</p><h5 id="导出命令-容器"><a href="#导出命令-容器" class="headerlink" title="导出命令-容器"></a>导出命令-容器</h5><p>docker export [options] container<br>示例<br>docker export -o nginx-test.tar nginx-test </p><h5 id="导入命令-容器（运行没成功过…）"><a href="#导入命令-容器（运行没成功过…）" class="headerlink" title="导入命令-容器（运行没成功过…）"></a>导入命令-容器（运行没成功过…）</h5><p>docker import [options] file|URL|- [REPOSITORY[:TAG]]<br>示例<br>docker import nginx-test.tar nginx:imp </p><h5 id="从容器里面拷文件到宿主机"><a href="#从容器里面拷文件到宿主机" class="headerlink" title="从容器里面拷文件到宿主机"></a>从容器里面拷文件到宿主机</h5><p> docker cp 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径<br> 示例<br> docker cp testtomcat:/usr/local/tomcat/webapps/test/js/test.js /opt</p><h5 id="从宿主机拷文件到容器里面"><a href="#从宿主机拷文件到容器里面" class="headerlink" title="从宿主机拷文件到容器里面"></a>从宿主机拷文件到容器里面</h5><p> docker cp 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径<br> docker cp /opt/test.js testtomcat:/usr/local/tomcat/webapps/test/js</p><h5 id="显示命令行"><a href="#显示命令行" class="headerlink" title="显示命令行"></a>显示命令行</h5><p>docker ps –no-trunc</p><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><ol><li><p>elasticSearch Docker启动报错：max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p><ul><li><p>linux</p><p>解决办法1：<br>在宿主主机中执行<br>[root@localhost ~]# sysctl -w vm.max_map_count=262144<br>[root@localhost ~]# sysctl -a|grep vm.max_map_count<br>vm.max_map_count = 262144<br>这种重启会失效<br>解决办法2：<br>在/etc/sysctl.conf文件最后添加一行：<br>vm.max_map_count=262144<br>立即生效, 执行：<br>/sbin/sysctl -p</p></li><li><p>windows</p><p>docker-machine ssh<br>sudo sysctl -w vm.max_map_count=262144</p></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux常规操作</title>
      <link href="/2019/01/29/other/linux%20operator/"/>
      <url>/2019/01/29/other/linux%20operator/</url>
      
        <content type="html"><![CDATA[<h4 id="一般操作"><a href="#一般操作" class="headerlink" title="一般操作"></a>一般操作</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看文件大小：**du -h --<span class="built_in">max</span>-depth=<span class="number">1</span> /tools**</span><br><span class="line"></span><br><span class="line">查看进程：</span><br><span class="line">netstat -apn | <span class="keyword">grep</span> java</span><br><span class="line"><span class="keyword">ps</span> -aux | <span class="keyword">grep</span> java</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git操作</title>
      <link href="/2019/01/24/other/git%20operator/"/>
      <url>/2019/01/24/other/git%20operator/</url>
      
        <content type="html"><![CDATA[<h4 id="一般操作"><a href="#一般操作" class="headerlink" title="一般操作"></a>一般操作</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查看：*<span class="strong">*git status -s*</span><span class="strong">*</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">暂存文件的命令：*</span><span class="strong">*git add &lt;文件名&gt;*</span><span class="strong">*</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">将被修改的文件暂存并提交的命令：*</span><span class="strong">*git commit -a*</span>* </span><br><span class="line"></span><br><span class="line">放弃未暂存文件的修改命令：*<span class="strong">*git checkout -- &lt;文件名&gt;*</span><span class="strong">*</span></span><br></pre></td></tr></table></figure><h4 id="强制同步代码"><a href="#强制同步代码" class="headerlink" title="强制同步代码"></a>强制同步代码</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch <span class="comment">--all</span></span><br><span class="line">git <span class="keyword">reset</span>  <span class="comment">--hard origin/要强制同步的分支！</span></span><br><span class="line">git pullx</span><br></pre></td></tr></table></figure><h4 id="git文件太大无法下载"><a href="#git文件太大无法下载" class="headerlink" title="git文件太大无法下载"></a>git文件太大无法下载</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="params">--global</span> http.postBuffer 524288000</span><br><span class="line"></span><br><span class="line">git clone https:<span class="string">//xxx.git</span> E:\workspace\blog <span class="params">--depth</span> 1</span><br><span class="line"><span class="keyword">cd</span> E:\workspace\blog</span><br><span class="line">git fetch <span class="params">--unshallow</span></span><br></pre></td></tr></table></figure><h4 id="git只合并某次commit"><a href="#git只合并某次commit" class="headerlink" title="git只合并某次commit"></a>git只合并某次commit</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>##### 使用场景：因开发两个分支并行开发，直接合并会造成很多问题。只是想合并某次改变的commit，就可以实用git cherry-pick</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>通过git log可以查看当前分支的所有提交的哈希值（ID）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>切到需要合并的目标分支</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>运行 git cherry-pick 哈希值</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>如果遇到error，运行 git status查看 ummerged 下红色的文件路径，用编辑器打开，修改（寻找 === 标志， 上半是旧代码，下半是新代码，自己决定取舍）</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>完成所有冲突文件修改后，git add 对应文件</span><br><span class="line"></span><br><span class="line"><span class="bullet">6. </span>运行 git cherry-pick --continue 即完成。</span><br><span class="line"></span><br><span class="line">   注意：这时会弹出 一段可能会很长的描述性文字，可以全部删除，改成自己要的文字，一般我是保留最上那行，跟之前的历史描述一致，方便查找。不删除也无所谓。然后保存退出即可。</span><br><span class="line">   这个界面是vi的编辑界面，一次删除多行的命令为 “数字X+dd” 即可删除当前光标一下的X行内容。</span><br></pre></td></tr></table></figure><h4 id="给指定提交打tag"><a href="#给指定提交打tag" class="headerlink" title="给指定提交打tag"></a>给指定提交打tag</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="tag">&lt;版本号&gt;</span> <span class="tag">&lt;SHA值&gt;</span> -m <span class="string">"&lt;备注信息&gt;"</span></span><br><span class="line">如<span class="tag">&lt;SHA值&gt;</span>没有，则最新版本打<span class="keyword">tag</span></span><br><span class="line"></span><br><span class="line">比如 git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">1.0</span>.<span class="number">0</span> <span class="number">0</span>c3b62d -m <span class="string">"Release Edition v1.0.0"</span> 就是为SHA为<span class="number">0</span>c3b62d的这次提交打了<span class="number">1.0</span>发行版的<span class="keyword">tag</span></span><br></pre></td></tr></table></figure><h4 id="删除本地tag"><a href="#删除本地tag" class="headerlink" title="删除本地tag"></a>删除本地tag</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-d</span> <span class="tag">&lt;版本号&gt;</span></span><br></pre></td></tr></table></figure><h4 id="推送标签"><a href="#推送标签" class="headerlink" title="推送标签"></a>推送标签</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">所有tag：git <span class="built_in">push</span> <span class="built_in">origin</span> --tags</span><br><span class="line">指定版本：git <span class="built_in">push</span> <span class="built_in">origin</span> &lt;版本号&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>springboot2.0.6使用sharding jdbc3.0</title>
      <link href="/2018/11/26/springboot/sharding%20jdbc/"/>
      <url>/2018/11/26/springboot/sharding%20jdbc/</url>
      
        <content type="html"><![CDATA[<p>当系统达到一定数据量的时候就需要分库分表处理等一些操作。</p><p>mycat（官网：<a href="http://www.mycat.io）一个彻底开源的，面向企业应用开发的大数据库集群。对java代码透明化。" target="_blank" rel="noopener">http://www.mycat.io）一个彻底开源的，面向企业应用开发的大数据库集群。对java代码透明化。</a></p><p>Sharding-jdbc（官网：<a href="http://shardingsphere.io/index_zh.html）定位为轻量级Java框架，在Java的JDBC层提供的额外服务。" target="_blank" rel="noopener">http://shardingsphere.io/index_zh.html）定位为轻量级Java框架，在Java的JDBC层提供的额外服务。</a> 它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架。</p><p>本文实现springboot2.0.6使用sharding jdbc3.0+mybatis的分库分表，依照官网例子所得</p><p><strong>pom.xml</strong></p><p>mysql是5.7版本，驱动com.mysql.jdbc.Driver，注意mysql-connector-java版本号也相关</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></span><br><span class="line"><span class="xml">xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo-sharding-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span>demo-sharding-jdbc<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sharding-sphere.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">sharding-sphere.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--spring-boot-web--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--mybatis-spring-boot-starter和pagehelper-spring-boot-starter中都包含，但是5.10版本callback类已经缺失，故直接申明引用--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.20.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- sharding-jdbc --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;sharding-sphere.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;sharding-sphere.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>sql</strong></p><p>创建2个库，分别创建以下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">EXISTS</span> <span class="string">`t_order_0`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_order_0`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`order_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`status`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态（1正常）'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否已删除(0未删除，1已经删除)'</span>,</span><br><span class="line">  <span class="string">`create_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'订单表'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">EXISTS</span> <span class="string">`t_order_1`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_order_1`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`order_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`status`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态（1正常）'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否已删除(0未删除，1已经删除)'</span>,</span><br><span class="line">  <span class="string">`create_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'订单表'</span>;</span><br></pre></td></tr></table></figure><p><strong>单库分表配置文件application-dev1.properties</strong></p><p>数据库sharding</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这是单库的分表</span></span><br><span class="line">spring.application.<span class="attribute">name</span>=demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding.jdbc</span></span><br><span class="line">sharding.jdbc.datasource.<span class="attribute">names</span>=ds0</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">type</span>=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">url</span>=jdbc:mysql://localhost:3307/sharding?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">username</span>=root</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">password</span>=123456</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">driver-class-name</span>=<span class="variable">$&#123;sharding.jdbc.datasource.ds.driver-class-name&#125;</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">initial-size</span>=1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">max-active</span>=50</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">min-idle</span>=1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">time-between-eviction-runs-millis</span>=60000</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">min-evictable-idle-time-millis</span>=300000</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">validation-query</span>=select 1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-while-idle</span>=<span class="literal">true</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-on-borrow</span>=<span class="literal">false</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-on-return</span>=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.<span class="attribute">actual-data-nodes</span>=ds0.t_order_$-&gt;&#123;0<span class="built_in">..</span>1&#125;</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.<span class="attribute">sharding-column</span>=order_id</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.<span class="attribute">algorithm-expression</span>=t_order_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.<span class="attribute">key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">sharding.jdbc.config.sharding.props.sql.<span class="attribute">show</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#mybatis</span></span><br><span class="line">mybatis.<span class="attribute">mapper-locations</span>=classpath:mapper/*Mapper.xml</span><br><span class="line">pagehelper.<span class="attribute">helperDialect</span>=mysql</span><br><span class="line">pagehelper.<span class="attribute">reasonable</span>=<span class="literal">true</span></span><br><span class="line">pagehelper.<span class="attribute">supportMethodsArguments</span>=<span class="literal">true</span></span><br><span class="line">pagehelper.<span class="attribute">params</span>=count=countSql</span><br><span class="line"></span><br><span class="line">logging.level.com.example.demo.<span class="attribute">dao</span>=DEBUG</span><br><span class="line">logging.level.com.example.<span class="attribute">demo</span>=INFO</span><br><span class="line"><span class="comment">#logging.level.file=/Users/yaojie/Desktop/demo.log</span></span><br></pre></td></tr></table></figure><p><strong>分库分表配置文件application-dev.properties</strong></p><p>数据库ds0，ds1</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding.jdbc</span></span><br><span class="line">sharding.jdbc.datasource.names=ds0,ds1</span><br><span class="line">sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line">sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3307/ds0?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding.jdbc.datasource.ds0.username=root</span><br><span class="line">sharding.jdbc.datasource.ds0.password=123456</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.driver-class-name=$&#123;<span class="attribute">sharding.jdbc.datasource.ds.driver-class-name&#125;</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.initial-size=1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.max-active=50</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.min-idle=1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.time-between-eviction-runs-millis=60000</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.min-evictable-idle-time-millis=300000</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.validation-query=select 1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-while-idle=true</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-on-borrow=false</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-on-return=false</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.url=jdbc</span>:mysql://localhost:3307/ds1?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.username</span>=root</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.password</span>=123456</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.driver-class-name</span>=$&#123;sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span><span class="variable">.driver-class-name</span>&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.initial-size</span>=1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.max-active</span>=50</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.min-idle</span>=1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.time-between-eviction-runs-millis</span>=60000</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.min-evictable-idle-time-millis</span>=300000</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.validation-query</span>=select 1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-while-idle</span>=true</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-on-borrow</span>=false</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-on-return</span>=false</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-database-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=user_id</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-database-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=ds$-&gt;&#123;user_id % 2&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-data-source-name</span>=ds0</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.actual-data-nodes</span>=ds$-&gt;&#123;0..1&#125;<span class="variable">.t_order_</span>$-&gt;&#123;0..1&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=order_id</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=t_order_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.actual-data-nodes</span>=ds$-&gt;&#123;0..1&#125;<span class="variable">.t_order_item_</span>$-&gt;&#123;0..1&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=order_id</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=t_order_item_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.props</span><span class="variable">.sql</span><span class="variable">.show</span>=true</span><br><span class="line"></span><br><span class="line">#mybatis</span><br><span class="line">mybatis<span class="variable">.mapper-locations</span>=classpath:mapper/*Mapper<span class="variable">.xml</span></span><br><span class="line">pagehelper<span class="variable">.helperDialect</span>=mysql</span><br><span class="line">pagehelper<span class="variable">.reasonable</span>=true</span><br><span class="line">pagehelper<span class="variable">.supportMethodsArguments</span>=true</span><br><span class="line">pagehelper<span class="variable">.params</span>=count=countSql</span><br><span class="line"></span><br><span class="line">logging<span class="variable">.level</span><span class="variable">.com</span><span class="variable">.example</span><span class="variable">.demo</span><span class="variable">.dao</span>=DEBUG</span><br><span class="line">logging<span class="variable">.level</span><span class="variable">.com</span><span class="variable">.example</span><span class="variable">.demo</span>=INFO</span><br><span class="line">#logging<span class="variable">.level</span><span class="variable">.file</span>=/Users/yaojie/Desktop/demo<span class="variable">.log</span></span><br></pre></td></tr></table></figure><p><strong>配置文件application.properties</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.profiles</span><span class="selector-class">.active</span>=dev</span><br></pre></td></tr></table></figure><p><strong>DAO的mybatis写法即可</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert</span>(&#123;<span class="string">"insert into t_order(`order_id`,`user_id`) values(#&#123;orderId&#125;, #&#123;userId&#125;)"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertOrder</span><span class="params">(OrderDto orderDto)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样即可实现分库分表</p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>springboot一些方法</title>
      <link href="/2018/11/23/springboot/tip-springboot%20tip/"/>
      <url>/2018/11/23/springboot/tip-springboot%20tip/</url>
      
        <content type="html"><![CDATA[<p>1、动态加载类，不需要<code>@Autowired</code>注入类,可在没有<code>@Component</code>中使用</p><p>使用</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SspSchoolClient sspSchoolClient = SpringUtil.getBean(SspSchoolClient.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure><p>方法</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ApplicationObjectSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.support.WebApplicationContextUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringUtil</span> <span class="keyword">extends</span> <span class="title">ApplicationObjectSupport</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext wac;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(clazz)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Object <span class="title">getBean</span><span class="params">(String beanName)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(beanName)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Object <span class="title">getBean</span><span class="params">(String beanName, ServletContext sc)</span> </span>&#123;</span><br><span class="line">        WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(sc);</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(beanName)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        wac = <span class="keyword">super</span>.getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>docker安装工具</title>
      <link href="/2018/10/08/docker/docker%20install%20tools/"/>
      <url>/2018/10/08/docker/docker%20install%20tools/</url>
      
        <content type="html"><![CDATA[<p>环境：docker 17.03.0</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">windwos坑：</span><br><span class="line">docker是运行在Linux上的，在Windows中运行docker，实际上还是在Windows下先安装了一个Linux环境，然后在这个系统中运行的docker。也就是说，服务中使用的localhost指的是这个Linux环境的地址，而不是我们的宿主环境Windows。我们可以通过命令： </span><br><span class="line">docker-machine<span class="built_in"> ip default </span></span><br><span class="line">找到这个Linux的ip地址</span><br><span class="line"></span><br><span class="line">docker的-v在windows上也是坑</span><br><span class="line"></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3306:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=123456 --name mysql mysql:5.7 <span class="attribute">--character-set-server</span>=utf8mb4 <span class="attribute">--collation-server</span>=utf8mb4_general_ci</span><br></pre></td></tr></table></figure><p>以下是在linux环境下的安装</p><p>1.<strong>安装mysql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line">docker run -d -p 3307:3306 <span class="comment">--privileged=true -v /Users/yaojie/Documents/docker/mysql/my.cnf:/etc/mysql/my.cnf -v /Users/yaojie/Documents/docker/mysql/my:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql:5.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--privileged=true：容器内的root拥有真正root权限，否则容器内root只是外部普通用户权限</span></span><br><span class="line">-v /docker/mysql/conf/my.cnf:/etc/my.cnf：映射配置文件</span><br><span class="line">-v /docker/mysql/data:/var/lib/mysql：映射数据目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'rams'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span>,<span class="keyword">CREATE</span>,<span class="keyword">UPDATE</span>,<span class="keyword">DELETE</span>,<span class="keyword">DROP</span>,<span class="keyword">ALTER</span> <span class="keyword">ON</span> rams.* <span class="keyword">TO</span> <span class="string">'rams'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">User</span> = <span class="string">'root'</span> <span class="keyword">and</span> Host=<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p>本地文件/docker/mysql/conf/my.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="comment">#data     = /var/lib/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主服务器</span></span><br><span class="line"><span class="comment">#server-id = 1</span></span><br><span class="line"><span class="comment">#log_bin = mysql-bin</span></span><br><span class="line"><span class="comment">#lower_case_table_names=1</span></span><br></pre></td></tr></table></figure><p>创建本地目录/docker/mysql/data</p><p>2.<strong>安装redis</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">redis:</span><span class="number">3.2</span></span><br><span class="line">docker run --name redis -d -p <span class="number">6379</span>:<span class="number">6379</span> -v <span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker<span class="regexp">/redis/</span><span class="string">data:</span>/data <span class="string">redis:</span><span class="number">3.2</span> redis-server --requirepass <span class="string">"mypassword"</span> --appendonly yes</span><br><span class="line"></span><br><span class="line">-p <span class="number">6379</span>:<span class="number">6379</span> : 将容器的<span class="number">6379</span>端口映射到主机的<span class="number">6379</span>端口</span><br><span class="line">-v $PWD<span class="regexp">/data:/</span><span class="string">data :</span> 将主机中当前目录下的data挂载到容器的/data</span><br><span class="line">redis-server --appendonly <span class="string">yes :</span> 在容器执行redis-server启动命令，并打开redis持久化配置</span><br></pre></td></tr></table></figure><p>创建本地目录/Users/yaojie/Documents/docker/redis/data</p><p>3.<strong>安装rabbitmq</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">search</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span></span><br><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span>     |  <span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:3.6.9-management</span></span><br><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">run</span> <span class="selector-tag">-d</span> <span class="selector-tag">--name</span> <span class="selector-tag">rabbitmq</span> <span class="selector-tag">-p</span> <span class="selector-tag">5671</span><span class="selector-pseudo">:5671</span> <span class="selector-tag">-p</span> <span class="selector-tag">5672</span><span class="selector-pseudo">:5672</span> <span class="selector-tag">-p</span> <span class="selector-tag">4369</span><span class="selector-pseudo">:4369</span> <span class="selector-tag">-p</span> <span class="selector-tag">25672</span><span class="selector-pseudo">:25672</span> <span class="selector-tag">-p</span> <span class="selector-tag">15671</span><span class="selector-pseudo">:15671</span> <span class="selector-tag">-p</span> <span class="selector-tag">15672</span><span class="selector-pseudo">:15672</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">http</span>:<span class="comment">//宿主机IP:15672，默认创建了一个 guest 用户，密码也是 guest</span></span><br><span class="line"><span class="selector-tag">management</span> 是带界面的<span class="selector-tag">rabbitmq</span></span><br></pre></td></tr></table></figure><p>4.<strong>安装ftp</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker pull fauria/vsftpd</span><br><span class="line">docker run -d -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>vsftpd:<span class="meta-keyword">/home/</span>vsftpd -p <span class="number">20</span>:<span class="number">20</span> -p <span class="number">21</span>:<span class="number">21</span> -p <span class="number">21100</span><span class="number">-21110</span>:<span class="number">21100</span><span class="number">-21110</span> -e FTP_USER=test -e FTP_PASS=test --name vsftpd fauria/vsftpd</span><br><span class="line"></span><br><span class="line">会以登录用户名 (test) 创建一个目录 (/Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>vsftpd/test) 作为 ftp 根目录</span><br><span class="line">测试时发现不加 -p <span class="number">20</span>:<span class="number">20</span> 依然可以正常操作</span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加新用户</span></span><br><span class="line">docker exec -it vsftpd <span class="meta-keyword">/bin/</span>bash</span><br><span class="line">mkdir <span class="meta-keyword">/home/</span>vsftpd<span class="class">/&#123;myuser&#125;</span></span><br><span class="line"><span class="class">chown -R ftp:ftp <span class="meta-keyword">/home/</span>vsftpd(请别忘了这一句的执行否者写文件的时候可能会存在没有权限问题)</span></span><br><span class="line"><span class="class">vi <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.txt（奇数行用户名 偶数行密码）</span></span><br><span class="line"><span class="class"><span class="meta-keyword">/usr/</span>bin/db_load -T -t hash -f <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.txt <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.db</span></span><br><span class="line"><span class="class">exit</span></span><br><span class="line"><span class="class">docker restart vsftpd</span></span><br></pre></td></tr></table></figure><p>安装tomcat映射ftp的文件以http方式提供出去</p><p>首先在本地/Users/yaojie/Documents/docker/tomcat/server.xml的host中增加：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">"/Users/yaojie/Documents/docker/vsftpd"</span> <span class="attribute">path</span>=<span class="string">"/images"</span> /&gt;</span><br></pre></td></tr></table></figure><p>以上ftp已创建目录/Users/yaojie/Documents/docker/vsftpd为ftp的根目录</p><p>docker部署tomcat</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">tomcat:</span><span class="number">7.0</span><span class="number">.75</span></span><br><span class="line">docker run -d -v <span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker<span class="regexp">/tomcat/</span>server.<span class="string">xml:</span><span class="regexp">/usr/</span>local<span class="regexp">/tomcat/</span>conf<span class="regexp">/server.xml -v /</span>Users<span class="regexp">/yaojie/</span>Documents<span class="regexp">/docker/</span><span class="string">vsftpd:</span><span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker/vsftpd -p <span class="number">9090</span>:<span class="number">8080</span> --name tomcat <span class="string">tomcat:</span><span class="number">7.0</span><span class="number">.75</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://localhost:9090/images/test/timg.jpeg即可" target="_blank" rel="noopener">http://localhost:9090/images/test/timg.jpeg即可</a></p><p>5.<strong>安装es</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">elasticsearch:</span><span class="number">5.6</span><span class="number">.6</span></span><br><span class="line"></span><br><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms512m -Xmx512m"</span> -d -p <span class="number">9200</span>:<span class="number">9200</span> -p <span class="number">9300</span>:<span class="number">9300</span> -v <span class="regexp">/具体地址/</span>elasticsearch.<span class="string">yml:</span><span class="regexp">/usr/</span>share<span class="regexp">/elasticsearch/</span>config<span class="regexp">/elasticsearch.yml -v /</span>本地存放数据目录(先创建好)<span class="regexp">/data:/</span>usr<span class="regexp">/share/</span>elasticsearch/data --name myes <span class="string">elasticsearch:</span><span class="number">5.6</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>6.<strong>安装postgis</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mdillon/<span class="symbol">postgis:</span><span class="number">10</span></span><br><span class="line"></span><br><span class="line">docker run --name mypostgis -e POSTGRES_PASSWORD=root -e POSTGRES_USER=user_ctserver -v 本地目录<span class="symbol">:/var/lib/postgresql/data</span> -p <span class="number">54321</span><span class="symbol">:</span><span class="number">5432</span> -d mdillon/<span class="symbol">postgis:</span><span class="number">10</span></span><br></pre></td></tr></table></figure><p>7.<strong>安装yapi</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mongo-yapi -v /tools/docker/yapi/mongo_data_yapi:/data/db mongo</span><br><span class="line"></span><br><span class="line">docker pull registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi</span><br><span class="line"></span><br><span class="line">docker run -it --rm --link mongo-yapi:mongo --entrypoint npm --workdir /api/vendors registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi run install-server</span><br><span class="line"></span><br><span class="line">docker run -d --name yapi --link mongo-yapi:mongo --workdir /api/vendors -<span class="selector-tag">p</span> <span class="number">3000</span>:<span class="number">3000</span> registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi server/app.js</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> 登录账号 <a href="mailto:admin@admin.com" target="_blank" rel="noopener">admin@admin.com</a>，密码 ymfe.org</p><p><strong>注：docker简单操作</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">导出命令-镜像</span><br><span class="line">docker save [<span class="keyword">options</span>] images [images...] </span><br><span class="line">示例 </span><br><span class="line">docker save -<span class="keyword">o</span> nginx.tar nginx:latest </span><br><span class="line"></span><br><span class="line">导入命令-镜像</span><br><span class="line">docker load [<span class="keyword">options</span>] </span><br><span class="line">示例 </span><br><span class="line">docker load -i nginx.tar </span><br><span class="line"></span><br><span class="line">容器生成镜像-</span><br><span class="line">docker commit -<span class="keyword">m</span> <span class="string">"change somth"</span> -<span class="keyword">a</span> <span class="string">"somebody info"</span> [容器id] [新的镜像:<span class="keyword">tag</span>]</span><br><span class="line">再导出镜像</span><br><span class="line"></span><br><span class="line">导出命令-容器</span><br><span class="line">docker export [<span class="keyword">options</span>] container </span><br><span class="line">示例 </span><br><span class="line">docker export -<span class="keyword">o</span> nginx-test.tar nginx-test </span><br><span class="line"></span><br><span class="line">导入命令-容器</span><br><span class="line">docker import [<span class="keyword">options</span>] <span class="keyword">file</span>|URL|- [REPOSITORY[:TAG]] </span><br><span class="line">示例 </span><br><span class="line">docker import nginx-test.tar nginx:imp </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">从容器里面拷文件到宿主机</span><br><span class="line"> docker <span class="keyword">cp</span> 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径 </span><br><span class="line"> 示例 </span><br><span class="line"> docker <span class="keyword">cp</span> testtomcat：/usr/local/tomcat/webapps/test/js/test.js /<span class="keyword">opt</span></span><br><span class="line"></span><br><span class="line">从宿主机拷文件到容器里面</span><br><span class="line"> docker <span class="keyword">cp</span> 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径</span><br><span class="line"> docker <span class="keyword">cp</span> /<span class="keyword">opt</span>/test.js testtomcat：/usr/local/tomcat/webapps/test/js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> docker <span class="keyword">ps</span> --<span class="keyword">no</span>-<span class="built_in">trunc</span> </span><br><span class="line"> </span><br><span class="line"> 镜像-<span class="keyword">tag</span>-搜索：</span><br><span class="line"> http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span>/</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gitlab+jenkins部署springboot</title>
      <link href="/2018/09/28/other/gitlab_jenkins+springboot/"/>
      <url>/2018/09/28/other/gitlab_jenkins+springboot/</url>
      
        <content type="html"><![CDATA[<p>环境：linux</p><ul><li>部署Gitlab</li></ul><p>邮件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">service postfix start</span><br></pre></td></tr></table></figure><p>Gitlab</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> gitlab-ce</span><br></pre></td></tr></table></figure><p>编辑访问地址</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb;</span><br><span class="line">以下</span><br><span class="line">external_url 'http://IP:<span class="number">1008</span>0'                                                                                                     </span><br><span class="line">unicorn['port'] = <span class="number">18080</span></span><br></pre></td></tr></table></figure><p>使配置生效且重新启动</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="meta">opt</span>/gitlab/<span class="keyword">bin/gitlab-ctl </span>reconfigure<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>系统防火墙啥的关注下</p><p>访问<a href="http://IP:10080" target="_blank" rel="noopener">http://IP:10080</a> ，初次进入需要设置管理员密码，用户默认root</p><p><strong><em>备注</em></strong></p><p>一些常用命令：</p><p>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl status<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail –查看所有日志<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail nginx/gitlab_access.log –查看nginx访问日志<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail unicorn –跟踪unicorn的状态</p><p>一些目录结构：</p><p>主配置文件：/etc/gitlab/gitlab.rb // 可以自定义一些邮件服务等<br>日志地址：/var/log/gitlab/ // 对应各服务的打印日志<br>服务地址：/var/opt/gitlab/ // 对应各服务的主目录<br>仓库地址：/var/opt/gitlab/git-data // 记录项目仓库等提交信息<br>重置配置：gitlab-ctl reconfigure // 不要乱用，会重置为最原始的配置的<br>重启服务：gitlab-ctl stop/start/restart/uninstall // 停止、启动、重启、卸载<br>默认安装：postgres、nginx、redis、unicorn …… </p><p>测试邮件：执行 gitlab-rails console进入控制台。 然后在控制台提示符后输入下面的命令 发送一封测试邮件：Notify.test_email(‘收件人邮箱’, ‘邮件标题’, ‘邮件正文’).deliver_now</p><ul><li>部署jenkins</li></ul><p><strong><em>前提</em></strong></p><ol><li>安装有jdk</li><li>安装有maven</li><li>在<a href="https://jenkins.io/download/" target="_blank" rel="noopener">https://jenkins.io/download/</a> 下载war包</li></ol><p>默认情况下Jenkins在编译好后会杀掉所有衍生进程。这里需要禁止这个功能：在启动Jenkins的时候直接通过Java选项来关闭的这个功能，这个war又自带的jetty，所以可以直接启动：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -Dhudson<span class="selector-class">.util</span><span class="selector-class">.ProcessTree</span><span class="selector-class">.disable</span>=true -jar jenkins<span class="selector-class">.war</span> &amp;</span><br></pre></td></tr></table></figure><p>也可以放入tomcat等服务器启动。</p><p>这里默认端口8080，所以访问<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a> 即可</p><p>(1) 按照提示全局配置：</p><ol><li>填写Jenkins自动生成的随机的按照口令</li><li>建议选择安装官方推荐插件</li><li>配置用户名密码</li><li>至此进入系统，以下全局配置</li><li>系统管理-》全局工具配置 （1）jdk路径（2）maven路径（3）maven-setting.xml路径。去掉勾选自动安装</li><li>插件：Git和Git Paramter，Maven Integration，publish over SSH、SSH插件</li></ol><p>(2) 按照提示配置springboot项目：</p><p>首页点击<strong>新建</strong>：输入项目名称等一系列操作截图：</p><ol><li>-<img src="/images/other/gitlab_jenkins+springboot_1.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_2.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_3.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_4.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_5.jpeg" alt></li></ol><p>执行的shell，kill旧项目，删除旧项目，启动新项目，备份老项目</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DATE=$(date +%Y%m%d)</span><br><span class="line">export JAVA_HOME PATH CLASSPATH</span><br><span class="line">JAVA_HOME=<span class="regexp">/Library/</span>Java/JavaVirtualMachines/jdk1.<span class="number">8.0_161</span>.jdk/Contents/Home</span><br><span class="line">PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH</span><br><span class="line">DIR=<span class="regexp">/Users/xxx</span><span class="regexp">/Desktop/springboot</span>-<span class="keyword">study</span></span><br><span class="line">JARFILE=springboot-<span class="keyword">study</span>-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d $DIR/backup ];then</span><br><span class="line">   <span class="keyword">mkdir</span> -p $DIR/backup</span><br><span class="line">fi</span><br><span class="line">cd $DIR</span><br><span class="line"></span><br><span class="line">ps -ef | <span class="keyword">grep</span> $JARFILE | <span class="keyword">grep</span> -v <span class="keyword">grep</span> | awk <span class="string">'&#123;print $2&#125;'</span> | xargs <span class="keyword">kill</span> -<span class="number">9</span></span><br><span class="line">mv $JARFILE backup/$JARFILE$DATE</span><br><span class="line">mv -f /Users/xxx/Documents/apache-maven-<span class="number">3.3</span>.<span class="number">9</span>/.m2/repository/com/example/springboot-<span class="keyword">study</span>/<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT/$JARFILE .</span><br><span class="line"></span><br><span class="line">java -jar $JARFILE --server.port=<span class="number">8888</span> &gt; out.log &amp;</span><br><span class="line"><span class="keyword">if</span> [ $? = <span class="number">0</span> ];then</span><br><span class="line">        <span class="keyword">sleep</span> <span class="number">30</span></span><br><span class="line">        tail -n <span class="number">50</span> out.log</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cd backup/</span><br><span class="line">ls -<span class="keyword">lt</span>|awk <span class="string">'NR&gt;5&#123;print $NF&#125;'</span>|xargs rm -rf</span><br></pre></td></tr></table></figure><p>完结…</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>验证码</title>
      <link href="/2018/09/17/other/captcha/"/>
      <url>/2018/09/17/other/captcha/</url>
      
        <content type="html"><![CDATA[<p>验证码类</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class CaptchaDto &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">byte</span>[] <span class="built_in">image</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getCode() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setCode(<span class="keyword">final</span> <span class="keyword">String</span> code) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">byte</span>[] getImage() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">image</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImage(<span class="keyword">final</span> <span class="built_in">byte</span>[] <span class="built_in">image</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">image</span> = <span class="built_in">image</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成的类Util</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.CaptchaDto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.geom.AffineTransform;</span><br><span class="line"><span class="keyword">import</span> java.awt.<span class="built_in">image</span>.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class VerifyCodeUtil &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random <span class="built_in">random</span> = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符集，排除0和O</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">char</span>[] codeOption = &#123; <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>,</span><br><span class="line">            <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//randomCode 为验证码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CaptchaDto generateCaptcha(<span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> <span class="built_in">int</span> codeCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span>[] fonts = &#123; <span class="string">"Bodoni MT"</span>, <span class="string">"Times New Roman"</span>, <span class="string">"Palatino Linotype"</span>, <span class="string">"DFKai-SB"</span>, <span class="string">"Lucida Console"</span>,</span><br><span class="line">                <span class="string">"Verdana"</span>, <span class="string">"Traditional Arabic"</span>, <span class="string">"Meiryo UI"</span>, <span class="string">"Malgun Gothic"</span>, <span class="string">"Century"</span>, <span class="string">"Algerian"</span> &#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> fontFace = fonts[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> lineCount = <span class="number">20</span>; <span class="comment">// 干扰线数目</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">float</span> noiseRate = <span class="number">0.02</span>f; <span class="comment">// 噪点率</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BufferedImage <span class="built_in">image</span> = <span class="keyword">new</span> BufferedImage(imageWidth, imageHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">final</span> Graphics2D g = <span class="built_in">image</span>.<span class="built_in">createGraphics</span>();</span><br><span class="line">        <span class="comment">// 背景色，浅色</span></span><br><span class="line">        <span class="keyword">final</span> Color backgroundColor = getRandomLightColor();</span><br><span class="line">        g.setColor(backgroundColor);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, imageWidth, imageHeight);</span><br><span class="line">        <span class="comment">// 边框</span></span><br><span class="line">        g.setColor(Color.GRAY);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, imageWidth - <span class="number">1</span>, imageHeight - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isRandomLine = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isRandomNoise = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isShearBackground = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 干扰线</span></span><br><span class="line">        <span class="keyword">if</span> (isRandomLine) &#123;</span><br><span class="line">            drawRandomLine(g, imageWidth, imageHeight, lineCount);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 噪点</span></span><br><span class="line">        <span class="keyword">if</span> (isRandomNoise) &#123;</span><br><span class="line">            drawRandomNoise(<span class="built_in">image</span>, imageWidth, imageHeight, noiseRate);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 扭曲背景</span></span><br><span class="line">        <span class="keyword">if</span> (isShearBackground) &#123;</span><br><span class="line">            shearBackground(g, imageWidth, imageHeight, backgroundColor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 随机字符</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> randomCode = generateCaptchaCode(codeCount);</span><br><span class="line">        <span class="comment">// 绘制随机字符</span></span><br><span class="line">        drawRandomCode(g, imageWidth, imageHeight, randomCode, fontFace);</span><br><span class="line">        g.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// captchaImage</span></span><br><span class="line">        <span class="keyword">final</span> ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="built_in">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(<span class="built_in">image</span>, <span class="string">"png"</span>, baos);</span><br><span class="line">            bytes = baos.toByteArray();</span><br><span class="line">            baos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CaptchaDto captchaDto = <span class="keyword">new</span> CaptchaDto();</span><br><span class="line">        captchaDto.setCode(randomCode);</span><br><span class="line">        captchaDto.setImage(bytes);</span><br><span class="line">        <span class="keyword">return</span> captchaDto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制随机字符</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomCode(<span class="keyword">final</span> Graphics2D g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                       <span class="keyword">final</span> <span class="keyword">String</span> randomCode, <span class="keyword">final</span> <span class="keyword">String</span> fontFace) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeCount = randomCode.length();</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeSpace = imageWidth / (codeCount + <span class="number">1</span>); <span class="comment">// 字符宽度</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> fontHeight = (<span class="built_in">int</span>) (<span class="number">0.9</span> * imageHeight); <span class="comment">// 字符高度</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeBase = fontHeight; <span class="comment">// 字符基线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Font codeFont = <span class="keyword">new</span> Font(fontFace, Font.ITALIC, fontHeight);</span><br><span class="line">        g.setFont(codeFont);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; randomCode.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> AffineTransform affine = <span class="keyword">new</span> AffineTransform();</span><br><span class="line">            affine.setToRotation(Math.<span class="literal">PI</span> / <span class="number">4</span> * <span class="built_in">random</span>.nextDouble() * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>),</span><br><span class="line">                    (imageWidth / codeCount) * i + fontHeight / <span class="number">2</span>, imageHeight / <span class="number">2</span>);</span><br><span class="line">            g.setTransform(affine);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> randomStr = <span class="keyword">String</span>.valueOf(randomCode.charAt(i));</span><br><span class="line">            g.setColor(getRandomDeepColor());</span><br><span class="line">            g.drawString(randomStr, codeSpace * i + codeSpace / <span class="number">2</span>, codeBase);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取浅随机色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomDeepColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> dec = <span class="number">0.5</span>;</span><br><span class="line">        r = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        g = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        b = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        <span class="keyword">while</span> (r * <span class="number">0.299</span> + g * <span class="number">0.587</span> + b * <span class="number">0.114</span> &gt; <span class="number">64</span>) &#123;</span><br><span class="line">            r *= dec;</span><br><span class="line">            g *= dec;</span><br><span class="line">            b *= dec;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成随机验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> generateCaptchaCode(<span class="keyword">final</span> <span class="built_in">int</span> codeCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> StringBuffer randomCode = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; codeCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> randomStr = <span class="keyword">String</span>.valueOf(codeOption[<span class="built_in">random</span>.nextInt(codeOption.length)]);</span><br><span class="line">            randomCode.<span class="built_in">append</span>(randomStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> randomCode.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取浅随机色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomLightColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        r = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line">        g = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line">        b = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制干扰线,随机长度，随机位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomLine(<span class="keyword">final</span> Graphics2D g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                       <span class="keyword">final</span> <span class="built_in">int</span> lineCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> lineLength = (<span class="built_in">int</span>) (<span class="number">0.8</span> * imageHeight);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lineCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> x = <span class="built_in">random</span>.nextInt(imageWidth);</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> y = <span class="built_in">random</span>.nextInt(imageHeight);</span><br><span class="line">            <span class="built_in">int</span> xl = x + <span class="built_in">random</span>.nextInt(lineLength) * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">int</span> yl = y + <span class="built_in">random</span>.nextInt(lineLength) * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> (xl &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                xl = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (xl &gt; imageWidth) &#123;</span><br><span class="line">                xl = imageWidth;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (yl &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                yl = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (yl &gt; imageHeight) &#123;</span><br><span class="line">                yl = imageHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            g.drawLine(x, y, xl, yl);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成随机颜色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        r = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        g = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        b = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制随机噪点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomNoise(<span class="keyword">final</span> BufferedImage <span class="built_in">image</span>, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                        <span class="keyword">final</span> <span class="built_in">float</span> noiseRate) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> noiseCount = (<span class="built_in">int</span>) (imageWidth * imageHeight * noiseRate);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; noiseCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> x = <span class="built_in">random</span>.nextInt(imageWidth);</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> y = <span class="built_in">random</span>.nextInt(imageHeight);</span><br><span class="line">            <span class="keyword">final</span> Color c = getRandomColor();</span><br><span class="line">            <span class="built_in">image</span>.setRGB(x, y, c.getRGB());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扭曲背景</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> shearBackground(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                        <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">shearX</span>(g, imageWidth, imageHeight, <span class="built_in">color</span>);</span><br><span class="line">        <span class="built_in">shearY</span>(g, imageWidth, imageHeight, <span class="built_in">color</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">shearX</span>(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> period = <span class="built_in">random</span>.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> frames = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> phase = <span class="built_in">random</span>.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; imageHeight; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">double</span> d = (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.<span class="built_in">sin</span>((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period + (<span class="number">6.2831853071795862</span>D * phase) / frames);</span><br><span class="line">            g.copyArea(<span class="number">0</span>, i, imageWidth, <span class="number">1</span>, (<span class="built_in">int</span>) d, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(<span class="built_in">color</span>);</span><br><span class="line">                g.drawLine((<span class="built_in">int</span>) d, i, <span class="number">0</span>, i);</span><br><span class="line">                g.drawLine((<span class="built_in">int</span>) d + imageWidth, i, imageWidth, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">shearY</span>(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> period = <span class="built_in">random</span>.nextInt(imageWidth / <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> frames = <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> phase = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; imageWidth; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">double</span> d = (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.<span class="built_in">sin</span>((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period + (<span class="number">6.2831853071795862</span>D * phase) / frames);</span><br><span class="line">            g.copyArea(i, <span class="number">0</span>, <span class="number">1</span>, imageHeight, <span class="number">0</span>, (<span class="built_in">int</span>) d);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(<span class="built_in">color</span>);</span><br><span class="line">                g.drawLine(i, (<span class="built_in">int</span>) d, i, <span class="number">0</span>);</span><br><span class="line">                g.drawLine(i, (<span class="built_in">int</span>) d + imageHeight, i, imageHeight);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service 代码</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">BusinessException</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">CaptchaDto</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">Constant</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.service.<span class="type">ICaptchaService</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.util.<span class="type">HttpSessionUtil</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.util.<span class="type">VerifyCodeUtil</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.<span class="type">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CaptchaServiceImpl</span> <span class="title">implements</span> <span class="title">ICaptchaService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成验证码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public byte[] getCaptcha(<span class="keyword">final</span> int imageWidth, <span class="keyword">final</span> int imageHeight, <span class="keyword">final</span> int codeCount, <span class="keyword">final</span> <span class="type">Integer</span> <span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">null</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">BusinessException</span>(<span class="type">Constant</span>.<span class="type">Code</span>.<span class="type">BUSINESS_EXCEPTION_CAPTCHA_ERROR</span>, <span class="string">"验证码类型不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">CaptchaDto</span> captchaDto = <span class="type">VerifyCodeUtil</span>.generateCaptcha(imageWidth, imageHeight, codeCount);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 0) </span>&#123;</span><br><span class="line">            <span class="comment">// 0 注册验证码</span></span><br><span class="line">            <span class="type">HttpSessionUtil</span>.getHttpSession().setAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_REGISTER</span>, captchaDto.getCode());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 1) </span>&#123;</span><br><span class="line">            <span class="comment">// 1 登录验证码</span></span><br><span class="line">            <span class="type">HttpSessionUtil</span>.getHttpSession().setAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_LOGIN</span>, captchaDto.getCode());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> captchaDto.getImage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 校验验证码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean checkCaptcha(<span class="keyword">final</span> <span class="type">String</span> code, <span class="keyword">final</span> <span class="type">Integer</span> <span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> sessionCode = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 0) </span>&#123;</span><br><span class="line">            <span class="comment">// 0 注册验证码</span></span><br><span class="line">            sessionCode = <span class="type">HttpSessionUtil</span>.getHttpSession().getAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_REGISTER</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 1) </span>&#123;</span><br><span class="line">            <span class="comment">// 1 登录验证码</span></span><br><span class="line">            sessionCode = <span class="type">HttpSessionUtil</span>.getHttpSession().getAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_LOGIN</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (code == <span class="literal">null</span> || sessionCode == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (sessionCode.toString().toUpperCase().equals(code.toUpperCase())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>切面防止redis的穿透问题</title>
      <link href="/2018/08/24/other/redisDealwithNull/"/>
      <url>/2018/08/24/other/redisDealwithNull/</url>
      
        <content type="html"><![CDATA[<p>首先得定义一个切面注解</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 懒加载存redis seconds秒内不会改变，除非手动删除</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.PARAMETER,ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RedisSetWithNull &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> DataType &#123;</span><br><span class="line">        BEAN, BEAN_LIST, SIMPLE_LIST, STRING, INTEGER, BOOLEAN</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// redis 的key</span></span><br><span class="line">    String redisKey();</span><br><span class="line">    <span class="comment">// 存时间</span></span><br><span class="line">    int seconds();</span><br><span class="line">    <span class="comment">// 返回具体Class类型，基础类型可不填</span></span><br><span class="line">    Class clazz();</span><br><span class="line">    <span class="comment">// 返回类型</span></span><br><span class="line">    DataType dataType();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后切面实现</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="keyword">JSONArray</span>;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.cache.shared.RedisClient;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.constants.TypeConstants;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.util.json.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * log aspect, auto writing log.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @author luyao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Component</span><br><span class="line">@Aspect</span><br><span class="line">@Order(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">public</span> class RedisSetWithNullAspect &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    <span class="keyword">private</span> RedisClient redisClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(RedisSetWithNullAspect.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取日志信息中的动态参数，然后替换</span></span><br><span class="line"><span class="comment">     * @param desc</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;<span class="keyword">String</span>&gt; descFormat(<span class="keyword">final</span> <span class="keyword">String</span> desc)&#123;</span><br><span class="line">        <span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">final</span> Pattern pattern = Pattern.compile(<span class="string">"#\\&#123;([^\\&#125;]+)\\&#125;"</span>);</span><br><span class="line">        <span class="keyword">final</span> Matcher matcher = pattern.matcher(desc);</span><br><span class="line">        <span class="keyword">while</span>(matcher.find())&#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> t = matcher.group(<span class="number">1</span>);</span><br><span class="line">            list.<span class="built_in">add</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> getObjByParamName(ProceedingJoinPoint thisJoinPoint, <span class="keyword">String</span> paramIndex) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">Object</span>[] paramValues = thisJoinPoint.getArgs();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> paramValues[Integer.parseInt(paramIndex)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Around(<span class="string">"@annotation(redisSetWithNull)"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> dealRedis(<span class="keyword">final</span> ProceedingJoinPoint thisJoinPoint, RedisSetWithNull redisSetWithNull) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回值</span></span><br><span class="line">        <span class="keyword">Object</span> result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 解析入参</span></span><br><span class="line">        <span class="keyword">String</span> redisKey = redisSetWithNull.redisKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 假如#&#123;0.aa&#125;,替换为第一个参数的.aa的值 0代表第一个参数</span></span><br><span class="line">        <span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; list = descFormat(redisKey);</span><br><span class="line">        <span class="keyword">if</span> (!CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">String</span> s : list) &#123;</span><br><span class="line">                <span class="keyword">String</span>[] classParam = s.<span class="built_in">split</span>(<span class="string">"\\."</span>);</span><br><span class="line">                <span class="keyword">if</span> (classParam.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">String</span> value = <span class="keyword">String</span>.valueOf(getObjByParamName(thisJoinPoint, classParam[<span class="number">0</span>]));</span><br><span class="line">                    redisKey = redisKey.replace(<span class="string">"#&#123;"</span>+s+<span class="string">"&#125;"</span>, value);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> JsonNode jsonNode = JsonUtil.toJsonNode(JsonUtil.toString((getObjByParamName(thisJoinPoint, classParam[<span class="number">0</span>]))));</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">String</span> value = jsonNode.<span class="built_in">get</span>(classParam[<span class="number">1</span>]).asText();</span><br><span class="line">                    redisKey = redisKey.replace(<span class="string">"#&#123;"</span>+s+<span class="string">"&#125;"</span>, value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> seconds = redisSetWithNull.seconds();</span><br><span class="line">        <span class="keyword">final</span> RedisSetWithNull.DataType type = redisSetWithNull.dataType();</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt; clazz = redisSetWithNull.clazz();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">str</span> = redisClient.<span class="built_in">get</span>(redisKey);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">str</span> == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result = thisJoinPoint.proceed();<span class="comment">//再执行方法</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Throwable e) &#123;</span><br><span class="line">                LOGGER.error(<span class="string">"RedisWithNullDealAspect"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">                redisClient.<span class="built_in">set</span>(redisKey, TypeConstants.REDIS_DEFAULT_VALUE, seconds);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                redisClient.<span class="built_in">set</span>(redisKey, JsonUtil.toString(result), seconds);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!TypeConstants.REDIS_DEFAULT_VALUE.equals(<span class="built_in">str</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BEAN) &#123;</span><br><span class="line">                    result = JsonUtil.toBean(<span class="built_in">str</span>, clazz);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BEAN_LIST) &#123;</span><br><span class="line">                    result = JsonUtil.toList(<span class="built_in">str</span>, clazz);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.SIMPLE_LIST) &#123;</span><br><span class="line">                    result = <span class="keyword">JSONArray</span>.parse(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.INTEGER) &#123;</span><br><span class="line">                    result = Integer.parseInt(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BOOLEAN) &#123;</span><br><span class="line">                    result = Boolean.parseBoolean(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.STRING) &#123;</span><br><span class="line">                    result = <span class="built_in">str</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@RedisSetWithNull</span>(redisKey = <span class="string">"#&#123;0.abilityId&#125;-in-#&#123;1&#125;"</span>, seconds = <span class="number">600</span>,</span><br><span class="line">            dataType = RedisSetWithNull.DataType.STRING,clazz = <span class="built_in">String</span>.<span class="keyword">class</span>)</span><br><span class="line">public <span class="built_in">String</span> getAppAbilityStatus(<span class="keyword">final</span> AbilityInfoInputDto abilityInfoInputDto, <span class="built_in">String</span> aa) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"sss"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搭建springboot的高可用框架，其中包含了mysql，redis，kakfa，log4j等</title>
      <link href="/2018/04/25/springboot/springboot%20high%20available/"/>
      <url>/2018/04/25/springboot/springboot%20high%20available/</url>
      
        <content type="html"><![CDATA[<p>搭建springboot的高可用框架，其中包含了mysql，redis，kakfa，log4j等</p><p><strong>环境</strong></p><p>此次示例是在macos10.13.3的环境下</p><p>已经安装好docker；</p><p>mysql等软件均安装在docker下，以下演示</p><p>开发工具是spring的sts，使用了jdk8，springboot2.0.1</p><p>注：首先查询本地ip，放入/ect/hosts 文件中 <code>192.168.1.169 myhost</code></p><p>mysql5.6 读写分离主主自动切换</p><p>redis4.0.1 redisCluster集群</p><p>Springboot2.0.1 + mybatis(分页插件pagehelper)</p><p><strong>mysql+mycat 搭建数据库集群</strong></p><p>下载mysql的镜像<code>docker pull mysql:5.6</code></p><p><em>mysql主从自动备份和自动切换</em></p><p>​    从数据安全性考虑，对数据库的数据进行及时备份非常重要。mysql就提供了主从备份的机制，从数据库会非常及时的将主数据库的操作更新到从库上，从而当主数据库down掉之后，数据不会丢失；同时，也可以通过keepalived等程序来实现主库down掉之后，迅速将数据访问服务切换到从库，从而尽可能维护数据库服务的不间断运行。</p><p><em>mycat 数据库中间件</em></p><p>​    Mycat是一个彻底开源的新颖的数据库中间件产品。它的出现将彻底结束数据库的瓶颈问题，从而使数据库的高可用，高负载成为可能。Mycat功能强大，这里实现利用Mycat来实现主从数据库的读写分离和自动切换。mycat的单节点问题可以考虑Keepalived，暂时不做处理</p><ul><li>首先启动主从数据库</li></ul><p>首先在自己的主机上配置好mysql的配置文件my-m.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="attr">data</span>     = /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主服务器</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">log_bin</span> = mysql-bin</span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>从my-s.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="attr">data</span>     = /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从服务器</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">log_bin</span> = mysql-bin</span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>我们直接指定外部配置文件</p><p>主：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地映射地址/Users/yaojie/Documents/docker/mysql/master/</span></span><br><span class="line"><span class="comment"># 文件/Users/yaojie/Documents/docker/mysql/my-m.cnf</span></span><br><span class="line">docker run --restart=always -p <span class="number">3307</span>:<span class="number">3306</span> -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/m</span>aster<span class="regexp">/:/</span>var<span class="regexp">/lib/my</span>sql -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/my</span>-m.cnf:<span class="regexp">/etc/my</span>sql<span class="regexp">/mysql.conf.d/my</span>sqld.cnf -e MYSQL_ROOT_PASSWORD=<span class="number">123456</span> --name mysql-master -d mysql:<span class="number">5.6</span></span><br></pre></td></tr></table></figure><p>查看是否启动成功 <code>docker ps</code></p><p>进入容器<code>docker exec -it mysql-master /bin/bash</code></p><p>连接到mysql-master</p><p>查看用户名密码<code>mysql -u root -p</code>输入123456进入mysql</p><p>查看数据库字符集<code>mysql&gt;SHOW VARIABLES LIKE &#39;character_set_%&#39;;</code></p><p>查看collection的编码<code>mysql&gt;SHOW VARIABLES LIKE &#39;collation_%&#39;;</code></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给从库设一个专门用的用户</span></span><br><span class="line">mysql&gt; grant replication slave <span class="keyword">on</span> *.* <span class="keyword">to</span> 'salves1' @'%' identified <span class="keyword">by</span> '<span class="number">123456</span>';  <span class="comment">-- %是指所有ip，这里可以指定具体ip</span></span><br><span class="line">mysql&gt; flush privileges; <span class="comment">-- 刷新MySQL的系统权限相关表;</span></span><br><span class="line">mysql&gt; select user,Host <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure><p>查看主库状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show <span class="keyword">master</span> <span class="title">status</span>;</span><br></pre></td></tr></table></figure><p>从：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地映射地址/Users/yaojie/Documents/docker/mysql/slave/</span></span><br><span class="line"><span class="comment"># 文件/Users/yaojie/Documents/docker/mysql/my-s.cnf</span></span><br><span class="line">docker run --restart=always -p <span class="number">3308</span>:<span class="number">3306</span> -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/</span>slave<span class="regexp">/:/</span>var<span class="regexp">/lib/my</span>sql -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/my</span>-s.cnf:<span class="regexp">/etc/my</span>sql<span class="regexp">/mysql.conf.d/my</span>sqld.cnf -e MYSQL_ROOT_PASSWORD=<span class="number">123456</span> --name mysql-slave -d mysql:<span class="number">5.6</span></span><br></pre></td></tr></table></figure><p>连接到mysql-slave</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先测试下能否连接主数据库</span><br><span class="line">mysql -h myhost -P 3307 -u salves1 -p</span><br><span class="line">退出连接本地mysql再运行一下</span><br><span class="line">mysql&gt; change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'myhost'</span>,master_port=3307, <span class="attribute">master_user</span>=<span class="string">'salves1'</span>, <span class="attribute">master_password</span>=<span class="string">'123456'</span>,master_log_file='mysql-bin.000004',master_log_pos=400; -- master_log_file和master_log_pos是主库show master status获得的数据，必须统一</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G;  -- Slave_IO_Running和Slave_Sql_Running。这两个值为<span class="literal">Yes</span>，从库配置好了</span><br></pre></td></tr></table></figure><p>创建好之后，会发现master和slave之间会同步，比如master中创建数据库，slave中也会自动创建，在master中更改数据，slave中也会自动修改</p><ul><li>主主是从主从衍生而来的，可以从服务器给主服务器分配一个用户，让主服务器使用，这里直接使用root用户</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">从</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">主</span><br><span class="line">mysql&gt; change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'myhost'</span>,master_port=3308, <span class="attribute">master_user</span>=<span class="string">'root'</span>, <span class="attribute">master_password</span>=<span class="string">'123456'</span>,master_log_file='mysql-bin.000004',master_log_pos=120;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status\G;</span><br></pre></td></tr></table></figure><p>这样就可以互为主从，即主主备份</p><ul><li>读写分离是mycat配置的</li></ul><p>前提，以上主主创建数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> test_sb; # test_sb 以下需要配置</span><br></pre></td></tr></table></figure><p>安装mycat</p><p>编写Dockerfile</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">############################################</span><br><span class="line"># version : debugman007/c7-mycat:v1</span><br><span class="line"># desc : centos7 上安装的mycat</span><br><span class="line">############################################</span><br><span class="line"># 设置继承自 centos7 官方镜像</span><br><span class="line">FROM centos:<span class="number">7</span> </span><br><span class="line">RUN echo <span class="string">"root:root"</span> | chpasswd</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"># install java</span><br><span class="line">ADD http:<span class="comment">//mirrors.linuxeye.com/jdk/jdk-7u80-linux-x64.tar.gz /usr/local/  </span></span><br><span class="line">RUN cd /usr/local &amp;&amp; tar -zxvf jdk<span class="number">-7</span>u80-linux-x64.tar.gz &amp;&amp; rm -f jdk<span class="number">-7</span>u80-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1<span class="number">.7</span><span class="number">.0</span>_80</span><br><span class="line">ENV CLASSPATH $&#123;JAVA_HOME&#125;/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV PATH $PATH:$&#123;JAVA_HOME&#125;/bin</span><br><span class="line">#install mycat</span><br><span class="line">ADD http:<span class="comment">//dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz /usr/local</span></span><br><span class="line">RUN cd /usr/local &amp;&amp; tar -zxvf Mycat-server<span class="number">-1.6</span>-RELEASE<span class="number">-20161028204710</span>-linux.tar.gz &amp;&amp; rm -f Mycat-server<span class="number">-1.6</span>-RELEASE<span class="number">-20161028204710</span>-linux.tar.gz  </span><br><span class="line"></span><br><span class="line">VOLUME /usr/local/mycat/conf</span><br><span class="line">EXPOSE <span class="number">8066</span> <span class="number">9066</span></span><br><span class="line">CMD [<span class="string">"/usr/local/mycat/bin/mycat"</span>, <span class="string">"console"</span>]</span><br></pre></td></tr></table></figure><p>创建镜像</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t debugman007/<span class="built_in">c7</span>-mycat .</span><br></pre></td></tr></table></figure><p>运行容器</p><p>下载<a href="http://dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz" target="_blank" rel="noopener">http://dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz</a> 将conf文件夹复制到/Users/yaojie/Documents/docker/mycat/下，网盘下载<a href="https://pan.baidu.com/s/1Bq9oiTgVF3OFs3t11Ek4Cg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Bq9oiTgVF3OFs3t11Ek4Cg</a></p><p>修改schema，读写分离，主从替换，修改database，writeHost，readHost</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE mycat:schema SYSTEM "schema.dtd"&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">"http://io.mycat/"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">"TESTDB"</span> <span class="attr">checkSQLschema</span>=<span class="string">"false"</span> <span class="attr">sqlMaxLimit</span>=<span class="string">"100"</span> <span class="attr">dataNode</span>=<span class="string">"dn1"</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">schema</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"dn1"</span> <span class="attr">dataHost</span>=<span class="string">"localhost1"</span> <span class="attr">database</span>=<span class="string">"test_sb"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">"localhost1"</span> <span class="attr">maxCon</span>=<span class="string">"1000"</span> <span class="attr">minCon</span>=<span class="string">"10"</span> <span class="attr">balance</span>=<span class="string">"1"</span> <span class="attr">writeType</span>=<span class="string">"0"</span>  </span></span><br><span class="line"><span class="tag">             <span class="attr">dbType</span>=<span class="string">"mysql"</span> <span class="attr">dbDriver</span>=<span class="string">"native"</span> <span class="attr">switchType</span>=<span class="string">"1"</span>  <span class="attr">slaveThreshold</span>=<span class="string">"100"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>show slave status<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- can have multi write hosts --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM1"</span> <span class="attr">url</span>=<span class="string">"myhost:3307"</span> <span class="attr">user</span>=<span class="string">"root"</span>  </span></span><br><span class="line"><span class="tag">                   <span class="attr">password</span>=<span class="string">"123456"</span>&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- can have multi read hosts --&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"hostS2"</span> <span class="attr">url</span>=<span class="string">"myhost:3308"</span> <span class="attr">user</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">"123456"</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM2"</span> <span class="attr">url</span>=<span class="string">"myhost:3308"</span> <span class="attr">user</span>=<span class="string">"root"</span>  </span></span><br><span class="line"><span class="tag">                   <span class="attr">password</span>=<span class="string">"123456"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下为注释：</span><br><span class="line">name属性唯一标识dataHost标签，供上层的标签使用。</span><br><span class="line">maxCon属性指定每个读写实例连接池的最大连接。也就是说，标签内嵌套的</span><br><span class="line">writeHost、readHost标签都会使用这个属性的值来实例化出连接池的最大连接数。</span><br><span class="line">minCon属性指定每个读写实例连接池的最小连接，初始化连接池的大小。</span><br><span class="line"></span><br><span class="line">balance属性负载均衡类型，目前的取值有3种：</span><br><span class="line">1.balance="0",不开启读写分离机制，所有读操作都发送到当前可用的writeHost上。</span><br><span class="line">2.balance="1"，全部的readHost与stand by writeHost参与select语句的负载均衡，简单的说，当双主双从模式(M1-&gt;S1，M2-&gt;S2，并且M1与M2互为主备)，</span><br><span class="line">正常情况下，M2,S1,S2都参与select语句的负载均衡。</span><br><span class="line">3.balance="2"，所有读操作都随机的在writeHost、readhost上分发。</span><br><span class="line">4.balance="3"，所有读请求随机的分发到wiriterHost对应的readhost执行，</span><br><span class="line">writerHost不负担读压力，注意balance=3只在1.4及其以后版本有，1.3没有。</span><br><span class="line"></span><br><span class="line">writeType属性负载均衡类型，目前的取值有3种：</span><br><span class="line">1.writeType="0", 所有写操作发送到配置的第一个writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为准，即第二个writeHost，切换记录在配置文件中:dnindex.properties.</span><br><span class="line">2.writeType="1"，所有写操作都随机的发送到配置的writeHost，1.5以后废弃不推荐。</span><br><span class="line">3.writeType="2"，不执行写操作</span><br><span class="line"></span><br><span class="line">switchType属性</span><br><span class="line">-1 表示不自动切换</span><br><span class="line">1 默认值，自动切换</span><br><span class="line">2 基于MySQL主从同步的状态决定是否切换</span><br><span class="line">3 基于MySQLgalarycluster的切换机制（适合集群）（1.4.1）</span><br><span class="line">心跳语句为show status like‘wsrep%’</span><br><span class="line"></span><br><span class="line">dbType属性</span><br><span class="line">指定后端连接的数据库类型，目前支持二进制的mysql协议，还有其他使用</span><br><span class="line">JDBC连接的数据库。例如：mongodb、oracle、spark等。</span><br><span class="line"></span><br><span class="line">dbDriver属性指定连接后端数据库使用的</span><br><span class="line">Driver，目前可选的值有native和JDBC。使用native的话，因为这个值执行的是二进制的mysql协议，所以可以使用mysql和maridb。其他类型的数据库则需要使用JDBC驱动来支持。从1.6版本开始支持postgresql的native原始协议。如果使用JDBC的话需要将符合JDBC 4标准的驱动JAR包放到MYCAT\lib目录下，并检查驱动JAR包中包括如下目录结构的文件：</span><br><span class="line">META-INF\services\java.sql.Driver。在这个文件内写上具体的Driver类名，例如：com.mysql.jdbc.Driver。</span><br><span class="line"></span><br><span class="line">heartbeat标签这个标签内指明用于和后端数据库进行心跳检查的语句。例如,MYSQL可以使用select user()，Oracle可以使用select 1 from dual等。这个标签还有一个</span><br><span class="line">connectionInitSql属性，主要是当使用Oracla数据库时，需要执行的初始化SQL</span><br><span class="line">语句就这个放到这里面来。例如：altersession set nls_date_format='yyyy-mm-dd hh24:mi:ss'</span><br><span class="line">1.4主从切换的语句必须是：showslave status</span><br></pre></td></tr></table></figure><p>改文件log4j2.xml为debug</p><p>启动mycat，并查看日志</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 本地文件夹 /Users/yaojie/Documents/docker/mycat/conf</span></span><br><span class="line"><span class="meta"># 本地文件夹 /Users/yaojie/Documents/docker/mycat/logs</span></span><br><span class="line">docker run --name mysql-mycat -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>mycat/conf:<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/mycat/</span>conf -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>mycat/logs:<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/mycat/</span>logs -p <span class="number">8066</span>:<span class="number">8066</span> -p <span class="number">9066</span>:<span class="number">9066</span> debugman007/c7-mycat</span><br><span class="line"></span><br><span class="line"><span class="meta"># 8066端口是对数据进行操作，9066端口是控制端口</span></span><br></pre></td></tr></table></figure><p>用数据库连接工具连接8066端口，插入从3307，查询从3308端口。。事务的话都从3307端口。关闭主服务，从服务接管。</p><p><strong>redis集群</strong></p><p>首先下载镜像</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="keyword">redi</span><span class="variable">s:4</span>.<span class="number">0.1</span></span><br><span class="line">docker pull <span class="keyword">ruby</span></span><br></pre></td></tr></table></figure><p>创建自定义network</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> network </span>create redis-net</span><br></pre></td></tr></table></figure><p>在本地文件夹/Users/yaojie/Documents/docker/redis/下创建redis-cluster.tmpl</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">port <span class="variable">$&#123;PORT&#125;</span></span><br><span class="line"><span class="keyword">cluster</span>-enabled yes</span><br><span class="line"><span class="keyword">cluster</span>-config-<span class="keyword">file</span> nodes.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">cluster</span>-node-timeout 5000</span><br><span class="line"><span class="keyword">cluster</span>-announce-ip 具体ip地址</span><br><span class="line"><span class="keyword">cluster</span>-announce-port 192.168.1.169</span><br><span class="line"><span class="keyword">cluster</span>-announce-bus-port 1<span class="variable">$&#123;PORT&#125;</span></span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>linux下有envsubst命令时，创建文件夹7000到7005和子文件夹conf，data和conf下的配置文件，port已经替换</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  mkdir -p ./<span class="variable">$&#123;port&#125;</span>/conf \</span><br><span class="line">  &amp;&amp; <span class="attribute">PORT</span>=<span class="variable">$&#123;port&#125;</span> envsubst &lt; ./redis-cluster.tmpl &gt; ./<span class="variable">$&#123;port&#125;</span>/conf/redis.conf \</span><br><span class="line">  &amp;&amp; mkdir -p ./<span class="variable">$&#123;port&#125;</span>/data; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>macos下没有envsubst命令，创建文件夹7000到7005和子文件夹conf，data和conf下的配置文件，再逐一改配置文件中的端口</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  mkdir -p ./<span class="variable">$&#123;port&#125;</span>/conf \</span><br><span class="line">  &amp;&amp; cp ./redis-cluster.tmpl ./<span class="variable">$&#123;port&#125;</span>/conf/redis.conf \</span><br><span class="line">  &amp;&amp; mkdir -p ./<span class="variable">$&#123;port&#125;</span>/data; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>启动7000到7005的redis容器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  docker <span class="builtin-name">run</span> -d -ti -p <span class="variable">$&#123;port&#125;</span>:<span class="variable">$&#123;port&#125;</span> -p 1<span class="variable">$&#123;port&#125;</span>:1<span class="variable">$&#123;port&#125;</span> \</span><br><span class="line">  -v /Users/yaojie/Documents/docker/redis/<span class="variable">$&#123;port&#125;</span>/conf/redis.conf:/usr/local/etc/redis/redis.conf \</span><br><span class="line">  -v /Users/yaojie/Documents/docker/redis/<span class="variable">$&#123;port&#125;</span>/data:/data \</span><br><span class="line">  --restart always --name redis-<span class="variable">$&#123;port&#125;</span> --net redis-net \</span><br><span class="line">  --sysctl net.core.<span class="attribute">somaxconn</span>=1024 redis:4.0.1 redis-server /usr/local/etc/redis/redis.conf; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>以下是使用ruby集群redis，提供2种</p><p>第一种/Users/yaojie/Documents/docker/redis/下Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ruby</span><br><span class="line"><span class="keyword">MAINTAINER</span> yj</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> gem sources --remove https://rubygems.org/</span></span><br><span class="line"><span class="bash">RUN gem <span class="built_in">source</span> -a https://gems.ruby-china.org</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">RUN gem install redis -v 4.0.1</span></span><br><span class="line"><span class="bash">ADD ./redis-4.0.1.tar.gz /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="bash">RUN <span class="built_in">cd</span> /usr/<span class="built_in">local</span> &amp;&amp; ln -s redis-4.0.1 redis</span></span><br></pre></td></tr></table></figure><p>创建镜像</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t yj/ruby_redis .</span><br></pre></td></tr></table></figure><p>启动容器</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> yj/ruby_redis /bin/bash</span><br></pre></td></tr></table></figure><p>启动集群</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/src/redis-trib.rb create --replicas <span class="number">1</span> \</span><br><span class="line"><span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7000</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7001</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7002</span> \</span><br><span class="line"><span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7003</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7004</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7005</span></span><br></pre></td></tr></table></figure><p>第二种，直接启动</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">echo yes | docker <span class="keyword">run</span> -i --<span class="keyword">rm</span> --<span class="keyword">net</span> redis-<span class="keyword">net</span> ruby <span class="keyword">sh</span> -c '\</span><br><span class="line">  gem sources --remove https:<span class="comment">//rubygems.org/ \</span></span><br><span class="line">  &amp;&amp; gem source -a https:<span class="comment">//gems.ruby-china.org \</span></span><br><span class="line">  &amp;&amp; gem install redis -v 4.0.1 \</span><br><span class="line">  &amp;&amp; wget http:<span class="comment">//download.redis.io/redis-stable/src/redis-trib.rb \</span></span><br><span class="line">  &amp;&amp; ruby redis-trib.rb create --replicas 1 \</span><br><span class="line">  '"$(<span class="keyword">for</span> port <span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">    echo -<span class="keyword">n</span> <span class="string">"$(docker inspect --format '&#123;&#123; (index .NetworkSettings.Networks "</span>redis-<span class="keyword">net</span><span class="string">").IPAddress &#125;&#125;' "</span>redis-<span class="variable">$&#123;port&#125;</span><span class="string">")"</span>:<span class="variable">$&#123;port&#125;</span> ' ' ; \</span><br><span class="line">  done)"</span><br></pre></td></tr></table></figure><p>再来说说单机或集群密码问题（暂不考虑）</p><p>java-springboot连接</p><p>jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.properties增加redis节点配置</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># REDIS（RedisProperties）</span></span><br><span class="line"><span class="meta"># （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。</span></span><br><span class="line"><span class="meta"># spring.redis.cluster.max-redirects=</span></span><br><span class="line"><span class="meta"># （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。</span></span><br><span class="line"><span class="meta"># spring.redis.cluster.nodes=</span></span><br><span class="line"><span class="meta"># 连接工厂使用的数据库索引。</span></span><br><span class="line">spring.redis.database=<span class="number">0</span></span><br><span class="line"><span class="meta"># 可用以下分开来配置，连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379</span></span><br><span class="line">spring.redis.url=</span><br><span class="line"><span class="meta"># Redis服务器主机。</span></span><br><span class="line">spring.redis.host=localhost</span><br><span class="line"><span class="meta"># 登录redis服务器的密码。</span></span><br><span class="line">spring.redis.password=</span><br><span class="line"><span class="meta"># 启用SSL支持。</span></span><br><span class="line">spring.redis.ssl=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 池在给定时间可以分配的最大连接数。使用负值无限制。</span></span><br><span class="line">spring.redis.jedis.pool.max-active=<span class="number">8</span></span><br><span class="line"><span class="meta"># 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。</span></span><br><span class="line">spring.redis.jedis.pool.max-idle=<span class="number">8</span></span><br><span class="line"><span class="meta"># 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。</span></span><br><span class="line">spring.redis.jedis.pool.max-wait=<span class="number">-1</span></span><br><span class="line"><span class="meta"># 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。</span></span><br><span class="line">spring.redis.jedis.pool.min-idle=<span class="number">0</span></span><br><span class="line"><span class="meta"># Redis服务器端口。</span></span><br><span class="line">spring.redis.port=<span class="number">6379</span></span><br><span class="line"><span class="meta"># （哨兵模式，不使用则不用开启）Redis服务器的名称。</span></span><br><span class="line"><span class="meta"># spring.redis.sentinel.master=</span></span><br><span class="line"><span class="meta"># （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。 </span></span><br><span class="line"><span class="meta"># spring.redis.sentinel.nodes=</span></span><br><span class="line"><span class="meta"># 以毫秒为单位的连接超时。0太小会超时</span></span><br><span class="line">spring.redis.timeout=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>说明：以上是单机版本的，如果是集群的只需要开启这两项(我们这里也用了这个配置)，密码还是使用<code>spring.redis.password</code>：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。</span><br><span class="line">spring.redis.cluster.max-redirects=<span class="number">5</span></span><br><span class="line"># （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。</span><br><span class="line">spring.redis.cluster.nodes=<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7000</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7001</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7002</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7003</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7004</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7005</span></span><br></pre></td></tr></table></figure><p>注意：一旦开启了集群模式，那么基于单机的配置就会覆盖</p><p>提示：可以这么说，上面的配置应该是最全的了。当然上面针对客户端的操作估计会比较少，比如哨兵模式，分片等等的，因为这些高可用在服务已经做了，如果想要在客户端实现这些，那么可以重新注入想要实现Bean即可。比如注入建立工厂，实现自己的Session。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码使用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/aa"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void <span class="keyword">init</span>() &#123;</span><br><span class="line">    redisTemplate.opsForValue().<span class="keyword">set</span>(<span class="string">"alais"</span>, <span class="string">"iouo"</span>);</span><br><span class="line">    System.<span class="keyword">out</span>.println(redisTemplate.opsForValue().<span class="keyword">get</span>(<span class="string">"alais"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用技巧：</p><p>在市面上可能存在两种个用法，1中是针对opsForValue，另一种是execute的，那么这两种的使用区别如下：</p><p>1、在redistemplate中配置Serializer</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ValueOperations<span class="variable">&lt;String, User&gt;</span> valueops = redisTemplate.opsForValue();</span><br><span class="line">valueops.<span class="built_in">set</span>(<span class="keyword">user</span>.getId(), <span class="keyword">user</span>);</span><br></pre></td></tr></table></figure><p>2、不在redistemplate中配置Serializer，而是在Service的实现类中单独指定Serializer。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">boolean</span> result = redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Boolean&gt;() &#123;</span><br><span class="line">      <span class="keyword">public</span> Boolean doInRedis(RedisConnection redisConnection) <span class="keyword">throws</span> DataAccessException &#123; </span><br><span class="line">          RedisSerializer&lt;<span class="keyword">String</span>&gt; redisSerializer = redisTemplate .getStringSerializer(); </span><br><span class="line">          <span class="built_in">byte</span>[] <span class="built_in">key</span> = redisSerializer.serialize(user.getId());</span><br><span class="line">          <span class="built_in">byte</span>[] value = redisSerializer.serialize(user.getName()); </span><br><span class="line">          <span class="keyword">return</span> redisConnection.setNX(<span class="built_in">key</span>, value); &#125; &#125;); </span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说这两者的区别的序列化是自己实现的。</p><p>可以一开始就@SpringBootApplication自定义redis的序列化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    public RedisTemplate&lt;<span class="built_in">String</span>, ?&gt; redisTemplate(<span class="keyword">final</span> RedisConnectionFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(<span class="keyword">factory</span>);</span><br><span class="line">        <span class="keyword">final</span> RedisSerializer&lt;<span class="built_in">String</span>&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();<span class="comment">//KEY只能存string，否则会报错;</span></span><br><span class="line">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义value的序列化方式</span></span><br><span class="line">        <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;?&gt; jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;<span class="built_in">Object</span>&gt;(<span class="built_in">Object</span>.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">final</span> ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>kakfa</strong></p><p>这里安装单机的kakfa，只要用于springboot的测试，</p><ol><li>docker pull wurstmeister/zookeeper  </li><li>docker pull wurstmeister/kafka  </li><li>docker run -d –name zookeeper -p 2181 -t wurstmeister/zookeeper  </li><li>docker run -d –name kafka -p 9092:9092 –link zookeeper:zk -e KAFKA_ZOOKEEPER_CONNECT=zk:2181 -e KAFKA_ADVERTISED_HOST_NAME=127.0.0.1 -e KAFKA_ADVERTISED_PORT=9092 wurstmeister/kafka</li></ol><p>测试是否成功</p><ol><li>docker exec -it ${CONTAINER ID} /bin/bash   </li><li>cd opt/kafka_2.11-0.10.1.1/   </li><li>创建一个主题：bin/kafka-topics.sh –create –zookeeper zookeeper:2181 –replication-factor 1 –partitions 1 –topic mykafka</li><li>运行一个消息生产者，指定topic为刚刚创建的主题:bin/kafka-console-producer.sh –broker-list localhost:9092 –topic mykafka  </li><li>运行一个消费者，指定同样的主题:bin/kafka-console-consumer.sh –zookeeper zookeeper:2181 –topic mykafka –from-beginning </li></ol><p><strong>代码编写</strong></p><p>sts创建springboot项目很简单，目前最新2.0.1版本</p><p>需要联网,点击File&gt;&gt;New&gt;&gt;Spring Start Project</p><p>跳出Service Url（<a href="http://start.spring.io）填写" target="_blank" rel="noopener">http://start.spring.io）填写</a></p><ul><li>Name(springboot-study)</li><li>Group(com.example)</li><li>Artifact(springboot-study)</li><li>Version(0.0.1-SNAPSHOT)</li><li>Package(com.example.demo)</li><li>Type(Maven)</li><li>Java Version(8)</li><li>Package(Jar)</li><li>Language(Java)</li></ul><p>点击下一步，让我们选择使用的jar</p><p>我们这里一步一步添加jar包，我们先勾上Web，点击finish。第一次会下载jar，等待下载完之后，项目目录就好了。</p><p>我们先把基础的package名字建好，</p><ul><li>com.example.demo.controller</li><li>com.example.demo.service</li><li>com.example.demo.dao</li><li>com.example.demo.dto</li><li>com.example.demo.util</li><li>com.example.demo.client</li><li>com.example.demo.task</li></ul><p>(1) 引入mybatis+mysql</p><p>数据库中创建表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE <span class="keyword">IF</span> EXISTS `person`;</span><br><span class="line">CREATE TABLE `person` (</span><br><span class="line">  `id` int(11) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(50)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  `age` int(11)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  `sex` int(11)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>pom.xml中引入jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将application.properties改成application.yml格式，可以不改</p><p>添加mybatis和mysql配置</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server</span>:</span><br><span class="line">  <span class="attribute">port</span>: <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">spring</span>:</span><br><span class="line">  <span class="attribute">datasource</span>:</span><br><span class="line">    <span class="attribute">driver-class-name</span>: com.mysql.jdbc.Driver</span><br><span class="line">    <span class="attribute">url</span>: <span class="attribute">jdbc</span>:<span class="attribute">mysql</span>:<span class="comment">//localhost:8066/TESTDB?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;autoReconnect=true</span></span><br><span class="line">    <span class="attribute">username</span>: root</span><br><span class="line">    <span class="attribute">password</span>: <span class="number">123456</span></span><br><span class="line">    </span><br><span class="line"><span class="attribute">mybatis</span>: </span><br><span class="line">  <span class="attribute">mapper-locations</span>:</span><br><span class="line">  - <span class="attribute">classpath</span>:mapper<span class="comment">/*Mapper.xml</span></span><br></pre></td></tr></table></figure><p>在SpringbootStudyApplication上添加</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@MapperScan</span>(<span class="string">"com.example.demo.dao"</span>)  指定扫描的dao处理地址</span><br><span class="line"><span class="variable">@EnableTransactionManagement</span>   开启事务机制</span><br></pre></td></tr></table></figure><p>创建对于的dto</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Serializable序列化为了之后的redisCache存入redis的，单mybatis可以不加</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">final</span> Integer id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> Integer age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(<span class="keyword">final</span> Integer sex)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建dao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Mapper 等同于@MapperScan(..)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以直接在这里写sql处理</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into person(id, name, age, sex) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;age&#125;,#&#123;sex&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insertOne</span><span class="params">(Person person)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from person where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Person <span class="title">findOne</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以去xml中处理语句</span></span><br><span class="line">    <span class="function">List&lt;Person&gt; <span class="title">searchAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于searchAll是从xml解析的sql。我们配置了<code>classpath:mapper/*Mapper.xml</code>，所以在resources下创建mapper文件夹，并在文件夹中创建personMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.example.demo.dao.PersonDao"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"searchAll"</span> <span class="attr">resultType</span>=<span class="string">"com.example.demo.dto.Person"</span>&gt;</span></span><br><span class="line">    select * from person</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建对于的service和controller</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.dao.PersonDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PersonDao personDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Person <span class="title">insertOne</span><span class="params">(<span class="keyword">final</span> Person person)</span> </span>&#123;</span><br><span class="line">        personDao.insertOne(person);</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">        <span class="comment">//        Integer.parseInt("sssss");</span></span><br><span class="line">        <span class="comment">//        personDao.insertOne(person);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Person <span class="title">findOne</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> personDao.<span class="title">findOne</span><span class="params">(id)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">deleteOne</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> personDao.<span class="title">searchAll</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.List</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">javax</span><span class="selector-class">.annotation</span><span class="selector-class">.Resource</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.PathVariable</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestBody</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMapping</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RestController</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.dto</span><span class="selector-class">.Person</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.service</span><span class="selector-class">.PersonService</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">RestController</span></span><br><span class="line"><span class="keyword">public</span> class PersonController &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Resource</span></span><br><span class="line">    private PersonService personService;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">insertOne</span>")</span><br><span class="line">    public void insertOne(@RequestBody final Person person) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">personService</span><span class="selector-class">.insertOne</span>(<span class="selector-tag">person</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/&#123;<span class="selector-tag">id</span>&#125;")</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">Person</span> <span class="selector-tag">findOne</span>(@<span class="keyword">PathVariable</span> final int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">personService</span><span class="selector-class">.findOne</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">deleteOne</span>/&#123;<span class="selector-tag">id</span>&#125;")</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">void</span> <span class="selector-tag">deleteOne</span>(@<span class="keyword">PathVariable</span> final int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">personService</span><span class="selector-class">.deleteOne</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">searchAll</span>")</span><br><span class="line">    public List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">personService</span><span class="selector-class">.searchAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们可以运行，run as &gt;&gt; spring boot app ，查看运行成功</p><p>调用POST <a href="http://localhost:8080/insertOne" target="_blank" rel="noopener">http://localhost:8080/insertOne</a></p><p>报文</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"namess"</span>,</span><br><span class="line"><span class="attr">"age"</span>: <span class="number">22</span>,</span><br><span class="line"><span class="attr">"sex"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用GET <a href="http://localhost:8080/2" target="_blank" rel="noopener">http://localhost:8080/2</a> ，<a href="http://localhost:8080/searchAll" target="_blank" rel="noopener">http://localhost:8080/searchAll</a> 都成功了</p><p>（2）考虑到分页实现，我们引用开源的分页插件pagehelper</p><p>pom.xml中引入jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 分页插件pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分页插件pagehelper --&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置分页插件pagehelper</span></span><br><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line"><span class="attr">  helperDialect:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">  reasonable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  supportMethodsArguments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><p>dao层加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from person"</span>)</span><br><span class="line"><span class="function">Page&lt;Person&gt; <span class="title">findByPage</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>service层加入</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.page.PageMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Page&lt;Person&gt; searchPage(<span class="keyword">final</span> <span class="keyword">int</span> pageNo, <span class="keyword">final</span> <span class="keyword">int</span> pageSize) &#123;</span><br><span class="line"></span><br><span class="line">    PageMethod.startPage(pageNo, pageSize);</span><br><span class="line">    <span class="function"><span class="keyword">return</span> personDao.<span class="title">findByPage</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于分页插件自带的Page不能用作返回，我们在dto封装我们的PageInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageInfo</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageNum;</span><br><span class="line">    <span class="comment">//每页的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> total;</span><br><span class="line">    <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pages;</span><br><span class="line">    <span class="comment">//结果集</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;</span><br><span class="line">    <span class="comment">//是否为第一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isFirstPage = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//是否为最后一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLastPage = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 包装Page对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageInfo</span><span class="params">(<span class="keyword">final</span> List&lt;T&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Page) &#123;</span><br><span class="line">            <span class="keyword">final</span> Page page = (Page) list;</span><br><span class="line">            <span class="keyword">this</span>.pageNum = page.getPageNum();</span><br><span class="line">            <span class="keyword">this</span>.pageSize = page.getPageSize();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.pages = page.getPages();</span><br><span class="line">            <span class="keyword">this</span>.list = page;</span><br><span class="line">            <span class="keyword">this</span>.total = page.getTotal();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">            <span class="keyword">this</span>.pageNum = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.pageSize = list.size();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.pages = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.list = list;</span><br><span class="line">            <span class="keyword">this</span>.total = list.size();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">            <span class="comment">//判断页面边界</span></span><br><span class="line">            judgePageBoudary();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判定页面边界</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">judgePageBoudary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        isFirstPage = pageNum == <span class="number">1</span>;</span><br><span class="line">        isLastPage = pageNum == pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageNum</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pageNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageNum = pageNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPages</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pages)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(<span class="keyword">final</span> List&lt;T&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIsFirstPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isFirstPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsFirstPage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isFirstPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.isFirstPage = isFirstPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIsLastPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isLastPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsLastPage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isLastPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.isLastPage = isLastPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"PageInfo&#123;"</span>);</span><br><span class="line">        sb.append(<span class="string">"pageNum="</span>).append(pageNum);</span><br><span class="line">        sb.append(<span class="string">", pageSize="</span>).append(pageSize);</span><br><span class="line">        sb.append(<span class="string">", total="</span>).append(total);</span><br><span class="line">        sb.append(<span class="string">", pages="</span>).append(pages);</span><br><span class="line">        sb.append(<span class="string">", list="</span>).append(list);</span><br><span class="line">        sb.append(<span class="string">", isFirstPage="</span>).append(isFirstPage);</span><br><span class="line">        sb.append(<span class="string">", isLastPage="</span>).append(isLastPage);</span><br><span class="line">        sb.append(<span class="string">", navigatepageNums="</span>);</span><br><span class="line">        sb.append(<span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.demo.dto.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.PersonService;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/searchPage/&#123;pageNo&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> PageInfo&lt;Person&gt; searchPage(<span class="meta">@PathVariable</span> <span class="keyword">final</span> <span class="keyword">int</span> pageNo, <span class="meta">@PathVariable</span> <span class="keyword">final</span> <span class="keyword">int</span> pageSize) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Page&lt;Person&gt; persons = personService.searchPage(pageNo, pageSize);</span><br><span class="line">    <span class="keyword">final</span> PageInfo&lt;Person&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(persons);</span><br><span class="line">    <span class="keyword">return</span> pageInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用GET <a href="http://localhost:8080/searchPage/1/1" target="_blank" rel="noopener">http://localhost:8080/searchPage/1/1</a> 即可看到分页成功</p><p>（3）为了看运行的sql语句等，我们加入log日志</p><p>Pom.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件加入</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">loggin<span class="variable">g:</span></span><br><span class="line">  leve<span class="variable">l:</span></span><br><span class="line">    <span class="keyword">com</span>.example.demo.dao: DEBUG</span><br><span class="line">  <span class="keyword">file</span>: /Users/yaojie/Desktop/demo.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>默认每天压缩前一天日志，生成一个新的日志。</p><p>这样我们就能在控制台看到具体的sql</p><p>（4）redis集成</p><p>pom.xml中jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件在spring下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">spring</span>:   </span><br><span class="line">  <span class="selector-tag">redis</span>:</span><br><span class="line">    <span class="selector-tag">cluster</span>:</span><br><span class="line">      <span class="selector-tag">max-redirects</span>: 5</span><br><span class="line">      <span class="selector-tag">nodes</span>: 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7000</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7001</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7002</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7003</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7004</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7005</span></span><br><span class="line">    <span class="selector-tag">database</span>: 0</span><br><span class="line">    <span class="selector-tag">password</span>: </span><br><span class="line">    <span class="selector-tag">ssl</span>: <span class="selector-tag">false</span></span><br><span class="line">    <span class="selector-tag">jedis</span>:</span><br><span class="line">      <span class="selector-tag">pool</span>:</span><br><span class="line">        <span class="selector-tag">max-active</span>: 8</span><br><span class="line">        <span class="selector-tag">max-idle</span>: 8</span><br><span class="line">        <span class="selector-tag">max-wait</span>: <span class="selector-tag">-1</span></span><br><span class="line">        <span class="selector-tag">min-idle</span>: 0</span><br><span class="line">    # 配置了<span class="selector-tag">cluster</span>集群 单独的配置自动失效</span><br><span class="line">    <span class="selector-tag">host</span>: 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></span><br><span class="line">    <span class="selector-tag">port</span>: 6900</span><br><span class="line">    <span class="selector-tag">timeout</span>: 5000</span><br></pre></td></tr></table></figure><p>SpringbootDemoApplication中配置redis的序列化，使查看值和key的时候更加方便，需要存redis的实体需要序列化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    public RedisTemplate&lt;<span class="built_in">String</span>, ?&gt; redisTemplate(<span class="keyword">final</span> RedisConnectionFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(<span class="keyword">factory</span>);</span><br><span class="line">        <span class="keyword">final</span> RedisSerializer&lt;<span class="built_in">String</span>&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();<span class="comment">//Long类型不可以会出现异常信息;</span></span><br><span class="line">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义value的序列化方式</span></span><br><span class="line">        <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;?&gt; jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;<span class="built_in">Object</span>&gt;(</span><br><span class="line">                <span class="built_in">Object</span>.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">final</span> ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>引用RedisTemplate即可使用redis</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate;</span><br></pre></td></tr></table></figure><p>（5）springsession redis共享</p><p>pom.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- springsession redis共享 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SpringbootStudyApplication中配置</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 1800)</span><span class="comment">//SpringSession时间1800s</span></span><br></pre></td></tr></table></figure><p>util下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpSessionUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpSession <span class="title">getHttpSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpSession httpSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder</span><br><span class="line">                .currentRequestAttributes();</span><br><span class="line">        httpSession = requestAttributes.getRequest().getSession();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpSession;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller中加入</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/setSession"</span>)</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       HttpSessionUtil.getHttpSession().setAttribute(<span class="string">"userToken"</span>, <span class="string">"userTokenxxxxxxxxxxxxx"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/getSession"</span>)</span><br><span class="line">   <span class="keyword">public</span> <span class="function">Object <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> HttpSessionUtil.getHttpSession().getAttribute(<span class="string">"userToken"</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这样springboot的集群起不同端口，分布式都可以共享session了</p><p>（6）使用redis-cache</p><p>pom.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span> </span><br><span class="line"><span class="symbol">  cache:</span></span><br><span class="line"><span class="symbol">    type:</span> redis</span><br></pre></td></tr></table></figure><p>SpringbootStudyApplication</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableCaching</span><span class="comment">//使用redis的话需要序列化实体</span></span><br></pre></td></tr></table></figure><p>service修改</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.<span class="keyword">annotation</span>.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.CacheEvict;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.CachePut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.<span class="keyword">annotation</span>.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.dao.PersonDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.page.PageMethod;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PersonDao personDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="comment">// 将返回数据插入缓存</span></span><br><span class="line">    <span class="meta">@CachePut(key=<span class="meta-string">"#person.id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> Person insertOne(<span class="keyword">final</span> Person person) &#123;</span><br><span class="line">        personDao.insertOne(person);</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">        <span class="comment">//        Integer.parseInt("sssss");</span></span><br><span class="line">        <span class="comment">//        personDao.insertOne(person);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找缓存，有返回，没有调用方法，将值存入缓存</span></span><br><span class="line">    <span class="meta">@Cacheable(key=<span class="meta-string">"#id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> Person findOne(<span class="keyword">final</span> int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> personDao.findOne(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@CacheEvict 删除缓存</span></span><br><span class="line">    <span class="meta">@CacheEvict(key=<span class="meta-string">"#id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> void deleteOne(<span class="keyword">final</span> int id) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> personDao.searchAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Page&lt;Person&gt; searchPage(<span class="keyword">final</span> int pageNo, <span class="keyword">final</span> int pageSize) &#123;</span><br><span class="line"></span><br><span class="line">        PageMethod.startPage(pageNo, pageSize);</span><br><span class="line">        <span class="keyword">return</span> personDao.findByPage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（7）定时任务</p><p>使用spring3之后的Scheduling</p><p>SpringbootStudyApplication加上</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableScheduling</span></span><br></pre></td></tr></table></figure><p>task下，由于集群多个部署会多次执行，由业务控制执行一次，以下用redis</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.client.RedisClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(PersonTask.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisClient redisClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 定时任务执行结束才能下一次执行，redis控制集群并发</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @Async 不添加则直接单线程执行定时任务，顺序执行，集群后需要每次触发，控制由redis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled(fixedRate = 5000)</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> void taskTwo() &#123;</span><br><span class="line"></span><br><span class="line">        System.<span class="keyword">out</span>.println(Thread.currentThread().getName() + <span class="string">"======taskTwo===="</span>);</span><br><span class="line">        <span class="keyword">if</span> (redisClient.<span class="keyword">get</span>(<span class="string">"taskTwoKey"</span>) == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redisClient.<span class="keyword">set</span>(<span class="string">"taskTwoKey"</span>, <span class="string">"value"</span>)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 定时任务执行</span></span><br><span class="line">                    System.<span class="keyword">out</span>.println(Thread.currentThread().getName() + <span class="string">"----333------"</span>);</span><br><span class="line">                    Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">                    LOGGER.error(<span class="string">"taskOne定时任务异常"</span>);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    System.<span class="keyword">out</span>.println(</span><br><span class="line">                            Thread.currentThread().getName() + <span class="string">"----redisClient.remove(\"taskTwoKey\");------"</span>);</span><br><span class="line">                    redisClient.remove(<span class="string">"taskTwoKey"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>client下</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line"><span class="keyword">public</span> class RedisClient &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;<span class="keyword">String</span>, <span class="keyword">Object</span>&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(<span class="string">"boxing"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> setIfNotExsit(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">final</span> <span class="keyword">Object</span> value) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().setIfAbsent(<span class="built_in">key</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(<span class="string">"boxing"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> setIfNotExsit(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">final</span> <span class="keyword">String</span> value, <span class="keyword">final</span> <span class="built_in">int</span> <span class="built_in">second</span>) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> bool = redisTemplate.opsForValue().setIfAbsent(<span class="built_in">key</span>, value);</span><br><span class="line">        redisTemplate.expire(<span class="built_in">key</span>, <span class="built_in">second</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> <span class="built_in">get</span>(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().<span class="built_in">get</span>(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> remove(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line"></span><br><span class="line">        redisTemplate.delete(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（8）kakfa</p><p>pom.xml中jar</p><p>这里我使用的spring-kafka（它包装了apache的kafka-client）使用的kafka的时候要注意，kafka客户端（kafka-client）的版本要和kafka服务器的版本一一对应，否则，消息发送会失败。具体: <a href="https://projects.spring.io/spring-kafka/" target="_blank" rel="noopener">https://projects.spring.io/spring-kafka/</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">spring</span>:    </span><br><span class="line">  <span class="selector-tag">kafka</span>:</span><br><span class="line">    <span class="selector-tag">producer</span>:</span><br><span class="line">      <span class="selector-tag">bootstrap-servers</span>:</span><br><span class="line">      <span class="selector-tag">-</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:9092</span></span><br></pre></td></tr></table></figure><p>生产者</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> KafkaTemplate&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; kafkaTemplate;</span><br><span class="line"></span><br><span class="line">kafkaTemplate.send(<span class="string">"test"</span>, <span class="string">"这是一个测试kafka的消息"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br></pre></td></tr></table></figure><p>消费者</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.annotation.KafkaListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaConsumer</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(KafkaConsumer.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听test主题,有消息就读取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@KafkaListener</span>(topics = &#123;<span class="string">"test"</span>&#125;,groupId=<span class="string">"testGroup"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> consumer(<span class="keyword">final</span> String message)&#123;</span><br><span class="line"></span><br><span class="line">        LOGGER.info(<span class="string">"test topic message : &#123;&#125;"</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体代码：<a href="https://pan.baidu.com/s/1EpXrBR7DHv0zkGinD6qVUQ" target="_blank" rel="noopener">百度网盘</a></p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>005 springboot的web配置</title>
      <link href="/2018/04/10/springboot/005.springboot%20web/"/>
      <url>/2018/04/10/springboot/005.springboot%20web/</url>
      
        <content type="html"><![CDATA[<p>这里还是以一开始创建的springboot-study为例子，添加的Thymeleaf的支持（包含了spring-boot-starter-web）。</p><p>web的开发就涉及到了模板引擎。需要注意的是springboot内置的tomcat或者jetty对jsp的jar运行。springboot提供了FreeMarker，Thymeleaf等模板，这里以Thymeleaf为模板，springboot为它提供了完美的springMvc支持。</p><p>通过查看spring-boot-autoconfigure.jar&gt;&gt;web&gt;&gt;ResourceProperties 可以看出静态资源位置，我们放在默认的src/main/resources/static文件夹下。我们这里放了bootstrap和jquery</p><p>通过查看spring-boot-autoconfigure.jar&gt;&gt;thymeleaf&gt;&gt;ThymeleafProperties 可以看出模板默认位置是src/main/resources/templates文件夹，后缀html，我们新建一个index.html （静态首页默认直接放static下，直接访问localhost:8080即可）</p><p>在默认配置下，我们可以直接使用Thymeleaf为模板的springboot的web项目了，以下代码：</p><p>实体：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制器：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.ArrayList;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.List;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.SpringApplication;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.stereotype.Controller;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.ui.Model;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span></span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@Controller</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootStudyApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">final</span> String[] args) &#123;</span><br><span class="line">SpringApplication.run(SpringbootStudyApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@RequestMapping(<span class="string">"/"</span>)</span><br><span class="line"><span class="keyword">public</span> String index(<span class="keyword">final</span> Model model) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Person person = <span class="keyword">new</span> Person(<span class="string">"xiaoming"</span>, <span class="number">11</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"singlePerson"</span>, person);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> List&lt;Person&gt; people = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaofang"</span>, <span class="number">20</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaowang"</span>, <span class="number">30</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaoli"</span>, <span class="number">10</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaozhang"</span>, <span class="number">25</span>));</span><br><span class="line">    model.addAttribute(<span class="string">"people"</span>, people);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Thymeleaf 页面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 静态页面化动态视图，动态资源th前缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- @&#123;&#125;引入静态资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;bootstrap-3.3.7/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;bootstrap-3.3.7/css/bootstrap-theme.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span>访问model<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- $&#123;&#125; model中的属性获取 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;singlePerson.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- $&#123;not #lists.isEmpty(people)&#125; 判断不为空，也支持 &gt; &lt; != == &lt;= &gt;= 和el表达式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"$&#123;not #lists.isEmpty(people)&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- th:each 做遍历 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">th:each</span>=<span class="string">"person:$&#123;people&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;person.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;person.age&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">th:onclick</span>=<span class="string">"'getName(\''+ $&#123;person.name&#125; +'\');'"</span>&gt;</span>获取名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;jquery.min.1.12.4.js&#125;"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;bootstrap-3.3.7/js/bootstrap.min.js&#125;"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- th:inline="javascript" 这样js中就可以获取model的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">"javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">// [[$&#123;&#125;]] 获取值</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> single = [[$&#123;singlePerson&#125;]];</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(single.name + <span class="string">"/"</span> + single.age);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">getName</span><span class="params">(name)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"取得名字："</span> + name);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>springboot-study.zip( <a href="https://pan.baidu.com/s/1lfTmGCD3kxxPBvh6uiJQ1A" target="_blank" rel="noopener">https://pan.baidu.com/s/1lfTmGCD3kxxPBvh6uiJQ1A</a> )这样就可以启动了，访问localhost:8080，可以跳转到页面</p><p>当我们需要完全使用自己的配置web，添加一个类有<code>@Configuration</code>和<code>@EnableWebMvc</code>就可以了；但是大部分时候，我们是需要复用springboot帮助我们实现的代码，我们只需要我们自己的特殊配置，这时候我们需要添加一个注解有<code>@Configuration</code>的类并implements WebMvcConfigurer（extends WebMvcConfigurerAdapter类在boot2.0.1已经过时，不推荐使用了）:</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）<span class="meta">@EnableWebMvc</span>+<span class="keyword">extends</span> WebMvcConfigurationAdapter</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式会屏蔽Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置。</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）<span class="keyword">extends</span> WebMvcConfigurationSupport</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式会屏蔽Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置。</span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）<span class="keyword">extends</span> WebMvcConfigurationAdapter</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式依旧使用Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebMvc</span>注解的作用： 就是把WebMvcConfigurationSupport中的配置加载过来，你继承WebMvcConfigurerAdapter时自定义的一些配置会覆盖WebMvcConfigurationSupport 里的默认配置。</span><br><span class="line"></span><br><span class="line">如果使用的是（<span class="number">3</span>）<span class="keyword">extends</span> WebMvcConfigurationAdapter，这种方式依旧使用了spring boot的<span class="meta">@EnableAutoConfiguration</span>的设置，也就是<span class="meta">@EnableWebMvc</span>的配置也是生效的，那么WebMvcConfigurationSupport中的配置就会被加载进来，而我们继承的WebMvcConfigurerAdapter覆盖的方法又会覆盖WebMvcConfigurationSupport 里的默认配置。</span><br></pre></td></tr></table></figure><p>配置server</p><p>第一种是配置文件：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server<span class="selector-class">.servlet</span><span class="selector-class">.context-path</span>=/xxx</span><br><span class="line">server<span class="selector-class">.servlet</span><span class="selector-class">.session</span><span class="selector-class">.timeout</span><span class="selector-class">.seconds</span>=<span class="number">1</span></span><br><span class="line">server.port=<span class="number">9999</span></span><br></pre></td></tr></table></figure><p>第二种是实现WebServerFactoryCustomizer(EmbeddedServletContainerCustomizer已经改成WebServer)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.WebServerFactoryCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ServerConfig</span> <span class="keyword">implements</span> <span class="title">WebServerFactoryCustomizer</span>&lt;<span class="title">ConfigurableServletWebServerFactory</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> customize(<span class="keyword">final</span> ConfigurableServletWebServerFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">factory</span>.setPort(<span class="number">9999</span>);</span><br><span class="line">        <span class="keyword">factory</span>.setContextPath(<span class="string">"/aa"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><em>SSL配置</em></strong></p><p>SSL证书可以是自签名的，也可以是SSL证书授权中心的。这演示自签名的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> tomcat -keyalg RSA -keystore ./server.keystore </span><br><span class="line"><span class="comment">#需要注意的是，一定要指定keyalg RSA 否则会出现ERR_SSL_VERSION_OR_CIPHER_MISMATCH 错误 导致无法访问</span></span><br></pre></td></tr></table></figure><p>生成一个.keystore文件，放入项目主目录下，配置文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.port=<span class="number">8443</span></span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store</span>=server.keystore</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store-password</span>=yaojie</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store-type</span>=JKS</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-alias</span>=tomcat</span><br></pre></td></tr></table></figure><p>这样，访问<a href="https://localhost:8443/" target="_blank" rel="noopener">https://localhost:8443/</a> 即可</p><p>要做http向https的自动跳转需要改代码,放@SpringBootApplication下：</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Connector <span class="title">httpConnector</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Connector connector = <span class="keyword">new</span> Connector(<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span>);</span><br><span class="line">        connector.setScheme(<span class="string">"http"</span>);</span><br><span class="line">        connector.setPort(<span class="number">8080</span>);</span><br><span class="line">        connector.setSecure(<span class="keyword">false</span>);</span><br><span class="line">        connector.setRedirectPort(<span class="number">8443</span>);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">TomcatServletWebServerFactory <span class="title">servletContainerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> TomcatServletWebServerFactory containerFactory = <span class="keyword">new</span> TomcatServletWebServerFactory() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">postProcessContext</span><span class="params">(<span class="keyword">final</span> Context context)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">super</span>.postProcessContext(context);</span><br><span class="line">                <span class="keyword">final</span> SecurityConstraint constraint = <span class="keyword">new</span> SecurityConstraint();</span><br><span class="line">                constraint.setUserConstraint(<span class="string">"CONFIDENTIAL"</span>);</span><br><span class="line">                <span class="keyword">final</span> SecurityCollection collection = <span class="keyword">new</span> SecurityCollection();</span><br><span class="line">                collection.addPattern(<span class="string">"/*"</span>);</span><br><span class="line">                constraint.addCollection(collection);</span><br><span class="line">                context.addConstraint(constraint);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        containerFactory.addAdditionalTomcatConnectors(httpConnector());</span><br><span class="line">        <span class="keyword">return</span> containerFactory;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong><em>Favicon</em></strong></p><p>将favicon.ico放根目录或静态目录下</p><p>不展示的话配置：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.favicon</span><span class="selector-class">.enabled</span>=false</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>004 自动配置的使用</title>
      <link href="/2018/04/10/springboot/004.springboot%20autoconfig/"/>
      <url>/2018/04/10/springboot/004.springboot%20autoconfig/</url>
      
        <content type="html"><![CDATA[<p>1.新建springboot项目，添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.添加属性文件读取类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过属性文件hello.name设置。默认defaultname</span></span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">"defaultname"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过属性文件hello.age设置。默认9999</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age = <span class="number">9999</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.待注册成bean的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,"</span> + msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(<span class="keyword">final</span> String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.条件配置注册bean</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HelloProperties.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(HelloService.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix=<span class="meta-string">"hello"</span>,value=<span class="meta-string">"enable"</span>,matchIfMissing=true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceAutoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HelloProperties helloProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(HelloService.class)</span></span><br><span class="line">    <span class="keyword">public</span> HelloService helloService() &#123;</span><br><span class="line">        <span class="keyword">final</span> HelloService helloService = new HelloService();</span><br><span class="line">        helloService.setMsg(helloProperties.getName());</span><br><span class="line">        <span class="keyword">return</span> helloService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.在src/main/resources下新建META-INF/spring.factories</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org<span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-class">.autoconfigure</span><span class="selector-class">.EnableAutoConfiguration</span>=\</span><br><span class="line">com<span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.HelloServiceAutoConfig</span>,com<span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.HelloServiceAutoConfig2</span></span><br><span class="line"></span><br><span class="line">注：\符号可以让换行续读，多个自动配置用,隔开</span><br></pre></td></tr></table></figure><p>下载springboot-autoconfig.zip(<a href="https://pan.baidu.com/s/1twGPd6xoMEN0-wm3NJp2rQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1twGPd6xoMEN0-wm3NJp2rQ</a>)</p><p>6.在需要用到的项目里添加这个包的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-autoconfig<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以在属性文件中配置hello.name 或 hello.age覆盖默认配置</p><p>现在可以直接使用以下，调用方法了</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> HelloService helloService;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>003 springboot基础运行了解</title>
      <link href="/2018/04/10/springboot/003.springboot%20start/"/>
      <url>/2018/04/10/springboot/003.springboot%20start/</url>
      
        <content type="html"><![CDATA[<p>1.springboot项目的起始类默认是注解了@SpringBootApplication，支持去除特定的自动配置类，如@SpringBootApplication(exclude=DataSourceAutoConfiguration.class)</p><p>2.属性文件可以是properties或yml文件</p><p>3.虽然springboot推荐不用xml配置，但必须的时候，可以@ImportResource({“classpath:xxxx.xml”})</p><p>4.springboot默认自带tomcat，打jar包，这个时候和运行普通jar一样，可以带参数，如：java -jar boot.jar –server.port=8888</p><p>5.属性文件中的值获取application.properties</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student1.<span class="attribute">name</span>=xiaoming</span><br><span class="line">student1.<span class="attribute">age</span>=10</span><br></pre></td></tr></table></figure><ul><li><p>直接在代码中用<code>@Value(&quot;${student1.age}&quot;)</code>获取</p></li><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Component</span></span><br><span class="line"><span class="variable">@ConfigurationProperties</span>(prefix=<span class="string">"student1"</span>)</span><br><span class="line">public class Student1 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">private</span> <span class="selector-tag">String</span> <span class="selector-tag">name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">private</span> <span class="selector-tag">int</span> <span class="selector-tag">age</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">set</span>，<span class="selector-tag">get</span>方法...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后使用</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Student1 student1;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">aa</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   System.out.println(<span class="string">"==================="</span> + student1.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>6.日志</p><p>默认Logback</p>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logging.<span class="attribute">file</span>=/User/yy/mylog.log</span><br><span class="line"></span><br><span class="line">logging.level.包名=<span class="builtin-name">INFO</span> #或者DEBUG什么的级别</span><br></pre></td></tr></table></figure><p>7.profile</p><ul><li><p>再创建一个application-dev.properties</p><p>在原来的application.properties中指定spring.profiles.active=dev</p></li><li><p>使用application.yml </p></li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">student1.name</span>: xiaoming</span><br><span class="line"><span class="attribute">student1.age</span>: 10</span><br><span class="line"></span><br><span class="line"><span class="attribute">spring.profiles.active</span>: dev #使用dev的环境</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="attribute">spring.profiles</span>: dev</span><br><span class="line"><span class="attribute">server.port</span>: 8999</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="attribute">spring.profiles</span>: test</span><br><span class="line"><span class="attribute">server.port</span>: 8888</span><br></pre></td></tr></table></figure><p>8.配置属性文件参数debug: true，可以查看已启用和未启用的自动配置</p><p><strong><em>一个不重要的玩意</em></strong></p><p>启动动画修改：在src/main/resources下新建一个banner.txt。这个文件里是显示的图案</p><p>关闭启动动画：修改main方法</p>  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SpringApplication <span class="keyword">app</span> = new SpringApplication(SpringbootStudyApplication.<span class="keyword">class</span>);</span><br><span class="line"><span class="keyword">app</span>.setBannerMode(Mode.OFF);</span><br><span class="line"><span class="keyword">app</span>.<span class="keyword">run</span>(<span class="keyword">args</span>);</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">或</span><br><span class="line"><span class="selector-tag">new</span> <span class="selector-tag">SpringApplicationBuilder</span>(<span class="selector-tag">SpringbootStudyApplication</span><span class="selector-class">.class</span>)<span class="selector-class">.bannerMode</span>(<span class="selector-tag">Mode</span><span class="selector-class">.OFF</span>)<span class="selector-class">.run</span>(<span class="selector-tag">args</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>002 springboot搭建</title>
      <link href="/2018/04/09/springboot/002.springboot%20create/"/>
      <url>/2018/04/09/springboot/002.springboot%20create/</url>
      
        <content type="html"><![CDATA[<p>springboot项目的创建方式多种，这里主要介绍一种最简单的方式：</p><h5 id="sts创建"><a href="#sts创建" class="headerlink" title="sts创建"></a>sts创建</h5><p>1.File&gt;&gt;New&gt;&gt;Spring Starter Project<img src="/images/springboot/002-01.png" alt="002-01"></p><p>2.填写好一些基本的maven配置，点击下一步<img src="/images/springboot/002-02.png" alt="002-02"></p><p>3.选择好spring Boot Version，选择web，直接点击Finish即可<img src="/images/springboot/002-03.png" alt="002-03"></p><p>4.这样等待下载jar，之后就会有以下的项目出现</p><p><img src="/images/springboot/002-04.png" alt="002-04"></p><p>官网参考 <a href="https://projects.spring.io/spring-boot/#quick-start" target="_blank" rel="noopener">https://projects.spring.io/spring-boot/#quick-start</a></p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>RestTemplate的用法</title>
      <link href="/2018/04/08/other/restTemplate/"/>
      <url>/2018/04/08/other/restTemplate/</url>
      
        <content type="html"><![CDATA[<p>Object… urlVariables 是对url的补充</p><p>Class responseType是返回的类型</p><p>Object request是实体(MultiValueMap是可以的)或者HttpEntity</p><ol><li><p>getForEntity(String url, Class responseType, Object… urlVariables);</p><p>getForObject(String url, Class responseType, Object… urlVariables);</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ResponseEntity&lt;<span class="built_in">String</span>&gt; result = getForEntity(<span class="string">"http://USER-SERVICE/user?name=&#123;1&#125;"</span>, <span class="built_in">String</span>.<span class="keyword">class</span>, <span class="string">"xiaoming"</span>);</span><br><span class="line"><span class="built_in">String</span> result = getForObject(<span class="string">"http://USER-SERVICE/user?name=&#123;1&#125;"</span>, <span class="built_in">String</span>.<span class="keyword">class</span>, <span class="string">"xiaoming"</span>)</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(String url, Class responseType, Map urlVariables);</p><p>getForObject(String url, Class responseType, Map urlVariables);</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"name"</span>, <span class="string">"xiaoming"</span>);</span><br><span class="line">ResponseEntity&lt;<span class="keyword">String</span>&gt; result = getForEntity(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>, <span class="keyword">String</span>.class, <span class="built_in">map</span>);</span><br><span class="line"><span class="keyword">String</span> result = getForObject(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>, <span class="keyword">String</span>.class, <span class="built_in">map</span>)</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(URI url, Class responseType)</p><p>getForObject(URI url, Class responseType)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UriComponents uriComponents = UriComponentsBuilder.fromUriString(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>).build().expand(<span class="string">"xiaoming"</span>).encode();</span><br><span class="line">ResponseEntity&lt;<span class="built_in">String</span>&gt; result = restTemplate.getForEntity(uriComponents.toUri(), <span class="built_in">String</span>.<span class="keyword">class</span>);</span><br><span class="line"><span class="built_in">String</span> result = restTemplate.getForObject(uriComponents.toUri(), <span class="built_in">String</span>.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure></li><li><p>postForEntity(String url, Object request, Class responseType, Object… urlVariables)</p><p>postForObject(String url, Object request, Class responseType, Object… urlVariables)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span> request 可以是普通对象(MultiValueMap也行)，也可以是HttpEntity</span><br></pre></td></tr></table></figure></li><li><p>postForEntity(String url, Object request, Class responseType, Map urlVariables)</p><p>postForObject(String url, Object request, Class responseType, Map urlVariables)</p></li><li><p>postForEntity(String url, Object request, Class responseType)</p><p>postForObject(String url, Object request, Class responseType)    </p></li><li><p>….等等PUT，DELETE都是一样的</p></li></ol><p>SSL访问的RestTemplate</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">            &lt;<span class="keyword">version</span>&gt;<span class="number">4.5</span>.3&lt;/<span class="keyword">version</span>&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate restTemplate() throws KeyStoreException, NoSuchAlgorithmException, KeyManagementException &#123;</span><br><span class="line">        <span class="keyword">final</span> TrustStrategy acceptingTrustStrategy = (<span class="keyword">final</span> X509Certificate[] chain, <span class="keyword">final</span> String authType) -&gt; <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SSLContext sslContext = org.apache.http.ssl.SSLContexts.custom()</span><br><span class="line">                .loadTrustMaterial(<span class="literal">null</span>, acceptingTrustStrategy)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SSLConnectionSocketFactory csf = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CloseableHttpClient httpClient = HttpClients.custom()</span><br><span class="line">                .setSSLSocketFactory(csf)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> HttpComponentsClientHttpRequestFactory requestFactory =</span><br><span class="line">                <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory();</span><br><span class="line"></span><br><span class="line">        requestFactory.setHttpClient(httpClient);</span><br><span class="line">        <span class="keyword">final</span> RestTemplate restTemplate = <span class="keyword">new</span> RestTemplate(requestFactory);</span><br><span class="line">        <span class="keyword">return</span> restTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>设置头访问</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个对象有add()方法，可往请求头存入信息</span></span><br><span class="line">    <span class="keyword">final</span> HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">    <span class="comment">// 解决中文乱码</span></span><br><span class="line">    headers.setContentType(MediaType.APPLICATION_JSON_UTF8);</span><br><span class="line">    <span class="keyword">final</span> HttpEntity&lt;<span class="built_in">Object</span>&gt; entity = <span class="keyword">new</span> HttpEntity&lt;<span class="built_in">Object</span>&gt;(request, headers);</span><br><span class="line">    <span class="keyword">final</span> ResponseEntity&lt;responseClass&gt; responseObject = restTemplate.exchange(url, HttpMethod.POST, entity, responseClass);</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.jianshu.com/p/beafe38428c7" target="_blank" rel="noopener">https://www.jianshu.com/p/beafe38428c7</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日期各种转化</title>
      <link href="/2018/04/08/other/dateUtil/"/>
      <url>/2018/04/08/other/dateUtil/</url>
      
        <content type="html"><![CDATA[<p>日期各种转化的工具类</p><p>功能： </p><p>1.获取指定当天的23:59:59 getEndTimeOfDay</p><p>2.获取指定当天的00:00:00 getStartTimeOfDay</p><p>3.获取距当前月n个月的起始时间（当前月0）getStartOfMonth</p><p>4.获取距当前月n个月的结束时间（当前月0）getEndOfMonth</p><p>5.时间字符串转化为日期类型 parseDateTime</p><p>6.加减时间年/月/日/分… addTime</p><p>7.设置指定日期的年/月/日/分… setTime</p><p>8.判断是否同一天 isSameDay</p><p>9.把日期转换成日历 toCalendar</p><p>10.计算两个日期之间相差的年，不足一年的被舍去 minusToYear</p><p>11.计算两个日期之间的月份，不足一月的被舍去 minusToMonth</p><p>12.计算两个日期之间的天数，不足一天的被舍去 minusToDay</p><p>13.计算两个日期之间的小时数，不足一小时的被舍去 minusToHours</p><p>14.计算两个日期之间的分钟数不足一分钟的被舍去 minusToMinutes</p><p>15.计算两个日期之间的秒数不足以秒的被舍去 minusToSeconds</p><p>16.计算两个日期之间的毫秒数 minusToMilliSecond</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Calendar;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 日期工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String YYYY_MM_DD_HHMMSS = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String YYYY_MM_DD = <span class="string">"yyyy-MM-dd"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1秒钟的毫秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_PER_SECOND = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1分钟的毫秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_PER_MINUTE = <span class="number">60</span> * MILLIS_PER_SECOND;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1小时的毫秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_PER_HOUR = <span class="number">60</span> * MILLIS_PER_MINUTE;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1天的毫秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> MILLIS_PER_DAY = <span class="number">24</span> * MILLIS_PER_HOUR;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定当天的23:59:59</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">getEndTimeOfDay</span><span class="params">(<span class="keyword">final</span> Date date)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String tmpDate = <span class="keyword">new</span> SimpleDateFormat(YYYY_MM_DD).format(date);</span><br><span class="line">        tmpDate = tmpDate + <span class="string">" 23:59:59"</span>;</span><br><span class="line">        <span class="keyword">final</span> Date endDate = <span class="keyword">new</span> SimpleDateFormat(YYYY_MM_DD_HHMMSS)</span><br><span class="line">                .parse(tmpDate);</span><br><span class="line">        <span class="keyword">return</span> endDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取指定当天的00:00:00</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">getStartTimeOfDay</span><span class="params">(<span class="keyword">final</span> Date date)</span> <span class="keyword">throws</span> ParseException </span>&#123;</span><br><span class="line"></span><br><span class="line">        String tmpDate = <span class="keyword">new</span> SimpleDateFormat(YYYY_MM_DD).format(date);</span><br><span class="line">        tmpDate = tmpDate + <span class="string">" 00:00:00"</span>;</span><br><span class="line">        <span class="keyword">final</span> Date startDate = <span class="keyword">new</span> SimpleDateFormat(YYYY_MM_DD_HHMMSS)</span><br><span class="line">                .parse(tmpDate);</span><br><span class="line">        <span class="keyword">return</span> startDate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取当前月距amount个月的起始时间，如：2012-09月前一个月（amount = -1）的起始日期：2012-08-01 00:00:00.000</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> amount 间隔月份</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 当前月之前amount个月的起始时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">getStartOfMonth</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> Calendar cal = Calendar.getInstance();</span><br><span class="line">cal.add(Calendar.MONTH, amount);</span><br><span class="line">cal.set(Calendar.HOUR_OF_DAY, cal.getMinimum(Calendar.HOUR_OF_DAY));</span><br><span class="line">cal.set(Calendar.MINUTE, cal.getMinimum(Calendar.MINUTE));</span><br><span class="line">cal.set(Calendar.SECOND, cal.getMinimum(Calendar.SECOND));</span><br><span class="line">cal.set(Calendar.MILLISECOND, cal.getMinimum(Calendar.MILLISECOND));</span><br><span class="line">cal.set(Calendar.DAY_OF_MONTH, <span class="number">1</span>);</span><br><span class="line"><span class="function"><span class="keyword">return</span> cal.<span class="title">getTime</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取距当前月amount个月的结束时间，如：2012-09月前一个月（amount = 1）的起始日期：2012-08-31 23:59:59.999</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> amount 间隔月份</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 距当前月amount个月的结束时间</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">getEndOfMonth</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> Calendar cal = Calendar.getInstance();</span><br><span class="line">cal.add(Calendar.MONTH, amount + <span class="number">1</span>);</span><br><span class="line">cal.set(Calendar.HOUR_OF_DAY, cal.getMaximum(Calendar.HOUR_OF_DAY));</span><br><span class="line">cal.set(Calendar.MINUTE, cal.getMaximum(Calendar.MINUTE));</span><br><span class="line">cal.set(Calendar.SECOND, cal.getMaximum(Calendar.SECOND));</span><br><span class="line">cal.set(Calendar.MILLISECOND, cal.getMaximum(Calendar.MILLISECOND));</span><br><span class="line">cal.set(Calendar.DAY_OF_MONTH, <span class="number">1</span>);</span><br><span class="line">cal.add(Calendar.DAY_OF_MONTH, <span class="number">-1</span>);</span><br><span class="line"><span class="function"><span class="keyword">return</span> cal.<span class="title">getTime</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 时间字符串转化为日期类型</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dateTime 时间字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Date</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">parseDateTime</span><span class="params">(<span class="keyword">final</span> String format, <span class="keyword">final</span> String dateTime)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> SimpleDateFormat(format).parse(dateTime);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> ParseException e) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断是否同一天</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">boolean</span> <span class="title">isSameDay</span><span class="params">(<span class="keyword">final</span> Date date1, <span class="keyword">final</span> Date date2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (date1 == <span class="keyword">null</span> || date2 == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> Calendar cal1 = Calendar.getInstance();</span><br><span class="line">cal1.setTime(date1);</span><br><span class="line"><span class="keyword">final</span> Calendar cal2 = Calendar.getInstance();</span><br><span class="line">cal2.setTime(date2);</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="title">isSameDay</span><span class="params">(cal1, cal2)</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">boolean</span> <span class="title">isSameDay</span><span class="params">(<span class="keyword">final</span> Calendar cal1, <span class="keyword">final</span> Calendar cal2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cal1 == <span class="keyword">null</span> || cal2 == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> (cal1.get(Calendar.ERA) == cal2.get(Calendar.ERA)</span><br><span class="line">&amp;&amp; cal1.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) &amp;&amp; cal1</span><br><span class="line">.get(Calendar.DAY_OF_YEAR) == cal2</span><br><span class="line">.get(Calendar.DAY_OF_YEAR));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 加减年/月/日/分...</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date 日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> calendarField Calendar.YEAR、Calendar.MONTH、Calendar.DAY_OF_MONTH、Calendar.HOUR_OF_DAY、Calendar.MINUTE、Calendar.SECOND、Calendar.MILLISECOND</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> amount 加减数量</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">addTime</span><span class="params">(<span class="keyword">final</span> Date date, <span class="keyword">final</span> <span class="keyword">int</span> calendarField, <span class="keyword">final</span> <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (date == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> Calendar c = Calendar.getInstance();</span><br><span class="line">c.setTime(date);</span><br><span class="line">c.add(calendarField, amount);</span><br><span class="line"><span class="function"><span class="keyword">return</span> c.<span class="title">getTime</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置指定日期的各域</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date --指定日期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> calendarFiled --域包括年、月、日、时、分、秒、毫秒</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> amount --数量</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 设置后日期</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Date <span class="title">setTime</span><span class="params">(<span class="keyword">final</span> Date date, <span class="keyword">final</span> <span class="keyword">int</span> calendarFiled, <span class="keyword">final</span> <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == date) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"The date must not be null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> Calendar c = Calendar.getInstance();</span><br><span class="line">c.setTime(date);</span><br><span class="line">c.set(calendarFiled, amount);</span><br><span class="line"><span class="function"><span class="keyword">return</span> c.<span class="title">getTime</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 把日期转换成日历</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date --日期格式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 日历格式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Calendar <span class="title">toCalendar</span><span class="params">(<span class="keyword">final</span> Date date)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> Calendar c = Calendar.getInstance();</span><br><span class="line">c.setTime(date);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间相差的年，不足一年的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2相差的年份</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">int</span> <span class="title">minusToYear</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == d1 || <span class="keyword">null</span> == d2) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException(<span class="string">"d1和d2都不能为null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> Calendar cl1 = Calendar.getInstance();</span><br><span class="line"><span class="keyword">final</span> Calendar cl2 = Calendar.getInstance();</span><br><span class="line">cl1.setTime(d1);</span><br><span class="line">cl2.setTime(d2);</span><br><span class="line"><span class="keyword">return</span> cl1.get(Calendar.YEAR) - cl2.get(Calendar.YEAR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的月份，不足一月的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1  --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2  --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差月份</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">int</span> <span class="title">minusToMonth</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == d1 || <span class="keyword">null</span> == d2) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException(<span class="string">"d1和d2都不能为null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> Calendar cl1 = Calendar.getInstance();</span><br><span class="line"><span class="keyword">final</span> Calendar cl2 = Calendar.getInstance();</span><br><span class="line">cl1.setTime(d1);</span><br><span class="line">cl2.setTime(d2);</span><br><span class="line"><span class="keyword">return</span> (cl1.get(Calendar.YEAR) - cl2.get(Calendar.YEAR)) * <span class="number">12</span></span><br><span class="line">+ cl1.get(Calendar.MONTH) - cl2.get(Calendar.MONTH);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的天数，不足一天的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差的天数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">int</span> <span class="title">minusToDay</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) (minusToMilliSecond(d1, d2) / MILLIS_PER_DAY);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的小时数，不足一小时的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差的小时数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">int</span> <span class="title">minusToHours</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) (minusToMilliSecond(d1, d2) / MILLIS_PER_HOUR);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的分钟数不足一分钟的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差的分钟数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">long</span> <span class="title">minusToMinutes</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> minusToMilliSecond(d1, d2) / MILLIS_PER_MINUTE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的秒数不足以秒的被舍去，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差的秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">long</span> <span class="title">minusToSeconds</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> minusToMilliSecond(d1, d2) / MILLIS_PER_SECOND;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算两个日期之间的毫秒数，d1和d2都不能为null</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d1 --日期1</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> d2 --日期2</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> d1和d2之间相差的毫秒数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">long</span> <span class="title">minusToMilliSecond</span><span class="params">(<span class="keyword">final</span> Date d1, <span class="keyword">final</span> Date d2)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == d1 || <span class="keyword">null</span> == d2) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> java.lang.IllegalArgumentException(<span class="string">"d1和d2都不能为null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d1.getTime() - d2.getTime();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>获取当前session的方法</title>
      <link href="/2018/04/08/other/session%20get/"/>
      <url>/2018/04/08/other/session%20get/</url>
      
        <content type="html"><![CDATA[<p>这个是直接获取session的工具类</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.http.HttpSession;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpSessionUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> HttpSession getHttpSession() &#123;</span><br><span class="line"></span><br><span class="line">        HttpSession httpSession = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder</span><br><span class="line">                .currentRequestAttributes();</span><br><span class="line">        httpSession = requestAttributes.getRequest().getSession();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpSession;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XML和json和object的互转</title>
      <link href="/2018/04/08/other/xml%20and%20json/"/>
      <url>/2018/04/08/other/xml%20and%20json/</url>
      
        <content type="html"><![CDATA[<p>XML和json和object的互转的工具类</p><p>添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>20160810<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>功能：</p><ul><li>toString object转string</li><li>toObject object转实体</li><li>toList string转list&lt;实体&gt;</li><li>toJsonNode string转jsonNode</li><li>xmlToJsonObj xml转jsonObject</li><li>xmlToJsonStr xml转成jsonstring</li><li>jsonToXmlStr jsonstring转成xml</li><li>objToXmlStr object转出xml</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.<span class="keyword">JSONObject</span>;</span><br><span class="line"><span class="keyword">import</span> org.json.<span class="keyword">XML</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude.Include;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonParseException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.core.JsonProcessingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.DeserializationFeature;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonMappingException;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.SerializationFeature;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class JsonXmlUtils &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通用mapper</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ObjectMapper mapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">// json-&gt;bean ,忽略bean中不存在的属性</span></span><br><span class="line">        mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, <span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// bean-&gt;json ,忽略为null的属性</span></span><br><span class="line">        mapper.setSerializationInclusion(Include.NON_NULL);</span><br><span class="line">        <span class="comment">// map-&gt;json ,忽略为null的key</span></span><br><span class="line">        mapper.configure(SerializationFeature.WRITE_NULL_MAP_VALUES, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param obj 待转换的对象</span></span><br><span class="line"><span class="comment">     * @return String 字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> toString(<span class="keyword">final</span> <span class="keyword">Object</span> obj) <span class="keyword">throws</span> JsonProcessingException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (obj <span class="keyword">instanceof</span> <span class="keyword">String</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">String</span>) obj;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mapper.writeValueAsString(obj);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param obj 待转换的对象</span></span><br><span class="line"><span class="comment">     * @param clazz 目标对象class</span></span><br><span class="line"><span class="comment">     * @return Object 目标对象实例</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; T toObject(<span class="keyword">final</span> <span class="keyword">Object</span> obj, <span class="keyword">final</span> Class&lt;T&gt; clazz)</span><br><span class="line">            <span class="keyword">throws</span> JsonParseException, JsonMappingException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (obj == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mapper.readValue(toString(obj), clazz);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param jsonStr 带转换的字符串</span></span><br><span class="line"><span class="comment">     * @param clazz 目标对象</span></span><br><span class="line"><span class="comment">     * @return List list集合</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; List&lt;T&gt; toList(<span class="keyword">final</span> <span class="keyword">String</span> jsonStr, <span class="keyword">final</span> Class&lt;T&gt; clazz)</span><br><span class="line">            <span class="keyword">throws</span> JsonParseException, JsonMappingException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List&lt;T&gt; lists = <span class="keyword">new</span> LinkedList&lt;T&gt;();</span><br><span class="line">        <span class="keyword">final</span> List&lt;<span class="keyword">Object</span>&gt; list = toObject(jsonStr, List.class);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">null</span> != list) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">Object</span> object : list) &#123;</span><br><span class="line">                <span class="keyword">final</span> T t = toObject(object, clazz);</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">null</span> != t) &#123;</span><br><span class="line">                    lists.<span class="built_in">add</span>(t);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> lists;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JsonNode toJsonNode(<span class="keyword">final</span> <span class="keyword">String</span> jsonStr) <span class="keyword">throws</span> JsonProcessingException, IOException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mapper.readTree(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将xml字符串转成Json对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param xmlStr</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">JSONObject</span> xmlToJsonObj(<span class="keyword">final</span> <span class="keyword">String</span> xmlStr) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">XML</span>.toJSONObject(xmlStr, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将xml字符串转成json字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param xmlStr</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> xmlToJsonStr(<span class="keyword">final</span> <span class="keyword">String</span> xmlStr) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">JSONObject</span>.valueToString(xmlToJsonObj(xmlStr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将json字符串转成xml字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param jsonStr</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> jsonToXmlStr(<span class="keyword">final</span> <span class="keyword">String</span> jsonStr) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">XML</span>.toString(<span class="keyword">new</span> <span class="keyword">JSONObject</span>(jsonStr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将对象转成xml字符串</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param obj</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     * @throws JSONException</span></span><br><span class="line"><span class="comment">     * @throws JsonProcessingException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> objToXmlStr(<span class="keyword">final</span> <span class="keyword">Object</span> obj) <span class="keyword">throws</span> JSONException, JsonProcessingException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">XML</span>.toString(<span class="keyword">new</span> <span class="keyword">JSONObject</span>(toString(obj)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>表格pdf和csv的导出</title>
      <link href="/2018/04/08/other/pdf%20table%20and%20csv/"/>
      <url>/2018/04/08/other/pdf%20table%20and%20csv/</url>
      
        <content type="html"><![CDATA[<p>这个是简单的表格导出的工具类</p><ul><li><p>PDF</p><p>1.添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itextpdf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>itextpdf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.添加文字模板TCC文件 SIMSUN.TTC，网盘地址：<a href="https://pan.baidu.com/s/1VHgBo3R_WTnB3Dgmfm1RuQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1VHgBo3R_WTnB3Dgmfm1RuQ</a></p><p>3.编写PdfPageEventHelper可以添加水印等操作</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.BaseColor;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Document;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.DocumentException;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.BaseFont;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfContentByte;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfPageEventHelper;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class PdfEvent extends PdfPageEventHelper &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(PdfEvent.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">String</span> waterMarkName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">String</span> pagesize;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> PdfEvent(<span class="keyword">final</span> <span class="keyword">String</span> waterMarkName, <span class="keyword">final</span> <span class="keyword">String</span> pagesize) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.pagesize = pagesize;</span><br><span class="line">        <span class="keyword">this</span>.waterMarkName = waterMarkName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onStartPage(<span class="keyword">final</span> PdfWriter writer, <span class="keyword">final</span> Document document) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>.onStartPage(writer, document);</span><br><span class="line">        PdfContentByte under = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> pattern = <span class="string">"[A-Za-z0-9_!@#$%&amp;*()]"</span>;</span><br><span class="line">        <span class="keyword">final</span> Pattern r = Pattern.compile(pattern);</span><br><span class="line">        BaseFont base = <span class="keyword">null</span>;<span class="comment">// 使用系统字体</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            base = BaseFont.<span class="built_in">createFont</span>(<span class="string">"/fonts/SIMSUN.TTC"</span> + <span class="string">",1"</span>, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> DocumentException e) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"添加水印报错："</span> + e);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"添加水印报错："</span> + e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> j = waterMarkName.length();</span><br><span class="line">        <span class="built_in">char</span> c = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">int</span> rise = <span class="number">400</span>;</span><br><span class="line">        under = writer.getDirectContentUnder();</span><br><span class="line">        under.beginText();</span><br><span class="line">        under.setTextRise(<span class="number">60</span>);<span class="comment">// 斜度</span></span><br><span class="line">        under.setColorFill(BaseColor.LIGHT_GRAY);</span><br><span class="line">        <span class="keyword">if</span> (j &gt;= <span class="number">7</span>) &#123;</span><br><span class="line">            under.setFontAndSize(base, <span class="number">40</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"A4"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">100</span>, <span class="number">200</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"A4rotate"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">200</span>, <span class="number">70</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> k = <span class="number">0</span>; k &lt; j; k++) &#123;</span><br><span class="line">                under.setTextRise(rise);</span><br><span class="line">                c = waterMarkName.charAt(k);</span><br><span class="line">                <span class="keyword">final</span> Matcher m = r.matcher(<span class="keyword">String</span>.valueOf(c));</span><br><span class="line">                <span class="keyword">if</span> (m.matches()) &#123;</span><br><span class="line">                    under.showText(c + <span class="string">" "</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    under.showText(c + <span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                rise -= <span class="number">35</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j &gt;= <span class="number">4</span> &amp;&amp; j &lt; <span class="number">7</span>) &#123;</span><br><span class="line">            under.setFontAndSize(base, <span class="number">55</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"A4"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">160</span>, <span class="number">135</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"A4rotate"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">260</span>, <span class="number">50</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> k = <span class="number">0</span>; k &lt; j; k++) &#123;</span><br><span class="line">                under.setTextRise(rise);</span><br><span class="line">                c = waterMarkName.charAt(k);</span><br><span class="line">                <span class="keyword">final</span> Matcher m = r.matcher(<span class="keyword">String</span>.valueOf(c));</span><br><span class="line">                <span class="keyword">if</span> (m.matches()) &#123;</span><br><span class="line">                    under.showText(c + <span class="string">" "</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    under.showText(c + <span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                rise -= <span class="number">50</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            under.setFontAndSize(base, <span class="number">70</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">"A4"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">200</span>, <span class="number">90</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"A4rotate"</span>.equals(pagesize)) &#123;</span><br><span class="line">                under.setTextMatrix(<span class="number">300</span>, <span class="number">30</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> k = <span class="number">0</span>; k &lt; j; k++) &#123;</span><br><span class="line">                under.setTextRise(rise);</span><br><span class="line">                c = waterMarkName.charAt(k);</span><br><span class="line">                <span class="keyword">final</span> Matcher m = r.matcher(<span class="keyword">String</span>.valueOf(c));</span><br><span class="line">                <span class="keyword">if</span> (m.matches()) &#123;</span><br><span class="line">                    under.showText(c + <span class="string">" "</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    under.showText(c + <span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                rise -= <span class="number">60</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 添加水印文字</span></span><br><span class="line">        under.endText();</span><br><span class="line">        <span class="comment">// 添加水印图片</span></span><br><span class="line">        <span class="comment">// under.addImage(image);</span></span><br><span class="line">        <span class="comment">// 画个圈</span></span><br><span class="line">        <span class="comment">// under.ellipse(250, 450, 350, 550);</span></span><br><span class="line">        under.setLineWidth(<span class="number">1</span>f);</span><br><span class="line">        under.<span class="built_in">stroke</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.pdf的工具类</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Document;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.DocumentException;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Element;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Font;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Paragraph;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.Rectangle;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.BaseFont;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfPCell;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfPTable;</span><br><span class="line"><span class="keyword">import</span> com.itextpdf.<span class="built_in">text</span>.pdf.PdfWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class CreateTablePDF &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = Logger.getLogger(CreateTablePDF.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建一份普通表格的PDF文件</span></span><br><span class="line"><span class="comment">     * @param dataList 每行的数据，包含头标题</span></span><br><span class="line"><span class="comment">     * @param title 大标题</span></span><br><span class="line"><span class="comment">     * @param date 小标题</span></span><br><span class="line"><span class="comment">     * @param fileName 文件名称</span></span><br><span class="line"><span class="comment">     * @param response HttpServletResponse</span></span><br><span class="line"><span class="comment">     * @param waterMark 水印</span></span><br><span class="line"><span class="comment">     * @param pageSize 纸张如A4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> createNormalTable(<span class="keyword">final</span> List&lt;List&lt;<span class="keyword">String</span>&gt;&gt; dataList, <span class="keyword">final</span> <span class="keyword">String</span> title, <span class="keyword">final</span> <span class="keyword">String</span> date,</span><br><span class="line">                                         <span class="keyword">String</span> fileName, <span class="keyword">final</span> HttpServletResponse response, <span class="keyword">final</span> <span class="keyword">String</span> waterMark,</span><br><span class="line">                                         <span class="keyword">final</span> Rectangle pageSize) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (fileName == <span class="keyword">null</span>) &#123;</span><br><span class="line">            fileName = title + <span class="string">".pdf"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">final</span> Document pdfDocument = <span class="keyword">new</span> Document(pageSize);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.setContentType(<span class="string">"application/pdf;charset=gb2312"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Content-Disposition"</span>,</span><br><span class="line">                    <span class="string">"attachment;filename="</span> + <span class="keyword">new</span> <span class="keyword">String</span>(fileName.getBytes(<span class="string">"gb2312"</span>), <span class="string">"ISO8859-1"</span>));</span><br><span class="line">            <span class="comment">//构建一个PDF文档输出流程</span></span><br><span class="line">            <span class="keyword">final</span> PdfWriter writer = PdfWriter.getInstance(pdfDocument, response.getOutputStream());</span><br><span class="line">            <span class="comment">// 添加水印</span></span><br><span class="line">            <span class="keyword">if</span> (waterMark != <span class="keyword">null</span> &amp;&amp; waterMark != <span class="string">""</span>) &#123;</span><br><span class="line">                writer.setPageEvent(<span class="keyword">new</span> PdfEvent(waterMark, <span class="string">"A4"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//设置中文字体和字体样式</span></span><br><span class="line">            <span class="comment">//final BaseFont bfChinese = BaseFont.createFont("STSong-Light", "UniGB-UCS2-H", BaseFont.NOT_EMBEDDED);</span></span><br><span class="line">            <span class="keyword">final</span> BaseFont bfChinese = BaseFont.<span class="built_in">createFont</span>(<span class="string">"/fonts/SIMSUN.TTC"</span> + <span class="string">",1"</span>,</span><br><span class="line">                    BaseFont.IDENTITY_H, BaseFont.EMBEDDED);<span class="comment">// 使用系统字体</span></span><br><span class="line">            <span class="keyword">final</span> Font f28 = <span class="keyword">new</span> Font(bfChinese, <span class="number">28</span>, Font.NORMAL);</span><br><span class="line">            <span class="keyword">final</span> Font f10 = <span class="keyword">new</span> Font(bfChinese, <span class="number">10</span>, Font.NORMAL);</span><br><span class="line">            <span class="comment">//打开PDF文件流</span></span><br><span class="line">            pdfDocument.<span class="built_in">open</span>();</span><br><span class="line">            <span class="keyword">final</span> Paragraph t = <span class="keyword">new</span> Paragraph(title, f28);</span><br><span class="line">            <span class="keyword">final</span> Paragraph d = <span class="keyword">new</span> Paragraph(date, f10);</span><br><span class="line">            t.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">            d.setAlignment(Element.ALIGN_CENTER);</span><br><span class="line">            pdfDocument.<span class="built_in">add</span>(t);</span><br><span class="line">            pdfDocument.<span class="built_in">add</span>(d);</span><br><span class="line">            pdfDocument.<span class="built_in">add</span>(<span class="keyword">new</span> Paragraph(<span class="string">"   "</span>, f10));</span><br><span class="line">            <span class="comment">//创建一个N列的表格控件</span></span><br><span class="line">            <span class="keyword">final</span> PdfPTable pdfTable = <span class="keyword">new</span> PdfPTable(dataList.<span class="built_in">get</span>(<span class="number">0</span>).<span class="built_in">size</span>());</span><br><span class="line">            <span class="comment">//设置表格占PDF文档100%宽度</span></span><br><span class="line">            pdfTable.setWidthPercentage(<span class="number">100</span>);</span><br><span class="line">            <span class="comment">//水平方向表格控件左对齐</span></span><br><span class="line">            pdfTable.setHorizontalAlignment(PdfPTable.ALIGN_LEFT);</span><br><span class="line">            <span class="comment">//创建一个表格的正文内容单元格</span></span><br><span class="line">            <span class="keyword">final</span> PdfPCell pdfTableContentCell = <span class="keyword">new</span> PdfPCell();</span><br><span class="line">            pdfTableContentCell.setHorizontalAlignment(PdfPCell.ALIGN_CENTER);</span><br><span class="line">            pdfTableContentCell.setVerticalAlignment(PdfPCell.ALIGN_MIDDLE);</span><br><span class="line">            <span class="comment">//表格内容行数的填充</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; dataList.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">String</span> tableContentInfo : dataList.<span class="built_in">get</span>(i)) &#123;</span><br><span class="line">                    pdfTableContentCell.setPhrase(<span class="keyword">new</span> Paragraph(tableContentInfo, f10));</span><br><span class="line">                    pdfTable.addCell(pdfTableContentCell);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            pdfDocument.<span class="built_in">add</span>(pdfTable);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> FileNotFoundException de) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"pdf file: "</span> + de.getMessage());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> DocumentException de) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"document: "</span> + de.getMessage());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException de) &#123;</span><br><span class="line">            LOGGER.error(<span class="string">"pdf font: "</span> + de.getMessage());</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//关闭PDF文档流，OutputStream文件输出流也将在PDF文档流关闭方法内部关闭</span></span><br><span class="line">            <span class="keyword">if</span> (pdfDocument != <span class="keyword">null</span>) &#123;</span><br><span class="line">                pdfDocument.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.测试类</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value = <span class="string">"/index.do"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> index(<span class="keyword">final</span> HttpServletResponse response) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> List&lt;List&lt;<span class="keyword">String</span>&gt;&gt; lines = <span class="keyword">new</span> ArrayList&lt;List&lt;<span class="keyword">String</span>&gt;&gt;();</span><br><span class="line">List&lt;<span class="keyword">String</span>&gt; <span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列标题"</span>);</span><br><span class="line">lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line"><span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列文字"</span>);</span><br><span class="line">        lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line">        <span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列文字"</span>);</span><br><span class="line">        lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> title = <span class="string">"正标题"</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> date = <span class="string">"副标题"</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> fileName = <span class="string">"文件名称.pdf"</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> waterMark = <span class="string">"水印"</span>;</span><br><span class="line">        <span class="keyword">final</span> Rectangle pageSize = PageSize.A4;</span><br><span class="line">        CreateTablePDF.createNormalTable(lines, title, date, fileName, response, waterMark, pageSize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>CSV</p><p>1.添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sourceforge.javacsv<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javacsv<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.工具类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.Charset;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">List</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.csvreader.CsvWriter;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CreateTableCSV</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    private <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(CreateTableCSV.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> createNormalTable(<span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt;&gt; dataList, <span class="keyword">final</span> <span class="built_in">String</span> fileName,</span><br><span class="line">                                         <span class="keyword">final</span> HttpServletResponse response) &#123;</span><br><span class="line"></span><br><span class="line">        ServletOutputStream outputStream = <span class="keyword">null</span>;</span><br><span class="line">        CsvWriter writer = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            outputStream = response.getOutputStream();</span><br><span class="line">            <span class="comment">// 加一个制表符，放在导出的字符串的后缀，防止在csv文件中展示的字符格式不正确</span></span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">String</span> quoteStr = <span class="string">"\t"</span>;</span><br><span class="line"></span><br><span class="line">            response.setContentType(<span class="string">"application/csv;charset=gbk"</span>);</span><br><span class="line">            response.setHeader(<span class="string">"Content-Disposition"</span>,</span><br><span class="line">                    <span class="string">"attachment;filename="</span> + <span class="keyword">new</span> <span class="built_in">String</span>(fileName.getBytes(<span class="string">"gbk"</span>), <span class="string">"ISO8859-1"</span>));</span><br><span class="line"></span><br><span class="line">            writer = <span class="keyword">new</span> CsvWriter(outputStream, <span class="string">','</span>, Charset.forName(<span class="string">"gbk"</span>));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 写入头信息</span></span><br><span class="line">            <span class="comment">// 如果列表不为空,向流中插入数据</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; outputDto : dataList) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="built_in">String</span>[] record = <span class="keyword">new</span> <span class="built_in">String</span>[outputDto.size()];</span><br><span class="line">                <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; outputDto.size(); i++) &#123;</span><br><span class="line">                    record[i] = outputDto.<span class="keyword">get</span>(i) + quoteStr;</span><br><span class="line">                &#125;</span><br><span class="line">                writer.writeRecord(record, <span class="keyword">false</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">            LOGGER.error(fileName + <span class="string">"CSV导出失败,报错信息："</span> + e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (writer != <span class="keyword">null</span>) &#123;</span><br><span class="line">                writer.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (outputStream != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    outputStream.flush();</span><br><span class="line">                    outputStream.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">                LOGGER.error(fileName + <span class="string">"CSV导出失败,报错信息："</span> + e);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.测试类</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">@RequestMapping(value = <span class="string">"/index.do"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> index(<span class="keyword">final</span> HttpServletResponse response) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> List&lt;List&lt;<span class="keyword">String</span>&gt;&gt; lines = <span class="keyword">new</span> ArrayList&lt;List&lt;<span class="keyword">String</span>&gt;&gt;();</span><br><span class="line">List&lt;<span class="keyword">String</span>&gt; <span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列标题"</span>);</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列标题"</span>);</span><br><span class="line">lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line"><span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line"><span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列文字"</span>);</span><br><span class="line">        lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line">        <span class="built_in">line</span> = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第1列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第2列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第3列文字"</span>);</span><br><span class="line">        <span class="built_in">line</span>.<span class="built_in">add</span>(<span class="string">"第4列文字"</span>);</span><br><span class="line">        lines.<span class="built_in">add</span>(<span class="built_in">line</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> fileName = <span class="string">"文件名称.csv"</span>;</span><br><span class="line">        CreateTableCSV.createNormalTable(lines, fileName, response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>httpServetRequest的body只能读取一次解决方案</title>
      <link href="/2018/04/08/other/request%20param%20body%20parse/"/>
      <url>/2018/04/08/other/request%20param%20body%20parse/</url>
      
        <content type="html"><![CDATA[<p><strong><em>现象与分析</em></strong>：由于request.getInputStream();   request.getReader(); 两个方法只能被调用一次，而且不能两个都调用。所以当在过滤器或拦截器中使用了这2个方法去处理参数的时候，controller层就无法再次获取到参数。（这2个方法是流的形式读取的，流读取一次就没有了，所以只能调用一次）由于这个原因，我们在一开始就把流的内容保存起来，那么就可以反复读取了。</p><p><strong><em>实现思想</em></strong>：将requestBody保存为一个byte数组，然后通过servlet自带的HttpServletRequestWrapper类覆盖getReader()和getInputStream()方法，使流从保存的byte数组中读取，然后在Filter中将ServletRequest替换ServletRequestWrapper。</p><p><strong><em>方法代码</em></strong>：</p><ul><li><p>包装HttpServletRequest对象，缓存body数据，再次读取的时候将缓存的值写出</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequestWrapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BodyReaderHttpServletRequestWrapper</span> <span class="keyword">extends</span> <span class="title">HttpServletRequestWrapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] body;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BodyReaderHttpServletRequestWrapper</span><span class="params">(<span class="keyword">final</span> HttpServletRequest request)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>(request);</span><br><span class="line">        <span class="keyword">final</span> StringBuilder buffer = <span class="keyword">new</span> StringBuilder(<span class="string">""</span>);</span><br><span class="line">        String line;</span><br><span class="line">        BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            reader = request.getReader();</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                buffer.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException ex) &#123;</span><br><span class="line">            <span class="keyword">throw</span> ex;</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (reader != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException ex) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> ex;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        body = buffer.toString().getBytes();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">BufferedReader <span class="title">getReader</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(getInputStream()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">ServletInputStream <span class="title">getInputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ByteArrayInputStream bais = <span class="keyword">new</span> ByteArrayInputStream(body);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ServletInputStream() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="function"><span class="keyword">return</span> bais.<span class="title">read</span><span class="params">()</span></span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>使用Filter替换HttpServletRequest对象</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.io.IOException;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.Filter;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.FilterChain;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.FilterConfig;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.ServletException;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.ServletRequest;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.ServletResponse;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> javax.servlet.http.HttpServletRequest;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpServletRequestReplacedFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> init(<span class="keyword">final</span> FilterConfig filterConfig) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> doFilter(<span class="keyword">final</span> ServletRequest request, <span class="keyword">final</span> ServletResponse response, <span class="keyword">final</span> FilterChain chain)</span><br><span class="line">            throws IOException, ServletException &#123;</span><br><span class="line"></span><br><span class="line">        ServletRequest requestWrapper = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (request <span class="keyword">instanceof</span> HttpServletRequest) &#123;</span><br><span class="line">            requestWrapper = <span class="keyword">new</span> BodyReaderHttpServletRequestWrapper((HttpServletRequest) request);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">null</span> == requestWrapper) &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            chain.doFilter(requestWrapper, response);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> destroy() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Do nothing</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>过滤器配置</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1.在web.xml中配置第一个过滤器</span><br><span class="line"><span class="variable">&lt;filter&gt;</span></span><br><span class="line"><span class="variable">&lt;filter-name&gt;</span>HttpServletRequestReplacedFilter<span class="variable">&lt;/filter-name&gt;</span></span><br><span class="line"><span class="variable">&lt;filter-class&gt;</span>com.chinamobile.cmss.eshub.services.framework.HttpServletRequestReplacedFilter<span class="variable">&lt;/filter-class&gt;</span></span><br><span class="line"><span class="variable">&lt;/filter&gt;</span></span><br><span class="line"><span class="variable">&lt;filter-mapping&gt;</span></span><br><span class="line"><span class="variable">&lt;filter-name&gt;</span>HttpServletRequestReplacedFilter<span class="variable">&lt;/filter-name&gt;</span></span><br><span class="line"><span class="variable">&lt;url-pattern&gt;</span>/<span class="symbol">*</span><span class="variable">&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="variable">&lt;/filter-mapping&gt;</span></span><br><span class="line"></span><br><span class="line">2.在Filter上直接加注解</span><br><span class="line"><span class="meta">@WebFilter(filterName</span> = <span class="string">"httpServletRequestWrapperFilter"</span>, urlPatterns = <span class="string">"/*"</span>)</span><br></pre></td></tr></table></figure><p>​</p></li></ul><p>到此，request中的body就可以无限读取了。可以各种过滤拦截controller也有了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>020 spring加载完后立即加载某方法的实现</title>
      <link href="/2018/04/03/springMvc/020.springMvc%20initWay/"/>
      <url>/2018/04/03/springMvc/020.springMvc%20initWay/</url>
      
        <content type="html"><![CDATA[<p>三种方式：</p><ul><li>实现ApplicationListener</li></ul><p>但是这个时候，会存在一个问题，在web 项目中（spring mvc），系统会存在两个容器，一个是root application context ,另一个就是我们自己的 projectName-servlet  context（作为root application context的子容器）。</p><p>这种情况下，就会造成onApplicationEvent方法被执行两次。</p><p>为了避免上面提到的问题，我们可以只在root application context初始化完成后调用逻辑代码，</p><p>其他的容器的初始化完成，则不做任何处理，修改后代码</p><p>具体是：做if判断 root application context 没有parent，它就是最顶层的</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.context.ApplicationListener;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.context.event.ContextRefreshedEvent;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.stereotype.Component;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 但是这个时候，会存在一个问题，在web 项目中（spring mvc），系统会存在两个容器，</span></span><br><span class="line"><span class="comment"> * 一个是root application context ,另一个就是我们自己的 projectName-servlet  context（作为root application context的子容器）。</span></span><br><span class="line"><span class="comment"> * 这种情况下，就会造成onApplicationEvent方法被执行两次。</span></span><br><span class="line"><span class="comment"> * 为了避免上面提到的问题，我们可以只在root application context初始化完成后调用逻辑代码，</span></span><br><span class="line"><span class="comment"> * 其他的容器的初始化完成，则不做任何处理，修改后代码</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 做if判断 ：root application context 没有parent，他就是最大的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Component</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartupListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">ContextRefreshedEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> onApplicationEvent(<span class="keyword">final</span> ContextRefreshedEvent arg0) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         * 判断是 root application context</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (arg0.getApplicationContext().getParent() == <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"spring容器加载完后---立即加载！！！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现InitializingBean</li></ul><p>但是需要注意的是，context:component-scan 扫描几次执行几次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StartupListener</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"spring容器加载完后---立即加载！！！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现BeanPostProcessor</li></ul><p>这个接口有两个方法<br>（1）postProcessBeforeInitialization方法，在spring中定义的bean初始化前调用这个方法；<br>（2）postProcessAfterInitialization方法，在spring中定义的bean初始化后调用这个方法；<br>是每次加载一个bean都会去执行一次,这个接口针对某个专门的bean有用</p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ELK记录</title>
      <link href="/2018/04/03/other/elastic%20search%20setting/"/>
      <url>/2018/04/03/other/elastic%20search%20setting/</url>
      
        <content type="html"><![CDATA[<p>由于系统日志的众多和其必要性，是有必要存储起来的。但随着系统运行的时间越来越长和调用频次的增加，数据库存储和搜索变得越来越慢，才考虑到了日志收集分析系统ELK。</p><h3 id="ELK简介："><a href="#ELK简介：" class="headerlink" title="ELK简介："></a>ELK简介：</h3><p>ELK是三个开源软件的缩写，分别表示：Elasticsearch , Logstash, Kibana , 它们都是开源软件。新增了一个FileBeat，它是一个轻量级的日志收集处理工具(Agent)，Filebeat占用资源少，适合于在各个服务器上搜集日志后传输给Logstash，官方也推荐此工具。</p><ul><li><p>Elasticsearch是个开源分布式搜索引擎，提供搜集、分析、存储数据三大功能。它的特点有：分布式，零配置，自动发现，索引自动分片，索引副本机制，restful风格接口，多数据源，自动搜索负载等。</p></li><li><p>Logstash 主要是用来日志的搜集、分析、过滤日志的工具，支持大量的数据获取方式。一般工作方式为c/s架构，client端安装在需要收集日志的主机上，server端负责将收到的各节点日志进行过滤、修改等操作在一并发往elasticsearch上去。</p></li><li><p>Kibana 也是一个开源和免费的工具，Kibana可以为 Logstash 和 ElasticSearch 提供的日志分析友好的 Web 界面，可以帮助汇总、分析和搜索重要数据日志。</p></li><li><p>Filebeat隶属于Beats。目前Beats包含四种工具：</p></li><li><ol><li>Packetbeat（搜集网络流量数据）</li><li>Topbeat（搜集系统、进程和文件系统级别的 CPU 和内存使用情况等数据）</li><li>Filebeat（搜集文件数据）</li><li>Winlogbeat（搜集 Windows 事件日志数据）</li></ol></li></ul><p>这里没有使用Kibana，有兴趣的也可以自己搭建看看</p><ol><li>配置类</li></ol><p>Filebeat.yml</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">filebeat:</span></span><br><span class="line"><span class="symbol">  prospectors:</span></span><br><span class="line">    - </span><br><span class="line"><span class="symbol">      paths:</span></span><br><span class="line">        - <span class="meta-keyword">/app/</span>logs<span class="meta-keyword">/eshub-openapi-9090/</span>calllogs/calllog.log</span><br><span class="line"><span class="symbol">      document_type:</span> abilitycalllog</span><br><span class="line"><span class="symbol">      max_bytes:</span> <span class="number">10485760</span></span><br><span class="line">    -</span><br><span class="line"><span class="symbol">      paths:</span></span><br><span class="line">        - <span class="meta-keyword">/app/</span>logs<span class="meta-keyword">/eshub-portalapi-8080/</span>extapicalllogs/extapicalllog.log</span><br><span class="line"><span class="symbol">      document_type:</span> extcalllog</span><br><span class="line"><span class="symbol">      max_bytes:</span> <span class="number">10485760</span> </span><br><span class="line"><span class="symbol">output:</span></span><br><span class="line"><span class="symbol">  logstash:</span></span><br><span class="line"><span class="symbol">    hosts:</span> [<span class="string">"10.139.7.180:5044"</span>]</span><br></pre></td></tr></table></figure><p>log4j_es.conf</p><figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">input</span> &#123;</span><br><span class="line">    beats &#123;</span><br><span class="line">       <span class="comment">#type =&gt; "abilitycalllog"</span></span><br><span class="line">       <span class="attr">port</span> =&gt; <span class="number">5044</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">filter</span> &#123;</span><br><span class="line">    <span class="comment">#Only matched data are send to output.</span></span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">"abilitycalllog"</span> &#123;</span><br><span class="line">      json&#123;</span><br><span class="line">        <span class="attr">source</span> =&gt; <span class="string">"message"</span></span><br><span class="line">        <span class="attr">remove_field</span> =&gt; [ </span><br><span class="line">       <span class="string">"callId"</span>, <span class="string">"dynamicToken"</span>,</span><br><span class="line">       <span class="string">"oegwFeedbackRecTime"</span>, <span class="string">"oegwSedTime"</span>,</span><br><span class="line">       <span class="string">"partnerIp"</span>, <span class="string">"rspDesc"</span>,</span><br><span class="line">       <span class="string">"rspServiceContent"</span>,</span><br><span class="line">       <span class="string">"port"</span>, <span class="string">"@version"</span>, <span class="string">"@timestamp"</span>, <span class="string">"timestamp"</span>, <span class="string">"_score"</span>]</span><br><span class="line">       &#125;</span><br><span class="line">    &#125; else if [type] == <span class="string">"extcalllog"</span> &#123;</span><br><span class="line">        json&#123;</span><br><span class="line">          source =&gt; <span class="string">"message"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if [type] == <span class="string">"ssbcalllog"</span> &#123;</span><br><span class="line">        json&#123;</span><br><span class="line">          source =&gt; <span class="string">"message"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">output</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> [<span class="built_in">type</span>] == <span class="string">"abilitycalllog"</span> &#123;</span><br><span class="line">     elasticsearch &#123;</span><br><span class="line">     <span class="attr">action</span> =&gt; <span class="string">"index"</span></span><br><span class="line">     <span class="attr">hosts</span> =&gt; [<span class="string">"10.139.8.134:9200"</span>]</span><br><span class="line">     <span class="attr">index</span> =&gt; <span class="string">"logstash-abilitycalllog"</span></span><br><span class="line">                  &#125;</span><br><span class="line">     &#125; else if [type] == <span class="string">"extcalllog"</span> &#123;</span><br><span class="line">       <span class="keyword">elasticsearch</span> &#123;</span><br><span class="line">         <span class="attr">action</span> =&gt; <span class="string">"index"</span></span><br><span class="line">         <span class="attr">hosts</span> =&gt; [<span class="string">"10.139.8.134:9200"</span>]</span><br><span class="line">         <span class="attr">index</span> =&gt; <span class="string">"logstash-abilitycalllog"</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125; else if [type] == <span class="string">"ssbcalllog"</span> &#123;</span><br><span class="line">       <span class="keyword">elasticsearch</span> &#123;</span><br><span class="line">         <span class="attr">action</span> =&gt; <span class="string">"index"</span></span><br><span class="line">         <span class="attr">hosts</span> =&gt; [<span class="string">"10.139.8.134:9200"</span>]</span><br><span class="line">         <span class="attr">index</span> =&gt; <span class="string">"logstash-abilitycalllog"</span></span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是<a href="https://www.elastic.co/products/elasticsearch" target="_blank" rel="noopener">官方</a>对Elasticsearch的定位。通俗的讲，Elasticsearch就是一款面向文档的NoSQL数据库，使用JSON作为文档序列化格式。但是，它的高级之处在于，使用Lucene作为核心来实现所有索引和搜索的功能，使得每个文档的内容都可以被索引、搜索、排序、过滤。同时，提供了丰富的聚合功能，可以对数据进行多维度分析。对外统一使用REST API接口进行沟通，即Client与Server之间使用HTTP协议通信。<br>  先来看存储上的基本概念，这里将其与MySQL进行了对比，从而可以更清晰的搞清楚每个概念的意义。</p><table><thead><tr><th>Elasticsearch</th><th>MySQL</th></tr></thead><tbody><tr><td>index（索引，名词）</td><td>database</td></tr><tr><td>doc type（文档类型）</td><td>table</td></tr><tr><td>document（文档）</td><td>row</td></tr><tr><td>field（字段）</td><td>column</td></tr><tr><td>mapping（映射）</td><td>schema</td></tr><tr><td>query DSL（查询语言）</td><td>SQL</td></tr></tbody></table><p>  再来看<strong>倒排索引</strong>的概念（<a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/inverted-index.html" target="_blank" rel="noopener">官方解释</a>）。倒排索引是搜索引擎的基石，也是Elasticsearch能实现快速全文搜索的根本。归纳起来，主要是对一个文档内容做两步操作：<strong>分词</strong>、<strong>建立“单词-文档”列表</strong>。举个例子，假如有下面两个文档：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span> &#123;<span class="attr">"content"</span>: <span class="string">"The quick brown fox jumped over the lazy dog"</span>&#125;</span><br><span class="line"><span class="number">2.</span> &#123;<span class="attr">"content"</span>: <span class="string">"Quick brown foxes leap over lazy dogs in summer"</span>&#125;<span class="number">12</span></span><br></pre></td></tr></table></figure><p>最后，我们再回过头看看上面的<strong>映射</strong>的概念。类似于MySQL在db schema中申明每个列的数据类型、索引类型等，Elasticsearch中使用mapping来做这件事。常用的是，在mapping中申明字段的数据类型、是否建立倒排索引、建立倒排索引时使用什么分词器。默认情况下，Elasticsearch会为所有的string类型数据使用standard分词器建立倒排索引。</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">查看mapping：GET http://localhost:<span class="number">9200</span>/&lt;index name&gt;/_mapping</span><br><span class="line">NOTE: 这里的index是blog，doc type是test</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"blog"</span>: &#123;</span><br><span class="line">        <span class="string">"mappings"</span>: &#123;</span><br><span class="line">            <span class="string">"test"</span>: &#123;</span><br><span class="line">                <span class="string">"properties"</span>: &#123;</span><br><span class="line">                    <span class="string">"activity_type"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">                        <span class="string">"index"</span>: <span class="string">"not_analyzed"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"address"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">                        <span class="string">"analyzer"</span>: <span class="string">"ik_smart"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"happy_party_id"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"integer"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"last_update_time"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"date"</span>,</span><br><span class="line">                        <span class="string">"format"</span>: <span class="string">"yyyy-MM-dd HH:mm:ss"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数据插入"><a href="#数据插入" class="headerlink" title="数据插入"></a><strong><em>数据插入</em></strong></h2><p>在MySQL中，我们需要先建立database和table，申明db schema后才可以插入数据。而在Elasticsearch，可以直接插入数据，系统会自动建立缺失的index和doc type，并对字段建立mapping。因为半结构化数据的数据结构通常是动态变化的，我们无法预知某个文档中究竟有哪些字段，如果每次插入数据都需要提前建立index、type、mapping，那就失去了其作为NoSQL的优势了。</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">直接插入数据：POST http://localhost:<span class="number">9200</span>/blog/test</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"count"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"desc"</span>: <span class="string">"hello world"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">查看索引：GET http://localhost:<span class="number">9200</span>/blog/_mapping</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"blog"</span>: &#123;</span><br><span class="line">        <span class="string">"mappings"</span>: &#123;</span><br><span class="line">            <span class="string">"test"</span>: &#123;</span><br><span class="line">                <span class="string">"properties"</span>: &#123;</span><br><span class="line">                    <span class="string">"count"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"long"</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"desc"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"string"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然而这种灵活性是有限，比如上文我们提到，默认情况下，Elasticsearch会为所有的string类型数据使用standard分词器建立倒排索引，那么如果某些字段不想建立倒排索引怎么办。Elasticsearch提供了<strong>dynamic template</strong>的概念来针对一组index设置默认mapping，只要index的名称匹配了，就会使用该template设置的mapping进行字段映射。<br>  下面所示即创建一个名称为blog的template，该template会自动匹配以”blog_”开头的index，为其自动建立mapping，对文档中的所有string会自动增加一个.raw字段，并且该字段不做索引。 这也是ELK中的做法，可以查看ELK系统中Elasticsearch的template，会发现有一个名为logstash的template。</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">创建template：POST http://localhost:<span class="number">9200</span>/_template/blog</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"template"</span>: <span class="string">"blog_*"</span>,</span><br><span class="line">    <span class="string">"mappings"</span>: &#123;</span><br><span class="line">        <span class="string">"_default_"</span>: &#123;</span><br><span class="line">            <span class="string">"dynamic_templates"</span>: [&#123;</span><br><span class="line">                <span class="string">"string_fields"</span>: &#123;</span><br><span class="line">                    <span class="string">"mapping"</span>: &#123;</span><br><span class="line">                        <span class="string">"type"</span>: <span class="string">"string"</span>,</span><br><span class="line">                        <span class="string">"fields"</span>: &#123;</span><br><span class="line">                            <span class="string">"raw"</span>: &#123;</span><br><span class="line">                                <span class="string">"index"</span>: <span class="string">"not_analyzed"</span>,</span><br><span class="line">                                <span class="string">"ignore_above"</span>: <span class="number">256</span>,</span><br><span class="line">                                <span class="string">"type"</span>: <span class="string">"string"</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="string">"match_mapping_type"</span>: <span class="string">"string"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;],</span><br><span class="line">            <span class="string">"properties"</span>: &#123;</span><br><span class="line">                <span class="string">"timestamp"</span>: &#123;</span><br><span class="line">                    <span class="string">"doc_values"</span>: true,</span><br><span class="line">                    <span class="string">"type"</span>: <span class="string">"date"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">"_all"</span>: &#123;</span><br><span class="line">                <span class="string">"enabled"</span>: false</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">直接插入数据：POST http://localhost:<span class="number">9200</span>/blog_2016-<span class="number">12</span>-<span class="number">25</span>/test</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"count"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="string">"desc"</span>: <span class="string">"hello world"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="聚合分析"><a href="#聚合分析" class="headerlink" title="聚合分析"></a><strong><em>聚合分析</em></strong></h2><p>1.平均数</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"avg_grade"</span> : &#123; <span class="attr">"avg"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"grade"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.计算出字段的唯一值。相当于sql中的distinct</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"author_count"</span> : &#123;</span><br><span class="line">            <span class="attr">"cardinality"</span> : &#123;</span><br><span class="line">                <span class="attr">"field"</span> : <span class="string">"author"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.字段的其他属性，包括最大最小，方差等等。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"grades_stats"</span> : &#123; <span class="attr">"extended_stats"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"grade"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.最大值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"max_price"</span> : &#123; <span class="attr">"max"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"price"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.最小值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"min_price"</span> : &#123; <span class="attr">"min"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"price"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.百分比统计。可以看出你网站的所有页面。加载时间的差异</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"load_time_outlier"</span> : &#123;</span><br><span class="line">            <span class="attr">"percentiles"</span> : &#123;</span><br><span class="line">                <span class="attr">"field"</span> : <span class="string">"load_time"</span> </span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.看看15毫秒和30毫秒内大概有多少页面加载完</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"load_time_outlier"</span> : &#123;</span><br><span class="line">            <span class="attr">"percentile_ranks"</span> : &#123;</span><br><span class="line">                <span class="attr">"field"</span> : <span class="string">"load_time"</span>, </span><br><span class="line">                <span class="attr">"values"</span> : [<span class="number">15</span>, <span class="number">30</span>]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>8.最大、最小、和、平均值。一起求出来</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"grades_stats"</span> : &#123; <span class="attr">"stats"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"grade"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9.求和</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"intraday_return"</span> : &#123; <span class="attr">"sum"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"change"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10.获取到每组前n条数据。相当于sql 中 group by 后取出前n条</p><p>例子：取100组，每组只要第一条。为了见bain没用order和_source，请自行测试他们。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"all_interests"</span>: &#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"zxw_id"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">100</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"top_tag_hits"</span>: &#123;</span><br><span class="line">          <span class="attr">"top_hits"</span>: &#123;</span><br><span class="line">            <span class="attr">"size"</span>: <span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11.数量统计，看看这个字段一共有多少个不一样的数值</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span> : &#123;</span><br><span class="line">        <span class="attr">"grades_count"</span> : &#123; <span class="attr">"value_count"</span> : &#123; <span class="attr">"field"</span> : <span class="string">"grade"</span> &#125; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>12.基本的聚合,其中有每个分类得我数量</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"company_terms"</span>: &#123;</span><br><span class="line">            <span class="attr">"terms"</span>: &#123;</span><br><span class="line">                <span class="attr">"field"</span>: <span class="string">"company"</span>,</span><br><span class="line">                <span class="attr">"size"</span>: <span class="number">2</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"size"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>13.间断分割：<strong>date_histogram</strong>，可以对时间字段按照某个间隔进行聚合，找出每个时间段内的文档数量</p><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST http://localhost:<span class="number">9200</span>/user_action/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="string">"aggs"</span>: &#123;</span><br><span class="line">        <span class="string">"time_histogram"</span>: &#123;</span><br><span class="line">            <span class="string">"date_histogram"</span>: &#123;</span><br><span class="line">                <span class="string">"field"</span>: <span class="string">"timestamp"</span>,</span><br><span class="line">                <span class="string">"interval"</span>: <span class="string">"day"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">"size"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> es </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac下git配置ssh_key</title>
      <link href="/2018/02/07/other/git%20ssh_key%20mac/"/>
      <url>/2018/02/07/other/git%20ssh_key%20mac/</url>
      
        <content type="html"><![CDATA[<p>生成SSH-Key<br>打开终端，前往.ssh目录</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">.ssh</span></span><br></pre></td></tr></table></figure><p>生成一个ssh_key</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ssh-keygen</span> <span class="selector-tag">-t</span> <span class="selector-tag">rsa</span> <span class="selector-tag">-C</span> "<span class="selector-tag">email</span>@<span class="keyword">email</span>.<span class="keyword">com</span>"</span><br></pre></td></tr></table></figure><p>自定义生成key的名字，默认即可；设置密码，默认即可，直接回车。这样就生成好了。</p><p>查看公钥秘钥</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> ~</span><br><span class="line"><span class="keyword">cd</span> <span class="string">.ssh/</span></span><br><span class="line"><span class="keyword">ls</span></span><br><span class="line">展示：</span><br><span class="line">id_rsa（秘钥）id_rsa.pub（公钥）</span><br></pre></td></tr></table></figure><p>GitHub的设置中粘贴的公钥是以上id_rsa.pub</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cat</span> <span class="selector-tag">id_rsa</span><span class="selector-class">.pub</span></span><br></pre></td></tr></table></figure><p>展示出来的直接复制粘贴就好了</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>事件（Application Event）</title>
      <link href="/2017/11/30/other/application%20Event/"/>
      <url>/2017/11/30/other/application%20Event/</url>
      
        <content type="html"><![CDATA[<h4 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h4><p>首先得定义一个事件，有监听这个事件的类，还有触发这个事件的类</p><ol><li>配置类，用于扫描包下注解</li></ol><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.ComponentScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(<span class="meta-string">"win7"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Config</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>事件类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationEvent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoEvent</span> <span class="keyword">extends</span> <span class="title">ApplicationEvent</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"><span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">DemoEvent</span><span class="params">(<span class="keyword">final</span> Object source, <span class="keyword">final</span> String msg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>(source);</span><br><span class="line"><span class="keyword">this</span>.msg = msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(<span class="keyword">final</span> String msg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.msg = msg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>监听类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoListener</span> <span class="keyword">implements</span> <span class="title">ApplicationListener</span>&lt;<span class="title">DemoEvent</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(<span class="keyword">final</span> DemoEvent event)</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> String msg = event.getMsg();</span><br><span class="line">System.out.println(<span class="string">"ApplicationListener接收到信息："</span> + msg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>触发类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoPublisher</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> ApplicationContext applicationContext;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">publish</span><span class="params">(<span class="keyword">final</span> String msg)</span> </span>&#123;</span><br><span class="line">applicationContext.publishEvent(<span class="keyword">new</span> DemoEvent(<span class="keyword">this</span>, msg));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试去触发这个事件</li></ol><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.AnnotationConfigApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> &#123;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">final</span> String[] args) &#123;</span><br><span class="line"><span class="comment">//加载配置扫描包</span></span><br><span class="line"><span class="keyword">final</span> AnnotationConfigApplicationContext annotationConfigApplicationContext = <span class="keyword">new</span> AnnotationConfigApplicationContext(Config.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> DemoPublisher demoPublisher = annotationConfigApplicationContext.getBean(DemoPublisher.<span class="keyword">class</span>);</span><br><span class="line">demoPublisher.publish(<span class="string">"我是谁？"</span>);</span><br><span class="line"></span><br><span class="line">annotationConfigApplicationContext.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>注解@Inject和@Autowired以及@Resource区别</title>
      <link href="/2017/11/30/other/Inject%20Autowired%20Resource/"/>
      <url>/2017/11/30/other/Inject%20Autowired%20Resource/</url>
      
        <content type="html"><![CDATA[<h3 id="详解"><a href="#详解" class="headerlink" title="详解"></a>详解</h3><h5 id="1-1-Inject"><a href="#1-1-Inject" class="headerlink" title="1.1 @Inject"></a>1.1 @Inject</h5><ul><li>javax.inject</li><li>JSR330 (Dependency Injection for Java)</li></ul><p>这是jsr330中的规范，通过‘AutowiredAnnotationBeanPostProcessor’ 类实现的依赖注入。</p><h5 id="1-2-Inject使用"><a href="#1-2-Inject使用" class="headerlink" title="1.2 @Inject使用"></a>1.2 @Inject使用</h5><p>如下是@Inject的使用，不加@Named注解，需要配置与变量名一致即可。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Inject</span></span><br><span class="line"><span class="variable">@Named</span>(<span class="string">"mongo"</span>)</span><br><span class="line">private Mongo mongo;</span><br></pre></td></tr></table></figure><h5 id="2-1-Autowired"><a href="#2-1-Autowired" class="headerlink" title="2.1 @Autowired"></a>2.1 @Autowired</h5><ul><li>org.springframework.bean.factory</li><li>Spring</li></ul><p>@Autowired是Spring提供的注解，通过‘AutowiredAnnotationBeanPostProcessor’ 类实现的依赖注入，与@inject二者具有可互换性</p><h5 id="2-2-Autowired的使用"><a href="#2-2-Autowired的使用" class="headerlink" title="2.2 @Autowired的使用"></a>2.2 @Autowired的使用</h5><p>@Autowired有个属性为required，可以配置为false，如果配置为false之后，当没有找到相应bean的时候，系统不会抛错。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MongoTemplate mongoTemplate;</span><br></pre></td></tr></table></figure><h5 id="3-1-Resource"><a href="#3-1-Resource" class="headerlink" title="3.1 @Resource"></a>3.1 @Resource</h5><ul><li>javax.annotation</li><li>JSR250 (Common Annotations for Java) </li></ul><p>这是jsr250规范的实现，‘@Resource’通过 ‘CommonAnnotationBeanPostProcessor’ 类实现依赖注入。</p><h5 id="3-2-Resource的使用"><a href="#3-2-Resource的使用" class="headerlink" title="3.2 @Resource的使用"></a>3.2 @Resource的使用</h5><p>@Resource一般会指定一个name属性，如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">Resource</span>(<span class="keyword">name</span> = <span class="string">"userMapper"</span>)</span><br><span class="line">private UserMapper userMapper;</span><br></pre></td></tr></table></figure><h3 id="异同"><a href="#异同" class="headerlink" title="异同"></a>异同</h3><p>@Inject和@Autowired以及@Resource都可以注解在set方法上或属性上，@Autowired和@Inject基本是一样的，因为两者都是使用AutowiredAnnotationBeanPostProcessor来处理依赖注入。但是@Resource是个例外，它使用的是CommonAnnotationBeanPostProcessor来处理依赖注入。当然，两者都是BeanPostProcessor。</p><h5 id="Autowired和-Inject"><a href="#Autowired和-Inject" class="headerlink" title="@Autowired和@Inject"></a>@Autowired和@Inject</h5><p>1.默认 autowired by type</p><p>2.可以 通过@Qualifier 显式指定 autowired by qualifier name。</p><h5 id="Resource"><a href="#Resource" class="headerlink" title="@Resource"></a>@Resource</h5><p>1.默认 autowired by field name</p><p>2.如果 autowired by field name失败，会退化为 autowired by type</p><p>3.可以 通过@Qualifier 显式指定 autowired by qualifier name</p><p>4.如果 autowired by qualifier name失败，会退化为 autowired by field name。但是这时候如果 autowired by field name失败，就不会再退化为autowired by type了。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>019 springMvc补充-定时任务集群</title>
      <link href="/2017/07/03/springMvc/019.springMvc%20quartz%20load%20balancing/"/>
      <url>/2017/07/03/springMvc/019.springMvc%20quartz%20load%20balancing/</url>
      
        <content type="html"><![CDATA[<ul><li><p>这一篇文章依赖我之前写的springMvc定时任务（动态，静态都支持）springMvc4+quartz2</p></li><li><p>quartz的集群是依赖数据库的。所以，首先我们创建数据库：官网下载quartz：<a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener">http://www.quartz-scheduler.org/</a>  在下载的文件的docs/dbTables目录下有对应建表语句，提供例子 quartz-2.2.3(网盘下载地址：<a href="https://pan.baidu.com/s/18LMMhZ5UjerAEmwLVdbF4w" target="_blank" rel="noopener">https://pan.baidu.com/s/18LMMhZ5UjerAEmwLVdbF4w</a>) ，如果没有对应于应用的就自己改动来适应，一般官网提供的已经足够了。这些个表都有”QRTZ”前缀，可以作为区别于别的命名。</p></li><li><p>新建 quartz.properties</p></li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#============================================================  </span></span><br><span class="line"><span class="comment"># Configure Main Scheduler Properties  </span></span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">org.quartz.scheduler.instanceName </span>= MyClusteredScheduler</span><br><span class="line"><span class="keyword">org.quartz.scheduler.instanceId </span>= AUTO</span><br><span class="line">  </span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line"><span class="comment"># Configure ThreadPool  </span></span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">org.quartz.threadPool.class </span>= <span class="keyword">org.quartz.simpl.SimpleThreadPool</span></span><br><span class="line"><span class="keyword">org.quartz.threadPool.threadCount </span>= <span class="number">10</span></span><br><span class="line"><span class="keyword">org.quartz.threadPool.threadPriority </span>= <span class="number">5</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line"><span class="comment"># Configure JobStore  </span></span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">org.quartz.jobStore.misfireThreshold </span>= <span class="number">60000</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">org.quartz.jobStore.class </span>= <span class="keyword">org.quartz.impl.jdbcjobstore.JobStoreTX</span></span><br><span class="line"><span class="keyword">org.quartz.jobStore.driverDelegateClass </span>= <span class="keyword">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</span></span><br><span class="line"><span class="keyword">org.quartz.jobStore.useProperties </span>= false</span><br><span class="line"><span class="keyword">org.quartz.jobStore.dataSource </span>= myDS</span><br><span class="line"><span class="keyword">org.quartz.jobStore.tablePrefix </span>= QRTZ_</span><br><span class="line">  </span><br><span class="line"><span class="comment">#  集群配置</span></span><br><span class="line"><span class="keyword">org.quartz.jobStore.isClustered </span>= true</span><br><span class="line"><span class="keyword">org.quartz.jobStore.clusterCheckinInterval </span>= <span class="number">20000</span></span><br><span class="line">  </span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line"><span class="comment"># Configure Datasources  </span></span><br><span class="line"><span class="comment">#===========================================================  </span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.driver </span>= com.mysql.<span class="keyword">jdbc.Driver</span></span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.URL </span>= <span class="keyword">jdbc:mysql://localhost:3306/quartz?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.user </span>= root</span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.password </span>= root</span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.maxConnections </span>= <span class="number">5</span></span><br><span class="line"><span class="keyword">org.quartz.dataSource.myDS.validationQuery=SELECT </span><span class="string">'x'</span></span><br></pre></td></tr></table></figure><p>注释参考： <a href="http://blog.csdn.net/Uhzgnaw/article/details/46358333" target="_blank" rel="noopener">http://blog.csdn.net/Uhzgnaw/article/details/46358333</a></p><ul><li>在 quartz-task.xml 中添加调度器配置 org.springframework.scheduling.quartz.SchedulerFactoryBean，添加3个属性，如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 调度器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- quartz集群 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:spring/quartz.properties"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!--可选，QuartzScheduler启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"overwriteExistingJobs"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 延迟10s启动 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"startupDelay"</span> <span class="attr">value</span>=<span class="string">"10"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>此时，需要修改之前的定时任务（xml配置的）在org.springframework.scheduling.quartz.JobDetailFactoryBean中添加属性：<br>durability 表示任务完成之后是否依然保留到数据库，默认false</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"durability"</span> value=<span class="string">"true"</span> /&gt;</span><br></pre></td></tr></table></figure><ul><li>我们还可以在动态定时器中添加初始启动的定时器 DynamicQuartz.java 加：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">QuartzInit</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> DynamicQuartz dynamicQuartz;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"=======动态定时器=初始化运行======"</span>);</span><br><span class="line">dynamicQuartz.addOrUpdateQuartz();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>至此，我们的quartz集群已经编写好了，启动服务器即可。点击 <a href="/images/springMvc/springMvc1_AllQuartz.zip">springMvc_AllQuartz</a> 下载</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>018 springMvc补充-动态cron定时任务</title>
      <link href="/2017/06/30/springMvc/018.springMvc%20dynamic%20quartz/"/>
      <url>/2017/06/30/springMvc/018.springMvc%20dynamic%20quartz/</url>
      
        <content type="html"><![CDATA[<ul><li><p>这一篇文章依赖我之前写的<a href="http://20177.win/2017/06/09/springMvc/014.springMvc%20quartz/" target="_blank">014 springMvc定时任务</a></p></li><li><p>定时任务，我们得先添加jar（和直接定义cron一样，2.0版本需要spring4之后支持）：</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>不改动 原有的quartz-task.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">default-lazy-init</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"businessReport"</span> <span class="attr">class</span>=<span class="string">"com.yxjn.myapp.service.schedule.LoadTask"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"reportTask"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.JobDetailFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobClass"</span> <span class="attr">value</span>=<span class="string">"com.yxjn.myapp.service.schedule.LoadTask"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">&lt;!-- 触发器 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cronTrigger"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.CronTriggerFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 指向我们的任务 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"reportTask"</span> /&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 每10s触发一次 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cronExpression"</span> <span class="attr">value</span>=<span class="string">"0/10 * * * * ?"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 调度器  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"triggers"</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--  触发器列表 --&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"cronTrigger"</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>假如不需要静态定时任务，只要动态配置的定时任务，这里 quartz-task.xml 可以改为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span> <span class="attr">xmlns:task</span>=<span class="string">"http://www.springframework.org/schema/task"</span>  </span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans     </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd    </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context       </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/context/spring-context-4.1.xsd     </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/task      </span></span></span><br><span class="line"><span class="tag"><span class="string">    http://www.springframework.org/schema/task/spring-task-4.1.xsd"</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"schedulerFactoryBean"</span> <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span> /&gt;</span><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 application-config.xml 中引入 quartz-task.xml 使配置生效（这一步不变）</li></ul><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">import</span> resource=<span class="string">"./quartz-task.xml"</span> /&gt;</span><br></pre></td></tr></table></figure><ul><li>好了，我们可以编辑 java 代码了</li></ul><p>1.首先我们创建动态定时任务的实体：ScheduleJob.java，这里继承了Serializable，为了下一节quartz的动态定时任务的集群</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.service.dynamicSchedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class ScheduleJob implements Serializable &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1</span>L;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** 任务id */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> jobId;</span><br><span class="line">    <span class="comment">/** 任务名称 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> jobName;</span><br><span class="line">    <span class="comment">/** 任务分组 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> jobGroup;</span><br><span class="line">    <span class="comment">/** 任务状态 0禁用 1启用 2删除*/</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> jobStatus;</span><br><span class="line">    <span class="comment">/** 任务运行时间表达式 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> cronExpression;</span><br><span class="line">    <span class="comment">/** 任务描述 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> desc;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getJobId() &#123;</span><br><span class="line"><span class="keyword">return</span> jobId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setJobId(<span class="keyword">final</span> <span class="keyword">String</span> jobId) &#123;</span><br><span class="line"><span class="keyword">this</span>.jobId = jobId;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getJobName() &#123;</span><br><span class="line"><span class="keyword">return</span> jobName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setJobName(<span class="keyword">final</span> <span class="keyword">String</span> jobName) &#123;</span><br><span class="line"><span class="keyword">this</span>.jobName = jobName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getJobGroup() &#123;</span><br><span class="line"><span class="keyword">return</span> jobGroup;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setJobGroup(<span class="keyword">final</span> <span class="keyword">String</span> jobGroup) &#123;</span><br><span class="line"><span class="keyword">this</span>.jobGroup = jobGroup;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getJobStatus() &#123;</span><br><span class="line"><span class="keyword">return</span> jobStatus;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setJobStatus(<span class="keyword">final</span> <span class="keyword">String</span> jobStatus) &#123;</span><br><span class="line"><span class="keyword">this</span>.jobStatus = jobStatus;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getCronExpression() &#123;</span><br><span class="line"><span class="keyword">return</span> cronExpression;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setCronExpression(<span class="keyword">final</span> <span class="keyword">String</span> cronExpression) &#123;</span><br><span class="line"><span class="keyword">this</span>.cronExpression = cronExpression;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getDesc() &#123;</span><br><span class="line"><span class="keyword">return</span> desc;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setDesc(<span class="keyword">final</span> <span class="keyword">String</span> desc) &#123;</span><br><span class="line"><span class="keyword">this</span>.desc = desc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.我们写一个集中处理动态quartz的类工厂定时任务 QuartzJobFactory.java，这里用了@DisallowConcurrentExecution，表明同一个定时任务必须执行结束才能执行下一次；否则可以多线程：上一次定时任务没执行完，这一次也可以执行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.service.dynamicSchedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.DisallowConcurrentExecution;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 定时任务运行工厂类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@DisallowConcurrentExecution</span>  <span class="comment">//线程唯一</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuartzJobFactory</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(<span class="keyword">final</span> JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"任务成功运行"</span>);</span><br><span class="line">        <span class="keyword">final</span> ScheduleJob scheduleJob = (ScheduleJob)context.getMergedJobDataMap().get(<span class="string">"scheduleJob"</span>);</span><br><span class="line">        <span class="comment">//这里根据每个ScheduleJob的jobStatus，jobName，jobGroup等做操作，这里cronExpression不会变，查看不准</span></span><br><span class="line">        System.out.println(<span class="string">"任务名称 = ["</span> + scheduleJob.getJobName() + <span class="string">"]"</span> + (<span class="keyword">new</span> Date()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.我们来编写主要的动态实现cron类 DynamicQuartz.java。这里使用jobMap模拟数据库搜索出来的数据。</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.service.dynamicSchedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronScheduleBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.CronTrigger;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobDetail;</span><br><span class="line"><span class="keyword">import</span> org.quartz.Scheduler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.SchedulerException;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerBuilder;</span><br><span class="line"><span class="keyword">import</span> org.quartz.TriggerKey;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicQuartz</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = Logger.getLogger(DynamicQuartz.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> Scheduler scheduler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addOrUpdateQuartz</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">addOrUpdate();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> SchedulerException e) &#123;</span><br><span class="line">logger.<span class="keyword">error</span>(<span class="string">"错误"</span>, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">addOrUpdate</span><span class="params">()</span> <span class="keyword">throws</span> SchedulerException </span>&#123;</span><br><span class="line"><span class="keyword">final</span> HashMap&lt;String, ScheduleJob&gt; jobMap = <span class="keyword">new</span> HashMap&lt;String, ScheduleJob&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">final</span> ScheduleJob job = <span class="keyword">new</span> ScheduleJob();</span><br><span class="line">job.setJobId(<span class="string">"10001"</span> + i);</span><br><span class="line">job.setJobName(<span class="string">"data_import"</span> + i);</span><br><span class="line">job.setJobGroup(<span class="string">"dataWork"</span>);</span><br><span class="line">job.setJobStatus(<span class="string">"1"</span>);</span><br><span class="line">job.setCronExpression(<span class="string">"0/"</span> + getInt() + <span class="string">" * * * * ?"</span>);</span><br><span class="line">job.setDesc(<span class="string">"定时任务描述"</span>);</span><br><span class="line">jobMap.put(job.getJobGroup() + <span class="string">"_"</span> + job.getJobName(), job);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// schedulerFactoryBean 由spring创建注入</span></span><br><span class="line"><span class="comment">// final Scheduler scheduler = schedulerFactoryBean.getScheduler();</span></span><br><span class="line"><span class="comment">// 这里获取任务信息数据</span></span><br><span class="line"><span class="keyword">final</span> Collection&lt;ScheduleJob&gt; jobList = jobMap.values();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">final</span> ScheduleJob job : jobList) &#123;</span><br><span class="line"><span class="keyword">final</span> TriggerKey triggerKey = TriggerKey.triggerKey(job.getJobName(), job.getJobGroup());</span><br><span class="line"><span class="comment">// 获取trigger，即在spring配置文件中定义的 bean id="myTrigger"</span></span><br><span class="line">CronTrigger trigger = (CronTrigger) scheduler.getTrigger(triggerKey);</span><br><span class="line"><span class="comment">// 不存在，创建一个</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == trigger) &#123;</span><br><span class="line"><span class="keyword">final</span> JobDetail jobDetail = JobBuilder.newJob(QuartzJobFactory.class)</span><br><span class="line">.withIdentity(job.getJobName(), job.getJobGroup()).build();</span><br><span class="line">jobDetail.getJobDataMap().put(<span class="string">"scheduleJob"</span>, job);</span><br><span class="line"><span class="comment">// 表达式调度构建器</span></span><br><span class="line"><span class="keyword">final</span> CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(job.getCronExpression());</span><br><span class="line"><span class="comment">// 按新的cronExpression表达式构建一个新的trigger</span></span><br><span class="line">trigger = TriggerBuilder.newTrigger().withIdentity(job.getJobName(), job.getJobGroup())</span><br><span class="line">.withSchedule(scheduleBuilder).startAt(<span class="keyword">new</span> Date(<span class="keyword">new</span> Date().getTime() + <span class="number">10000</span>)).build();</span><br><span class="line">scheduler.scheduleJob(jobDetail, trigger);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// Trigger已存在，那么更新相应的定时设置</span></span><br><span class="line"><span class="comment">// 表达式调度构建器</span></span><br><span class="line"><span class="keyword">final</span> CronScheduleBuilder scheduleBuilder = CronScheduleBuilder.cronSchedule(job.getCronExpression());</span><br><span class="line"><span class="comment">// 按新的cronExpression表达式重新构建trigger</span></span><br><span class="line">trigger = trigger.getTriggerBuilder().withIdentity(triggerKey).withSchedule(scheduleBuilder)</span><br><span class="line">.startAt(<span class="keyword">new</span> Date(<span class="keyword">new</span> Date().getTime() + <span class="number">10000</span>)).build();</span><br><span class="line"><span class="comment">// 按新的trigger重新设置job执行，这个时候Job中ScheduleJob是不变的</span></span><br><span class="line">scheduler.rescheduleJob(triggerKey, trigger);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="function"><span class="keyword">int</span> <span class="title">getInt</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="keyword">int</span>) (Math.random() * <span class="number">10</span>) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.最后我们在DemoController中添加方法调用添加或更新这个定时任务（这个动态quartz默认不执行，启动服务器后需要通过InitializingBean等去启动）</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> DynamicQuartz dynamicQuartz;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = <span class="meta-string">"/quartz.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> String quartz() &#123;</span><br><span class="line">dynamicQuartz.addOrUpdateQuartz();</span><br><span class="line">logger.info(<span class="string">"这是我打印的log日志ok"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"ok"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>至此，我们的动态quartz已经编写好了。此方案兼容原有的定时任务，启动服务器即可</p></li><li><p>附一些操作</p></li></ul><p>1.暂停任务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scheduler<span class="built_in"> scheduler </span>= schedulerFactoryBean.getScheduler();</span><br><span class="line">JobKey jobKey = JobKey.jobKey(scheduleJob.getJobName(), scheduleJob.getJobGroup());</span><br><span class="line">scheduler.pauseJob(jobKey);</span><br></pre></td></tr></table></figure><p>2.恢复任务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scheduler<span class="built_in"> scheduler </span>= schedulerFactoryBean.getScheduler();</span><br><span class="line">JobKey jobKey = JobKey.jobKey(scheduleJob.getJobName(), scheduleJob.getJobGroup());</span><br><span class="line">scheduler.resumeJob(jobKey);</span><br></pre></td></tr></table></figure><p>3.删除任务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scheduler<span class="built_in"> scheduler </span>= schedulerFactoryBean.getScheduler();</span><br><span class="line">JobKey jobKey = JobKey.jobKey(scheduleJob.getJobName(), scheduleJob.getJobGroup());</span><br><span class="line">scheduler.deleteJob(jobKey);</span><br></pre></td></tr></table></figure><p>4.立即运行任务</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Scheduler<span class="built_in"> scheduler </span>= schedulerFactoryBean.getScheduler();</span><br><span class="line">JobKey jobKey = JobKey.jobKey(scheduleJob.getJobName(), scheduleJob.getJobGroup());</span><br><span class="line">scheduler.triggerJob(jobKey);</span><br></pre></td></tr></table></figure><ul><li>点击 <a href="/images/springMvc/springMvc1_DynamicQuartz.zip">springMvc_DynamicQuartz</a> 下载项目代码</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>各种编码的来历</title>
      <link href="/2017/06/28/other/code%20history/"/>
      <url>/2017/06/28/other/code%20history/</url>
      
        <content type="html"><![CDATA[<p>可能很多同学一直对字符的各种编码方式懵懵懂懂，根本搞不清为什么他们有这么多编码。</p><h4 id="ANSI编码"><a href="#ANSI编码" class="headerlink" title="ANSI编码"></a>ANSI编码</h4><p>　　其实在很久很久以前，有一群人，他们决定用8个可以开合的晶体管来组合成不同的状态，以表示世界上的万物。他们看到8个开关状态是好的，于是他们把这称为“字节”。　　</p><p>　　开始计算机只在美国用。八位的字节一共可以组合出256（2的8次方）种不同的状态。 　　</p><p>　　他们把其中的编号从0开始的32种状态分别规定了特殊的用途，一但终端、打印机遇上约定好的这些字节被传过来时，就要做一些约定的动作。　　</p><p>　　遇上00×10，终端就换行，遇上0×07, 终端就向人们嘟嘟叫，例好遇上0×1b, 打印机就打印反白的字，或者终端就用彩色显示字母。他们看到这样很好，于是就把这些0×20以下的字节状态称为”控制码”。<br>　　<br>他们又把所有的空格、标点符号、数字、大小写字母分别用连续的字节状态表示，一直编到了第127号，这样计算机就可以用不同字节来存储英语的文字了。大家看到这样，都感觉很好，于是大家都把这个方案叫做 ANSI 的”Ascii”编码（American Standard Code for Information Interchange，美国信息互换标准代码）。当时世界上所有的计算机都用同样的ASCII方案来保存英文文字。　　</p><h4 id="扩展ANSI编码"><a href="#扩展ANSI编码" class="headerlink" title="扩展ANSI编码　"></a>扩展ANSI编码　</h4><p>　　后来，就像建造巴比伦塔一样，世界各地的都开始使用计算机，但是很多国家用的不是英文，他们的字母里有许多是ASCII里没有的，为了可以在计算机保存他们的文字，他们决定采用127号之后的空位来表示这些新的字母、符号，还加入了很多画表格时需要用下到的横线、竖线、交叉等形状，一直把序号编到了最后一个状态255。从128到255这一页的字符集被称“扩展字符集”。从此之后，贪婪的人类再没有新的状态可以用了，美国当时估计也没想到还有别的国家要用计算机的。　　</p><h4 id="GB2312编码"><a href="#GB2312编码" class="headerlink" title="GB2312编码"></a>GB2312编码</h4><p>　　当天朝人们得到计算机时，已经没有可以利用的字节状态来表示汉字，况且有6000多个常用汉字需要保存呢。天朝人民就不客气地把那些127号之后的奇异符号们直接取消掉。　　</p><p>　　规定：一个小于127的字符的意义与原来相同，但两个大于127的字符连在一起时，就表示一个汉字，前面的一个字节（他称之为高字节）从0xA1用到0xF7，后面一个字节（低字节）从0xA1到0xFE，这样我们就可以组合出大约7000多个简体汉字了。　　</p><p>　　在这些编码里，我们还把数学符号、罗马希腊的字母、日文的假名们都编进去了，连在 ASCII 里本来就有的数字、标点、字母都统统重新编了两个字节长的编码，这就是常说的“全角”字符，而原来在127号以下的那些就叫”半角”字符了。于是就把这种汉字方案叫做 “GB2312”。GB2312 是对 ASCII 的中文扩展。　　</p><h4 id="GBK-和-GB18030编码"><a href="#GBK-和-GB18030编码" class="headerlink" title="GBK 和 GB18030编码"></a>GBK 和 GB18030编码</h4><p>　　但是天朝的汉字太多了，我们很快就就发现有许多人的人名没有办法在这里打出来，特别是某些天朝领导的名字要是打不出很麻烦的。于是我们不得不继续把 GB2312 没有用到的码位找出来老实不客气地用上。　　</p><p>　　后来还是不够用，于是干脆不再要求低字节一定是127号之后的内码，只要第一个字节是大于127就固定表示这是一个汉字的开始，不管后面跟的是不是扩展字符集里的内容。结果扩展之后的编码方案被称为 GBK 标准，GBK 包括了 GB2312 的所有内容，同时又增加了近20000个新的汉字（包括繁体字）和符号。　　</p><p>　　后来少数民族也要用电脑了，于是我们再扩展，又加了几千个新的少数民族的字，GBK 扩成了 GB18030。从此之后，天朝民族的文化就可以在计算机时代中传承了。　　</p><p>　　在这个标准里，最大的特点是两字节长的汉字字符和一字节长的英文字符并存于同一套编码方案里，因此他们写的程序为了支持中文处理，必须要注意字串里的每一个字节的值，如果这个值是大于127的，那么就认为一个双字节字符集里的字符出现了。　　</p><p>　　那时候凡是受过编程学习的程序员都要每天念下面这个咒语数百遍的折磨：　　</p><p>　　“一个汉字算两个英文字符！一个汉字算两个英文字符……”　　</p><h4 id="UNICODE编码"><a href="#UNICODE编码" class="headerlink" title="UNICODE编码　　"></a>UNICODE编码　　</h4><p>　　因为当时各个国家都像天朝这样搞出一套自己的编码标准，结果互相之间谁也不懂谁的编码，谁也不支持别人的编码，连大陆和台湾这样只相隔了150海里，使用着同一种语言的兄弟地区，也分别采用了不同的编码方案：　　</p><p>　　当时的天朝人想让电脑显示汉字，就必须装上一个“汉字系统”。专门用来处理汉字的显示、输入的问题。　　</p><p>　　但是那个装台湾的人士写的程序就必须加装另一套支持 BIG5 编码的“倚天汉字系统”才可以用，装错了字符系统，显示就会乱了套！这怎么办？而且世界民族中还有那些暂时用不上电脑的穷苦人民，他们的文字又怎么办？　　</p><p>　　正在这时，天使及时出现了——一个叫 ISO （国际标谁化组织）的国际组织决定着手解决这个问题。他们采用的方法很简单：废了所有的地区性编码方案，重新搞一个包括了地球上所有文化、所有字母和符号的编码！他们打算叫它 UCS, 俗称 UNICODE 。（ Universal Multiple-Octet Coded Character Set ）　　</p><p>　　在UNICODE 中，一个汉字算两个英文字符的时代已经快过去了。　　</p><p>　　无论是半角的英文字母，还是全角的汉字，它们都是统一的“一个字符”！同时，也都是统一的“两个字节””　　</p><h4 id="UTF-8和UTF-16"><a href="#UTF-8和UTF-16" class="headerlink" title="UTF-8和UTF-16　　"></a>UTF-8和UTF-16　　</h4><p>　　UNICODE 来到时，一起到来的还有计算机网络的兴起，UNICODE 如何在网络上传输也是一个必须考虑的问题，于是面向传输的众多 UTF（UCS Transfer Format）标准出现了，顾名思义，UTF8就是每次8个位传输数据，而UTF16就是每次16个位，只不过为了传输时的可靠性，从UNICODE到UTF时并不是直接的对应，而是要过一些算法和规则来转换。　　</p><h4 id="未来的UCS-4"><a href="#未来的UCS-4" class="headerlink" title="未来的UCS-4"></a>未来的UCS-4</h4><p>　　如前所述，UNICODE 是用两个字节来表示为一个字符，他总共可以组合出65535不同的字符，这大概已经可以覆盖世界上所有文化的符号。如果还不够也没有关系，ISO已经准备了UCS-4方案，说简单了就是四个字节来表示一个字符，这样我们就可以组合出21亿个不同的字符出来（最高位有其他用途），这大概可以用到天朝成立银河联邦成立那一天吧！　　</p><hr><p>转自：<a href="http://blog.csdn.net/pingnanlee/article/details/8257694" target="_blank" rel="noopener">http://blog.csdn.net/pingnanlee/article/details/8257694</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java VisualVM</title>
      <link href="/2017/06/28/other/visualvm/"/>
      <url>/2017/06/28/other/visualvm/</url>
      
        <content type="html"><![CDATA[<h3 id="Java-VisualVM-插件地址"><a href="#Java-VisualVM-插件地址" class="headerlink" title="Java VisualVM 插件地址"></a>Java VisualVM 插件地址</h3><p>Java VisualVM默认的插件更新地址已经被oracle放弃了，开源项目迁移到github上了，先插件地址：<a href="https://visualvm.github.io/pluginscenters.html" target="_blank" rel="noopener">https://visualvm.github.io/pluginscenters.html</a> （目前北京时间：2017-06-28 可用）</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>017 springMvc补充-FTP连接池</title>
      <link href="/2017/06/14/springMvc/017.FTP%20Pool/"/>
      <url>/2017/06/14/springMvc/017.FTP%20Pool/</url>
      
        <content type="html"><![CDATA[<ul><li>前提</li></ul><p>由于经常的ftp连接，每次都要 创建-连接-销毁 给系统带来了不少开销。又由于没有现成的 ftp 连接池，我们只能自行开发 FtpClientPool</p><p>一般来说，对象池有下面几个特征：</p><ol><li>对象池中有一定数量已经创建好的对象</li><li>对象池向用户提供获取对象的接口，当用户需要新的对象时，便可通过调用此接口获取新的对象。如果对象池中有事先创建好的对象时，就直接返回给用户；如果没有了，对象池还可以创建新的对象加入其中，然后返回给用户</li><li>对象池向用户提供归还对象的接口，当用户不再使用某对象时，便可通过此接口把该对象归还给对象池</li><li>需要有一个正确关闭池的机制来结束对象的生命周期</li></ol><ul><li>调研</li></ul><p>Apache 提供了 common-pool 工具包，里面包含了开发通用对象池的一些接口和实现类。其中最基本的两个接口是ObjectPool(用于管理要被池化的对象的借出和归还) 和PoolableObjectFactory(用于大量生成相同类型和设置的ObjectPool)。</p><p>ObjectPool类</p><table><thead><tr><th>方法</th><th>注释</th></tr></thead><tbody><tr><td>borrowObject()</td><td>客户端从池中借出一个对象</td></tr><tr><td>returnObject(T obj)</td><td>客户端归还一个对象到池中</td></tr><tr><td>invalidateObject(T obj)</td><td></td></tr><tr><td>addObject()</td><td>添加对象到池</td></tr><tr><td>getNumIdle()</td><td></td></tr><tr><td>getNumActive()</td><td></td></tr><tr><td>clear()</td><td></td></tr><tr><td>close()</td><td>关闭对象池，清理内存释放资源等</td></tr><tr><td>setFactory(PoolableObjectFactory<t> factory)</t></td><td>需要一个工厂来制造池中的对象</td></tr></tbody></table><p>PoolableObjectFactory类</p><table><thead><tr><th>方法</th><th>注释</th></tr></thead><tbody><tr><td>makeObject()</td><td>制造一个对象</td></tr><tr><td>destroyObject(T obj)</td><td>销毁一个对象</td></tr><tr><td>validateObject(T obj)</td><td>验证一个对象是否还可用</td></tr><tr><td>activateObject(T obj)</td><td></td></tr><tr><td>passivateObject(T obj)</td></tr></tbody></table><p>通过以上两个接口我们就可以自己实现一个对象池了。</p><ul><li>开发</li></ul><p>1.jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- ftp --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-net<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-pool/commons-pool --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.resources-spring下添加属性文件 ftp.properties</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ftp<span class="selector-class">.host</span> = <span class="number">10.10</span>.<span class="number">10.1</span></span><br><span class="line">ftp<span class="selector-class">.port</span> = <span class="number">21</span></span><br><span class="line">ftp<span class="selector-class">.username</span> = xxxx</span><br><span class="line">ftp<span class="selector-class">.password</span> = xxxxxxxxx</span><br><span class="line">ftp<span class="selector-class">.clientTimeout</span> = <span class="number">180000</span></span><br><span class="line">ftp<span class="selector-class">.connectTimeout</span> = <span class="number">60000</span></span><br><span class="line">ftp<span class="selector-class">.encoding</span> = UTF-<span class="number">8</span></span><br><span class="line">ftp<span class="selector-class">.bufferSize</span> = <span class="number">1024</span></span><br><span class="line">ftp<span class="selector-class">.passiveMode</span> = true</span><br><span class="line">ftp<span class="selector-class">.defaultpoolsize</span> = <span class="number">10</span></span><br></pre></td></tr></table></figure><p>3.spring的配置文件application-config.xml 里引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 引入属性文件,这里的属性只针对service和这个spring配置文件的配置的bean有效 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath*:spring/ftp.properties"</span> <span class="attr">ignore-unresolvable</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>由于读取ftp属性文件将在util包，mvc的配置文件mvc-config.xml也引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在这定义的引入属性文件都要在spring配置文件（只针对service层）引入 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span>  <span class="attr">location</span>=<span class="string">"classpath*:spring/ftp.properties"</span> <span class="attr">ignore-unresolvable</span>=<span class="string">"true"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>mvc的配置文件mvc-config.xml再加上文件上传解析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文件上传解析器 --&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"multipartResolver"</span>    </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.web.multipart.commons.CommonsMultipartResolver"</span>&gt;</span>    </span><br><span class="line">        <span class="comment">&lt;!--1024*200即200k--&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxUploadSize"</span> <span class="attr">value</span>=<span class="string">"204800"</span> /&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"defaultEncoding"</span> <span class="attr">value</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--resolveLazily属性启用是为了推迟文件解析，以便在UploadAction 中捕获文件大小异常--&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"resolveLazily"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4.编写ftp的连接池</p><p>FTPClientFactory 工厂类</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.util.ftp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.net.ftp.FTP;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.net.ftp.FTPClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.net.ftp.FTPReply;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool.PoolableObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FTPClientFactory</span> <span class="keyword">implements</span> <span class="title">PoolableObjectFactory</span>&lt;<span class="title">FTPClient</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = Logger.getLogger(FTPClientFactory.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.host&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String host;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.port&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> port;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.username&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.password&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.clientTimeout&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> clientTimeout;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.connectTimeout&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> connectTimeout;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.encoding&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> String encoding;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.bufferSize&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> bufferSize;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.passiveMode&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> passiveMode;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 制造一个对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">FTPClient <span class="title">makeObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">final</span> FTPClient ftpClient = <span class="keyword">new</span> FTPClient();</span><br><span class="line">ftpClient.setConnectTimeout(connectTimeout);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">ftpClient.connect(host, port);</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> reply = ftpClient.getReplyCode();</span><br><span class="line"><span class="keyword">if</span> (!FTPReply.isPositiveCompletion(reply)) &#123;</span><br><span class="line">ftpClient.disconnect();</span><br><span class="line">LOGGER.warn(<span class="string">"FTPServer refused connection"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">boolean</span> result = ftpClient.login(username, password);</span><br><span class="line"><span class="keyword">if</span> (!result) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> Exception(</span><br><span class="line"><span class="string">"ftpClient登陆失败! userName:"</span> + username + <span class="string">" ; password:"</span> + password);</span><br><span class="line">&#125;</span><br><span class="line">ftpClient.setFileType(FTP.BINARY_FILE_TYPE);<span class="comment">//文件类型</span></span><br><span class="line">ftpClient.setControlEncoding(encoding);</span><br><span class="line">ftpClient.setBufferSize(bufferSize);</span><br><span class="line"><span class="keyword">if</span> (passiveMode) &#123;</span><br><span class="line"><span class="comment">//这个方法的意思就是每次数据连接之前，ftp client告诉ftp server开通一个端口来传输数据</span></span><br><span class="line">ftpClient.enterLocalPassiveMode();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 设置客户端操作超时</span></span><br><span class="line">ftpClient.setSoTimeout(clientTimeout);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.<span class="keyword">error</span>(<span class="string">"ftp池工厂创建对象失败"</span>, e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ftpClient;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 销毁一个对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">destroyObject</span><span class="params">(<span class="keyword">final</span> FTPClient ftpClient)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (ftpClient != <span class="keyword">null</span> &amp;&amp; ftpClient.isConnected()) &#123;</span><br><span class="line">ftpClient.logout();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.<span class="keyword">error</span>(<span class="string">"ftp池工厂销毁对象失败"</span>, e);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">// 注意,一定要在finally代码中断开连接，否则会导致占用ftp连接情况</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (ftpClient != <span class="keyword">null</span>) &#123;</span><br><span class="line">ftpClient.disconnect();</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.<span class="keyword">error</span>(<span class="string">"ftp池工厂断开连接失败"</span>, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 验证一个对象是否还可用</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">validateObject</span><span class="params">(<span class="keyword">final</span> FTPClient ftpClient)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">return</span> ftpClient.<span class="title">sendNoOp</span><span class="params">()</span></span>;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Failed to validate client: "</span> + e, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">activateObject</span><span class="params">(<span class="keyword">final</span> FTPClient obj)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">passivateObject</span><span class="params">(<span class="keyword">final</span> FTPClient obj)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FTPClientPool 连接池类，这里还包含了InitializingBean类，为了启动好服务立即初始化连接池中的对象数量</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.util.ftp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.NoSuchElementException;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ArrayBlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.BlockingQueue;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.net.ftp.FTPClient;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool.ObjectPool;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.pool.PoolableObjectFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化ftp池</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">InitFtpClientPool</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> FTPClientPool pool;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">pool.initPool();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FTPClientPool</span> <span class="keyword">implements</span> <span class="title">ObjectPool</span>&lt;<span class="title">FTPClient</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = Logger.getLogger(FTPClientPool.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 池工厂</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> FTPClientFactory factory;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 池中对象默认大小</span></span><br><span class="line"><span class="meta">@Value</span>(<span class="string">"$&#123;ftp.defaultpoolsize&#125;"</span>)</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> defaultpoolsize;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存放对象的队列</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> BlockingQueue&lt;FTPClient&gt; pool;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化池中的对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">initPool</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 阻塞队列</span></span><br><span class="line">pool = <span class="keyword">new</span> ArrayBlockingQueue&lt;FTPClient&gt;(defaultpoolsize);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; defaultpoolsize; i++) &#123;</span><br><span class="line"> addObject();</span><br><span class="line">&#125;</span><br><span class="line">LOGGER.info(<span class="string">"FtpClientPool init success"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端从池中借出一个对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="function">FTPClient <span class="title">borrowObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception, NoSuchElementException, IllegalStateException </span>&#123;</span><br><span class="line"><span class="keyword">final</span> FTPClient client = pool.poll();<span class="comment">// 这边不能用take()。take是同步方法，当没有可用对象时，会卡死在这里</span></span><br><span class="line"><span class="keyword">if</span> (client == <span class="keyword">null</span>) &#123;</span><br><span class="line">addObject();</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="title">borrowObject</span><span class="params">()</span></span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!factory.validateObject(client)) &#123;<span class="comment">// 验证不通过</span></span><br><span class="line"><span class="comment">// 池中移除无效的对象</span></span><br><span class="line">invalidateObject(client);</span><br><span class="line">addObject();</span><br><span class="line"><span class="function"><span class="keyword">return</span> <span class="title">borrowObject</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> client;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 客户端归还一个对象到池中</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">returnObject</span><span class="params">(<span class="keyword">final</span> FTPClient client)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 当对象不为空，归还池中；但是在3s内不能归还队列，销毁</span></span><br><span class="line"><span class="keyword">if</span> (client != <span class="keyword">null</span> &amp;&amp; !pool.offer(client, <span class="number">3</span>, TimeUnit.SECONDS)) &#123;</span><br><span class="line">factory.destroyObject(client);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使对象在池中失效</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">invalidateObject</span><span class="params">(<span class="keyword">final</span> FTPClient client)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="comment">// 移除无效的客户端</span></span><br><span class="line">pool.remove(client);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加对象到池</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception, IllegalStateException, UnsupportedOperationException </span>&#123;</span><br><span class="line">pool.offer(factory.makeObject(), <span class="number">3</span>, TimeUnit.SECONDS);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getNumIdle</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedOperationException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getNumActive</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedOperationException </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> <span class="keyword">throws</span> Exception, UnsupportedOperationException </span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭对象池，清理内存释放资源等</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (pool.iterator().hasNext()) &#123;</span><br><span class="line"><span class="keyword">final</span> FTPClient client = pool.take();<span class="comment">// 同步方法，直到取到为止</span></span><br><span class="line">factory.destroyObject(client);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 需要一个工厂来制造池中的对象</span></span><br><span class="line"><span class="meta">@SuppressWarnings</span>(<span class="string">"deprecation"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setFactory(<span class="keyword">final</span> PoolableObjectFactory&lt;FTPClient&gt; factory)</span><br><span class="line"><span class="keyword">throws</span> IllegalStateException, UnsupportedOperationException &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MyFTPClient 工具类</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.util.ftp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.net.ftp.FTPClient;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MyFTPClient &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(MyFTPClient.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> FTPClientPool pool;</span><br><span class="line"></span><br><span class="line"><span class="comment">//上传文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> uploadFile(<span class="keyword">final</span> String fileName, <span class="keyword">final</span> String absPath, <span class="keyword">final</span> InputStream <span class="keyword">in</span>) &#123;</span><br><span class="line"><span class="keyword">final</span> FTPClient ftpClient = getFTPClient();</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP上传中。。。"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">// 创建目录</span></span><br><span class="line">createDirectory(ftpClient, absPath);</span><br><span class="line"><span class="comment">// 更改目录</span></span><br><span class="line">ftpClient.changeWorkingDirectory(absPath);</span><br><span class="line"><span class="comment">// 上传</span></span><br><span class="line"><span class="keyword">final</span> boolean uploadFlag = ftpClient.storeFile(fileName, <span class="keyword">in</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!uploadFlag) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Fail to upload file. uploadFlag is false,ReplyCode is "</span></span><br><span class="line">+ ftpClient.getReplyCode() + <span class="string">" , ReplyString is "</span> + ftpClient.getReplyString());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"Fail to upload file, exception message is :"</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Fail to upload file."</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">in</span> != <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">in</span>.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"Fail to close inputStream, exception message is :"</span> + e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">returnFTPClient(ftpClient);</span><br><span class="line">&#125;</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP上传结束。。。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接下载</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> download(<span class="keyword">final</span> String absPath, <span class="keyword">final</span> OutputStream <span class="keyword">out</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> FTPClient ftpClient = getFTPClient();</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP获取中。。。"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.<span class="keyword">out</span>.println(ftpClient.printWorkingDirectory());</span><br><span class="line">ftpClient.retrieveFile(absPath, <span class="keyword">out</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"Fail to retrieve file, exception message is :"</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Fail to retrieve file."</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">returnFTPClient(ftpClient);</span><br><span class="line">&#125;</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP获取结束。。。"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取下载流</span></span><br><span class="line"><span class="keyword">public</span> InputStream getFileInputStream(<span class="keyword">final</span> String absPath) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> FTPClient ftpClient = getFTPClient();</span><br><span class="line">InputStream <span class="keyword">in</span> = <span class="literal">null</span>;</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP获取中。。。"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">in</span> = ftpClient.retrieveFileStream(absPath);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"Fail to retrieve file, exception message is :"</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Fail to retrieve file."</span>);</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">returnFTPClient(ftpClient);</span><br><span class="line">&#125;</span><br><span class="line">LOGGER.<span class="keyword">debug</span>(<span class="string">"FTP获取结束。。。"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">in</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> FTPClient getFTPClient() &#123;</span><br><span class="line">FTPClient client = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">client = pool.borrowObject();</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"获取连接池中的FTPClient异常, exception message is : "</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"获取连接池中的FTPClient异常."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> client;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> returnFTPClient(<span class="keyword">final</span> FTPClient client) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pool.returnObject(client);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"归还连接池中的FTPClient异常, exception message is : "</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"归还连接池中的FTPClient异常."</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> createDirectory(<span class="keyword">final</span> FTPClient ftpClient, <span class="keyword">final</span> String path) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">final</span> String separator = <span class="string">"/"</span>;</span><br><span class="line"><span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (index &lt; path.length()) &#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> pos = path.indexOf(separator, index);</span><br><span class="line"><span class="keyword">if</span> (pos == -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (!ftpClient.changeWorkingDirectory(path)) &#123;</span><br><span class="line">ftpClient.makeDirectory(path);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">index = pos + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (!ftpClient.changeWorkingDirectory(path.substring(<span class="number">0</span>, pos))) &#123;</span><br><span class="line">ftpClient.makeDirectory(path.substring(<span class="number">0</span>, pos));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">LOGGER.error(<span class="string">"Fail to create directory, exception message is :"</span> + e);</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Fail to create directory."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们在DemoController中添加2个测试类</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> MyFTPClient ftpClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = <span class="meta-string">"/upload.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void uploadFtp(<span class="meta">@RequestParam(value = <span class="meta-string">"file"</span>)</span> <span class="keyword">final</span> MultipartFile file,</span><br><span class="line"><span class="meta">@RequestParam(value = <span class="meta-string">"msg"</span>)</span> <span class="keyword">final</span> String msg) &#123;</span><br><span class="line">logger.info(<span class="string">"接口参数："</span> + msg);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">ftpClient.uploadFile(<span class="string">"test.png"</span>, <span class="string">"/home/pics"</span>, file.getInputStream());</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">logger.error(<span class="string">"io错误"</span>, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@SuppressWarnings(<span class="meta-string">"resource"</span>)</span></span><br><span class="line"><span class="meta">@RequestMapping(value = <span class="meta-string">"/download.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void uploadFtp(<span class="keyword">final</span> String absPath, <span class="keyword">final</span> HttpServletResponse response) &#123;</span><br><span class="line">response.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename=my.txt"</span>);</span><br><span class="line">OutputStream <span class="keyword">out</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">out</span> = response.getOutputStream();</span><br><span class="line">ftpClient.download(absPath, <span class="keyword">out</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">logger.error(<span class="string">"io错误"</span>, e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.使用工具或写页面测试接口，上传下载ftp成功，每次连接都从ftp池里获取</p><ul><li>好了，ftp连接池就编写好了，至此具体项目为，点击 <a href="/images/springMvc/springMvc1_ftp.zip">springMvc</a> 下载</li></ul><hr><p>参考 </p><p><a href="http://blog.csdn.net/suifeng3051/article/details/48969679" target="_blank" rel="noopener">http://blog.csdn.net/suifeng3051/article/details/48969679</a><br><a href="http://blog.csdn.net/jml1437710575/article/details/52020936" target="_blank" rel="noopener">http://blog.csdn.net/jml1437710575/article/details/52020936</a></p><hr>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>016 springMvc总结</title>
      <link href="/2017/06/10/springMvc/016.springMvc%20end/"/>
      <url>/2017/06/10/springMvc/016.springMvc%20end/</url>
      
        <content type="html"><![CDATA[<p>springMvc 可以说是一个很好java web的MVC框架，其扩展性和简易型让编码更加容易灵活。</p><p>之前介绍及springMvc编写的代码是基础的项目搭建，之后可以根据各自的需求优化及整合各种插件，如：Redis， mongodb,ftp 等。</p><p>以上项目代码，点击 <a href="/images/springMvc/springMvc1.zip">springMvc</a> 下载</p><h4 id="一些执行顺序："><a href="#一些执行顺序：" class="headerlink" title="一些执行顺序："></a>一些执行顺序：</h4><p>过滤器-拦截器-切面，执行顺序：</p><p>启动tomcat时</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">过滤器<span class="number">2</span>[TestFilter]init.....</span><br><span class="line">过滤器<span class="number">1</span>[TestFilter]init.....</span><br></pre></td></tr></table></figure><p>之后每次调用</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">过滤器1[TestFilter]doFilter.<span class="string">.....1</span></span><br><span class="line">过滤器2[TestFilter]doFilter.<span class="string">.....1</span></span><br><span class="line">拦截器1[TestInterceptor]preHandle<span class="params">---------1</span>,进入程序<span class="params">-----2</span></span><br><span class="line">拦截器2[TestInterceptor]preHandle<span class="params">---------1</span>,进入程序<span class="params">-----2</span></span><br><span class="line">切面,方法前jdbc<span class="function">:mysql</span>:<span class="string">//localhost</span><span class="function">:3306</span>/demo?useUnicode=<span class="literal">true</span>&amp;characterEncoding=UTF-8</span><br><span class="line">切面@Before。。。。id==2</span><br><span class="line"><span class="params">---</span>执行service方法</span><br><span class="line">切面@Before。。。。id==2</span><br><span class="line"><span class="params">---</span>执行dao方法</span><br><span class="line">切面,方法后</span><br><span class="line">切面@After。。。。2。</span><br><span class="line">拦截器2[TestInterceptor]postHandle<span class="params">----------3</span></span><br><span class="line">拦截器1[TestInterceptor]postHandle<span class="params">----------3</span></span><br><span class="line">拦截器2[TestInterceptor]afterCompletion<span class="params">------------4</span></span><br><span class="line">拦截器1[TestInterceptor]afterCompletion<span class="params">------------4</span></span><br></pre></td></tr></table></figure><p>关闭tomcat</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">过滤器<span class="number">2</span>[TestFilter]destroy......</span><br><span class="line">过滤器<span class="number">1</span>[TestFilter]destroy......</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>015 springMvc异步线程</title>
      <link href="/2017/06/09/springMvc/015.springMvc%20async/"/>
      <url>/2017/06/09/springMvc/015.springMvc%20async/</url>
      
        <content type="html"><![CDATA[<ul><li>在 mvc-config.xml 中 添加 </li></ul><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlns:<span class="keyword">task</span>=<span class="string">"http://www.springframework.org/schema/task"</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>task http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>task<span class="regexp">/spring-task-3.2.xsd</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用spring的异步@Async简单定义方式 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">task:annotation-driven</span> /&gt;</span>   </span><br><span class="line">    <span class="comment">&lt;!--异步定义推荐方式  --&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--     &lt;task:executor id="executor" pool-size="15" /&gt;   --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     &lt;task:scheduler id="scheduler" pool-size="30" /&gt;   --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--     &lt;task:annotation-driven executor="executor" scheduler="scheduler" /&gt;  --&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写Async代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.service.async;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAsync</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Async</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Thread.sleep(<span class="number">10000</span>);</span><br><span class="line">System.out.println(<span class="string">"异步等10s执行"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> InterruptedException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>修改 DemoController.java</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//引入代码</span></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> TestAsync testAsync;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(value = <span class="meta-string">"/index.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> String index() &#123;</span><br><span class="line">testAsync.test();</span><br><span class="line">logger.info(<span class="string">"这是我打印的log日志"</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="string">"首页"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>运行tomcat 访问这个接口，执行结果就能看出异步了</li></ul><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><p>定义需要调用的@Async方法，不能再调用者在一个类里，否则异步会失效</p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>014 springMvc定时任务</title>
      <link href="/2017/06/09/springMvc/014.springMvc%20quartz/"/>
      <url>/2017/06/09/springMvc/014.springMvc%20quartz/</url>
      
        <content type="html"><![CDATA[<ul><li>定时任务，我们得先添加jar：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.quartz-scheduler<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>quartz<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>然后写一个需要执行的定时任务类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yj.demo.service.schedule;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.Job;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoadTask</span> <span class="keyword">implements</span> <span class="title">Job</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">(JobExecutionContext arg0)</span> <span class="keyword">throws</span> JobExecutionException </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"定时任务！"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在spring文件夹内新建定时任务的配置文件 quartz-task.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"</span></span></span><br><span class="line"><span class="tag"> <span class="attr">default-lazy-init</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"businessReport"</span> <span class="attr">class</span>=<span class="string">"com.yxjn.myapp.service.schedule.LoadTask"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">name</span>=<span class="string">"reportTask"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.JobDetailFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobClass"</span> <span class="attr">value</span>=<span class="string">"com.yxjn.myapp.service.schedule.LoadTask"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment">&lt;!-- 触发器 --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"cronTrigger"</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.CronTriggerFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 指向我们的任务 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jobDetail"</span> <span class="attr">ref</span>=<span class="string">"reportTask"</span> /&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- 每10s触发一次 --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cronExpression"</span> <span class="attr">value</span>=<span class="string">"0/10 * * * * ?"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span> </span><br><span class="line">    <span class="comment">&lt;!-- 调度器  --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span>  </span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.scheduling.quartz.SchedulerFactoryBean"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"triggers"</span>&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span>  </span><br><span class="line">                <span class="comment">&lt;!--  触发器列表 --&gt;</span>  </span><br><span class="line">                <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">"cronTrigger"</span> /&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在 application-config.xml 中引入 quartz-task.xml 使配置生效</li></ul><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">import</span> resource=<span class="string">"./quartz-task.xml"</span> /&gt;</span><br></pre></td></tr></table></figure><ul><li>好了，我们启动tomcat，每等待10s时间，控制台就会打印一句话</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>013 springMvc日志</title>
      <link href="/2017/06/09/springMvc/013.springMvc%20Log/"/>
      <url>/2017/06/09/springMvc/013.springMvc%20Log/</url>
      
        <content type="html"><![CDATA[<ul><li>我们这里使用log4j打印日志，所以先添加jar</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 日志 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>将配置文件 <a href="/images/springMvc/log4j.dtd">log4j.dtd</a>，<a href="/images/springMvc/log4j.xml">log4j.xml</a> 放在resources的spring文件夹内</p></li><li><p>配置web.xml</p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- log4j 系统日志--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>log4jConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/log4j.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span>   </span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.Log4jConfigListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在DemoController中添加</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.log4j.Logger;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> logger=<span class="type">Logger</span>.getLogger(<span class="type">DemoController</span>.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">方法中添加</span><br><span class="line">logger.info(<span class="string">"这是我打印的log日志"</span>);</span><br></pre></td></tr></table></figure><ul><li>这样运行tomcat访问接口，就会打印出结果：</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[http-bio-8080-exec-3]</span> <span class="selector-tag">INFO</span> <span class="selector-tag">com</span><span class="selector-class">.yxjn</span><span class="selector-class">.myapp</span><span class="selector-class">.controller</span><span class="selector-class">.DemoController</span> <span class="selector-tag">-</span> 这是我打印的<span class="selector-tag">log</span>日志</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>012 springMvc过滤器</title>
      <link href="/2017/06/08/springMvc/012.springMvc%20Filter/"/>
      <url>/2017/06/08/springMvc/012.springMvc%20Filter/</url>
      
        <content type="html"><![CDATA[<ul><li>编写过滤器</li></ul><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">package com.yxjn.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestFilter</span> <span class="title">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> void destroy() &#123;</span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"过滤器[TestFilter]destroy......"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> void doFilter(<span class="type">ServletRequest</span> req, <span class="type">ServletResponse</span> res,</span><br><span class="line"><span class="type">FilterChain</span> chain) <span class="keyword">throws</span> <span class="type">IOException</span>, <span class="type">ServletException</span> &#123;</span><br><span class="line"><span class="comment">//拦截器之前先进行这一步</span></span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"过滤器[TestFilter]doFilter......1"</span>);</span><br><span class="line">chain.doFilter(req, res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> void <span class="keyword">init</span>(<span class="type">FilterConfig</span> arg0) <span class="keyword">throws</span> <span class="type">ServletException</span> &#123;</span><br><span class="line"><span class="comment">//启动就执行这一步</span></span><br><span class="line"><span class="type">System</span>.out.<span class="built_in">println</span>(<span class="string">"过滤器[TestFilter]init....."</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在web中添加</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.yxjn.myapp.TestFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>myFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>执行运行tomcat</li></ul><p>顺序：2个过滤器：启动tomcat时初始化先声明后调用，以后每次调用接口时先声明先调用</p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>011 springMvc拦截器</title>
      <link href="/2017/06/08/springMvc/011.springMvc%20Interceptor/"/>
      <url>/2017/06/08/springMvc/011.springMvc%20Interceptor/</url>
      
        <content type="html"><![CDATA[<ul><li>直接编写拦截器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 拦截器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInterceptor1</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在DispatcherServlet 渲染了对应的视图之后执行。这个方法的主要作用是用于进行资源清理工作的。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> HttpServletResponse arg1, <span class="keyword">final</span> Object arg2, <span class="keyword">final</span> Exception arg3)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器1[TestInterceptor]afterCompletion------------4"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//它会在DispatcherServlet 进行视图返回渲染之前被调用，所以我们可以在这个方法中对Controller 处理之后的ModelAndView 对象进行操作。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0, <span class="keyword">final</span> HttpServletResponse arg1,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> Object arg2, <span class="keyword">final</span> ModelAndView arg3)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器1[TestInterceptor]postHandle----------3"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0, <span class="keyword">final</span> HttpServletResponse arg1,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> Object arg2)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器1[TestInterceptor]preHandle---------1,进入程序-----2"</span>);</span><br><span class="line"><span class="comment">//false 就到此止步，true 进行下一步2</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 拦截器</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestInterceptor2</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//在DispatcherServlet 渲染了对应的视图之后执行。这个方法的主要作用是用于进行资源清理工作的。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterCompletion</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> HttpServletResponse arg1, <span class="keyword">final</span> Object arg2, <span class="keyword">final</span> Exception arg3)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器2[TestInterceptor]afterCompletion------------4"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//它会在DispatcherServlet 进行视图返回渲染之前被调用，所以我们可以在这个方法中对Controller 处理之后的ModelAndView 对象进行操作。</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postHandle</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0, <span class="keyword">final</span> HttpServletResponse arg1,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> Object arg2, <span class="keyword">final</span> ModelAndView arg3)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器2[TestInterceptor]postHandle----------3"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(<span class="keyword">final</span> HttpServletRequest arg0, <span class="keyword">final</span> HttpServletResponse arg1,</span></span></span><br><span class="line"><span class="function"><span class="params"><span class="keyword">final</span> Object arg2)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">System.out.println(<span class="string">"拦截器2[TestInterceptor]preHandle---------1,进入程序-----2"</span>);</span><br><span class="line"><span class="comment">//false 就到此止步，true 进行下一步2</span></span><br><span class="line"><span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在mvc的配置文件中application-config.xml中开启切面</li></ul><p>并在内容中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.yxjn.myapp.TestInterceptor1"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"com.yxjn.myapp.TestInterceptor2"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>多个拦截器同时拦截一个url，顺序：</li></ul><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">拦截器<span class="number">1</span>[TestInterceptor]preHandle--------<span class="number">-1</span>,进入程序----<span class="number">-2</span></span><br><span class="line">拦截器<span class="number">2</span>[TestInterceptor]preHandle--------<span class="number">-1</span>,进入程序----<span class="number">-2</span></span><br><span class="line">xxx方法</span><br><span class="line">拦截器<span class="number">2</span>[TestInterceptor]postHandle---------<span class="number">-3</span></span><br><span class="line">拦截器<span class="number">1</span>[TestInterceptor]postHandle---------<span class="number">-3</span></span><br><span class="line">拦截器<span class="number">2</span>[TestInterceptor]afterCompletion-----------<span class="number">-4</span></span><br><span class="line">拦截器<span class="number">1</span>[TestInterceptor]afterCompletion-----------<span class="number">-4</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>010 springMvc切面</title>
      <link href="/2017/06/08/springMvc/010.springMvc%20AOP/"/>
      <url>/2017/06/08/springMvc/010.springMvc%20AOP/</url>
      
        <content type="html"><![CDATA[<ul><li>添加jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- AspectJ --&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aopalliance<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- AspectJ --&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>面对注解写切面</li></ul><ol><li>自定义注解</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">win7</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.annotation</span><span class="selector-class">.Documented</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.annotation</span><span class="selector-class">.ElementType</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.annotation</span><span class="selector-class">.Retention</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.annotation</span><span class="selector-class">.RetentionPolicy</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.lang</span><span class="selector-class">.annotation</span><span class="selector-class">.Target</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Target</span>(<span class="keyword">ElementType</span>.<span class="keyword">METHOD</span>)</span><br><span class="line">@<span class="keyword">Retention</span>(<span class="keyword">RetentionPolicy</span>.<span class="keyword">RUNTIME</span>)</span><br><span class="line">@<span class="keyword">Documented</span></span><br><span class="line"><span class="keyword">public</span> @interface AopAction &#123;</span><br><span class="line"><span class="selector-tag">String</span> <span class="selector-tag">name</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.应用注解的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@AopAction</span>(name = <span class="string">"aopname"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.切面</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> win7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.reflect.MethodSignature;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line">#<span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AopAspect</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Pointcut(<span class="meta-string">"@annotation(win7.AopAction)"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void cutPoint()&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@After(<span class="meta-string">"cutPoint()"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void after(<span class="keyword">final</span> JoinPoint joinPoint) &#123;</span><br><span class="line"><span class="keyword">final</span> MethodSignature signature = (MethodSignature) joinPoint.getSignature();</span><br><span class="line"><span class="keyword">final</span> Method method = signature.getMethod();</span><br><span class="line"><span class="keyword">final</span> AopAction action = method.getAnnotation(AopAction.<span class="keyword">class</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(action.name());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在配置文件中（这里选择application-config.xml）中开启切面</li></ul><p>在xml头 添加</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">xmlns:</span>aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>aop http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>aop<span class="regexp">/spring-aop.xsd</span></span><br></pre></td></tr></table></figure><p>并在内容中添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:aspectj-autoproxy/&gt;</span><br><span class="line">&lt;bean <span class="attribute">id</span>=<span class="string">"aop1"</span> <span class="attribute">class</span>=<span class="string">"win7.AopAspect"</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>另外有2种方式直接对方法写切面</li></ul><ol><li><p>@Pointcut定义一个切点，然后使用@Around或@Before，@After切这个方法</p></li><li><p>直接在@Around或@Before，@After中写切点</p></li></ol><p>编写切面的类(@Value是spring的引入属性文件值的注解)</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.After;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Before;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.<span class="keyword">annotation</span>.Pointcut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Value;</span><br><span class="line"></span><br><span class="line"><span class="comment">//描述切面类</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestAop</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Value(<span class="meta-string">"<span class="subst">$&#123;url&#125;</span>"</span>)</span></span><br><span class="line"><span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 定义一个切入点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Pointcut(<span class="meta-string">"execution(* com.yxjn.myapp.service.DemoService.remove*(..))"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void excudeService()&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主要执行</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> thisJoinPoint</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Around(<span class="meta-string">"excudeService()"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void twiceAsOld(<span class="keyword">final</span> ProceedingJoinPoint thisJoinPoint)&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"切面,方法前"</span> + url);<span class="comment">//第一执行</span></span><br><span class="line"><span class="comment">//先执行@Before方法</span></span><br><span class="line">thisJoinPoint.proceed();<span class="comment">//再执行方法</span></span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"切面,方法后"</span>);<span class="comment">//再执行</span></span><br><span class="line"><span class="comment">//再执行@After(excudeService())方法（多个按顺序下去）</span></span><br><span class="line"><span class="comment">//再执行@After(自定义切点)方法</span></span><br><span class="line">&#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Throwable e) &#123;</span><br><span class="line">e.printStackTrace ();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 通过连接点切入</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Before(<span class="meta-string">"execution(* remove*(..)) &amp;&amp;"</span> + <span class="meta-string">"args(id,..)"</span>)</span> <span class="comment">//切所有remove开始方法 参数id</span></span><br><span class="line"><span class="keyword">public</span> void twiceAsOld1(<span class="keyword">final</span> String id)&#123;</span><br><span class="line">System.<span class="keyword">out</span>.println (<span class="string">"切面@Before。。。。id=="</span> + id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 切面后处理方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@After(<span class="meta-string">"execution(* com.yxjn.myapp.service.DemoService.remove*(..)) &amp;&amp;"</span> + <span class="meta-string">"args(ids,..)"</span>)</span> <span class="comment">//切DemoService下remove方法 参数名ids</span></span><br><span class="line"><span class="keyword">public</span> void aopAfter(<span class="keyword">final</span> List&lt;String&gt; ids)&#123;</span><br><span class="line">System.<span class="keyword">out</span>.println (<span class="string">"切面@After。。。。ids=="</span> + ids);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * 切面后处理方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@After(<span class="meta-string">"excudeService()"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void aopAfter()&#123;</span><br><span class="line">System.<span class="keyword">out</span>.println (<span class="string">"切面@After。。。。2。"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在配置文件中（这里选择application-config.xml）中开启切面</li></ul><p>在xml头 添加</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">xmlns:</span>aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>aop http:<span class="regexp">//</span>www.springframework.org<span class="regexp">/schema/</span>aop<span class="regexp">/spring-aop.xsd</span></span><br></pre></td></tr></table></figure><p>并在内容中添加</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;aop:aspectj-autoproxy/&gt;</span><br><span class="line">&lt;bean <span class="attribute">id</span>=<span class="string">"aop1"</span> <span class="attribute">class</span>=<span class="string">"com.yxjn.myapp.TestAop"</span>/&gt;</span><br></pre></td></tr></table></figure><ul><li>运行tomcat调用被切的方法，进入切面中</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>009 springMvc统一异常处理</title>
      <link href="/2017/06/08/springMvc/009.springMvc%20unified%20Exception%20deal/"/>
      <url>/2017/06/08/springMvc/009.springMvc%20unified%20Exception%20deal/</url>
      
        <content type="html"><![CDATA[<ul><li>springMvc 统一异常 @ControllerAdvice</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.<span class="keyword">HashMap</span>;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line">@ControllerAdvice</span><br><span class="line"><span class="keyword">public</span> class ControllerExceptionHandler &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//可以定义多个方法捕捉不同的异常</span></span><br><span class="line">    @ExceptionHandler(&#123; Exception.class &#125;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> exceptionHandler(<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">    <span class="keyword">final</span> Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> <span class="keyword">HashMap</span>&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt;();</span><br><span class="line">    <span class="built_in">map</span>.put(<span class="string">"key"</span>, <span class="string">"统一异常捕捉成功"</span>);</span><br><span class="line">    <span class="built_in">map</span>.put(<span class="string">"status"</span>, <span class="string">"500"</span>);</span><br><span class="line">        System.out.<span class="built_in">println</span>(e);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">map</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>008 springMvc处理@ResponseBody返回String时的乱码</title>
      <link href="/2017/06/07/springMvc/008.springMvc%20deal%20@ResponseBody%20String%20error%20codes/"/>
      <url>/2017/06/07/springMvc/008.springMvc%20deal%20@ResponseBody%20String%20error%20codes/</url>
      
        <content type="html"><![CDATA[<p>现象： 方法直接返回String会乱码，而返回Object的那个不会乱码</p><p>答案：这可以说是spring mvc的一个bug，spring MVC有一系列HttpMessageConverter去处理用@ResponseBody注解的返回值，如返回list则使用MappingJacksonHttpMessageConverter，返回string，则使用StringHttpMessageConverter，这个convert使用的是字符集是iso-8859-1,而且是final的。</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset DEFAULT_CHARSET = Charset.forName(<span class="string">"ISO-8859-1"</span>);</span><br></pre></td></tr></table></figure><p>一种方法：将以下代码放到 &lt;mvc:annotation-driven /&gt; 上方</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"</span>&gt;  </span><br><span class="line">        &lt;property name=<span class="string">"messageConverters"</span>&gt;  </span><br><span class="line">            &lt;list&gt;  </span><br><span class="line">                &lt;bean id=<span class="string">"stringHttpMessageConverter"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>&gt;  </span><br><span class="line">                    &lt;property name=<span class="string">"writeAcceptCharset"</span> value=<span class="string">"false"</span> /&gt; <span class="xml"><span class="comment">&lt;!--  用于避免响应头过大  --&gt;</span>  </span></span><br><span class="line">                    &lt;property name="supportedMediaTypes"&gt;  </span><br><span class="line">                        &lt;list&gt;  </span><br><span class="line">                            &lt;value&gt;application/json;charset=UTF-8&lt;/value&gt;  </span><br><span class="line">                        &lt;/list&gt;  </span><br><span class="line"><span class="xml">                    <span class="tag">&lt;/<span class="name">property</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span>  </span><br><span class="line">                &lt;bean <span class="class"><span class="keyword">class</span></span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span> /&gt;  </span><br><span class="line">            &lt;<span class="regexp">/list&gt;  </span></span><br><span class="line"><span class="regexp">        &lt;/</span>property&gt;  </span><br><span class="line">&lt;<span class="regexp">/bean&gt;</span></span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="http://blog.csdn.net/hurryjiang/article/details/7710110" target="_blank" rel="noopener">http://blog.csdn.net/hurryjiang/article/details/7710110</a></p><p><a href="http://blog.csdn.net/littleskey/article/details/52841148" target="_blank" rel="noopener">http://blog.csdn.net/littleskey/article/details/52841148</a></p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>007 springMvc增删改差事务代码编写</title>
      <link href="/2017/06/07/springMvc/007.springMvc%20ADUS%20Transactional/"/>
      <url>/2017/06/07/springMvc/007.springMvc%20ADUS%20Transactional/</url>
      
        <content type="html"><![CDATA[<ul><li>由于@ResponseBody处理实体转化成json，所以在 pom.xml 中添加：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 支持json返回等，@responsebody --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0-rc2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.0-rc2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>DemoController.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.DemoEntity;</span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.Pager;</span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.service.DemoService;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> DemoService demoservice;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/index.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">index</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/showMessage.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">showMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"showMessage"</span>);</span><br><span class="line">mv.addObject(<span class="string">"message"</span>, <span class="string">"这是jsp页面的jstl"</span>);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/addOne.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">addOne</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> DemoEntity demo = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">demo.setName(<span class="string">"xiaoming"</span>);</span><br><span class="line">demo.setIntro(<span class="string">"xiaoming is age 18!"</span>);</span><br><span class="line">demoservice.addOne(demo);</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/addList.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">addList</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demosIn = <span class="keyword">new</span> ArrayList&lt;DemoEntity&gt;();</span><br><span class="line"><span class="keyword">final</span> DemoEntity demo1 = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">demo1.setName(<span class="string">"xiaoming"</span>);</span><br><span class="line">demo1.setIntro(<span class="string">"xiaoming is age 18!"</span>);</span><br><span class="line">demosIn.add(demo1);</span><br><span class="line"><span class="keyword">final</span> DemoEntity demo2 = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">demo2.setName(<span class="string">"小红"</span>);</span><br><span class="line">demo2.setIntro(<span class="string">"小红 is age 21!"</span>);</span><br><span class="line">demosIn.add(demo2);</span><br><span class="line">demoservice.addList(demosIn);</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/remove.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">remove</span><span class="params">(<span class="keyword">final</span> String id)</span></span>&#123;</span><br><span class="line"><span class="comment">//String id = "61";</span></span><br><span class="line">demoservice.remove(id);</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/removeIn.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">removeIn</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> List&lt;String&gt; ids = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">ids.add(<span class="string">"64"</span>);</span><br><span class="line">ids.add(<span class="string">"66"</span>);</span><br><span class="line">demoservice.removeIn(ids);</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/modify.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">modify</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> DemoEntity demo = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">demo.setId(<span class="string">"1"</span>);</span><br><span class="line">demo.setName(<span class="string">"xiaoming"</span>);</span><br><span class="line">demo.setIntro(<span class="string">"xiaoming is age 20!"</span>);</span><br><span class="line">demoservice.modify(demo);</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/queryOne.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">queryOne</span><span class="params">(<span class="keyword">final</span> String id)</span></span>&#123;</span><br><span class="line"><span class="comment">//String id = "67";</span></span><br><span class="line"><span class="keyword">final</span> DemoEntity demo = demoservice.queryOne(id);</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demo);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/queryPage.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Pager&lt;DemoEntity&gt; <span class="title">queryPage</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> page = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">int</span> size = <span class="number">3</span>;</span><br><span class="line">Pager&lt;DemoEntity&gt; pager = <span class="keyword">new</span> Pager&lt;DemoEntity&gt;(page, size);</span><br><span class="line">pager = demoservice.queryPage(pager);</span><br><span class="line"><span class="keyword">return</span> pager;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/queryList.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">queryList</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/transaction.do"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> ModelAndView <span class="title">transaction</span><span class="params">()</span></span>&#123;</span><br><span class="line">demoservice.transaction();</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoservice.queryList();</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = <span class="keyword">new</span> ModelAndView(<span class="string">"demo"</span>);</span><br><span class="line">mv.addObject(<span class="string">"demos"</span>, demos);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>DemoService.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> *******************************************************************************</span></span><br><span class="line"><span class="comment"> * COPYRIGHT China Mobile (SuZhou) Software Technology Co.,Ltd. 2017</span></span><br><span class="line"><span class="comment"> *******************************************************************************</span></span><br><span class="line"><span class="comment"> *----------------------------------------------------------------------------*/</span></span><br><span class="line"><span class="keyword">package</span> com.yxjn.myapp.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.dao.DemoDao;</span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.DemoEntity;</span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.Pager;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> DemoDao demoDao;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOne</span><span class="params">(<span class="keyword">final</span> DemoEntity demo)</span> </span>&#123;</span><br><span class="line">demoDao.addOne(demo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;DemoEntity&gt; <span class="title">queryList</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> demoDao.queryList();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addList</span><span class="params">(<span class="keyword">final</span> List&lt;DemoEntity&gt; demos)</span> </span>&#123;</span><br><span class="line">demoDao.addList(demos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">final</span> String id)</span> </span>&#123;</span><br><span class="line">demoDao.remove(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeIn</span><span class="params">(<span class="keyword">final</span> List&lt;String&gt; ids)</span> </span>&#123;</span><br><span class="line">demoDao.removeIn(ids);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(<span class="keyword">final</span> DemoEntity demo)</span> </span>&#123;</span><br><span class="line">demoDao.modify(demo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> DemoEntity <span class="title">queryOne</span><span class="params">(<span class="keyword">final</span> String id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> demoDao.queryOne(id);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 事务测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">transaction</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> DemoEntity demo = <span class="keyword">new</span> DemoEntity();</span><br><span class="line">demo.setName(<span class="string">"Lili"</span>);</span><br><span class="line">demo.setIntro(<span class="string">"Lili is also age 18!"</span>);</span><br><span class="line">addOne(demo);</span><br><span class="line">Integer.parseInt(<span class="string">"ss"</span>);</span><br><span class="line">addOne(demo);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Pager&lt;DemoEntity&gt; <span class="title">queryPage</span><span class="params">(<span class="keyword">final</span> Pager&lt;DemoEntity&gt; pager)</span> </span>&#123;</span><br><span class="line"><span class="keyword">final</span> List&lt;DemoEntity&gt; demos = demoDao.queryPage(pager);</span><br><span class="line"></span><br><span class="line">pager.setResult(demos);</span><br><span class="line">pager.setTotal(demoDao.count());</span><br><span class="line">pager.setEndNo();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> pager;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>DemoDao.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"> *******************************************************************************</span></span><br><span class="line"><span class="comment"> * COPYRIGHT China Mobile (SuZhou) Software Technology Co.,Ltd. 2017</span></span><br><span class="line"><span class="comment"> *******************************************************************************</span></span><br><span class="line"><span class="comment"> *----------------------------------------------------------------------------*/</span></span><br><span class="line"><span class="keyword">package</span> com.yxjn.myapp.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.DemoEntity;</span><br><span class="line"><span class="keyword">import</span> com.yxjn.myapp.entity.Pager;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOne</span><span class="params">(DemoEntity demo)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;DemoEntity&gt; <span class="title">queryList</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addList</span><span class="params">(List&lt;DemoEntity&gt; demos)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeIn</span><span class="params">(List&lt;String&gt; ids)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">modify</span><span class="params">(DemoEntity demo)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> DemoEntity <span class="title">queryOne</span><span class="params">(String id)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;DemoEntity&gt; <span class="title">queryPage</span><span class="params">(Pager&lt;DemoEntity&gt; pager)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Pager.java</li></ul><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * mysql分页</span></span><br><span class="line"><span class="comment"> * @param &lt;T&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> Pager&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> page;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 每页条数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> <span class="keyword">size</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 总条数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> total;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> endNo;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询结果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> List&lt;T&gt; result;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Pager(<span class="keyword">final</span> <span class="keyword">int</span> page, <span class="keyword">final</span> <span class="keyword">int</span> <span class="keyword">size</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.page = page;</span><br><span class="line"><span class="keyword">this</span>.<span class="keyword">size</span> = <span class="keyword">size</span>;</span><br><span class="line">getStartNo();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> getPage() &#123;</span><br><span class="line"><span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setPage(<span class="keyword">final</span> <span class="keyword">int</span> page) &#123;</span><br><span class="line"><span class="keyword">this</span>.page = page;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> getSize() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">size</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setSize(<span class="keyword">final</span> <span class="keyword">int</span> <span class="keyword">size</span>) &#123;</span><br><span class="line"><span class="keyword">this</span>.<span class="keyword">size</span> = <span class="keyword">size</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> getTotal() &#123;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setTotal(<span class="keyword">final</span> <span class="keyword">int</span> total) &#123;</span><br><span class="line"><span class="keyword">this</span>.total = total;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> getStartNo() &#123;</span><br><span class="line"><span class="keyword">return</span> (page-<span class="number">1</span>)*<span class="keyword">size</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> getEndNo() &#123;</span><br><span class="line"><span class="keyword">return</span> endNo;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setEndNo() &#123;</span><br><span class="line"><span class="keyword">this</span>.endNo = page*<span class="keyword">size</span>;</span><br><span class="line"><span class="keyword">if</span> (endNo &gt; total) &#123;</span><br><span class="line">endNo = total;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;T&gt; getResult() &#123;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setResult(<span class="keyword">final</span> List&lt;T&gt; result) &#123;</span><br><span class="line"><span class="keyword">this</span>.result = result;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>DemoEntity.java</li></ul><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.entity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class DemoEntity &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">String</span> intro;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getIntro() &#123;</span><br><span class="line"><span class="keyword">return</span> intro;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setIntro(<span class="keyword">final</span> <span class="keyword">String</span> intro) &#123;</span><br><span class="line"><span class="keyword">this</span>.intro = intro;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getName() &#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setName(<span class="keyword">final</span> <span class="keyword">String</span> name) &#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">String</span> getId() &#123;</span><br><span class="line"><span class="keyword">return</span> id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> setId(<span class="keyword">final</span> <span class="keyword">String</span> id) &#123;</span><br><span class="line"><span class="keyword">this</span>.id = id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>demoMapper.xml</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE mapper  </span></span></span><br><span class="line"><span class="xml">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  </span></span><br><span class="line"><span class="xml">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.yxjn.myapp.dao.DemoDao"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addOne"</span> <span class="attr">parameterType</span>=<span class="string">"com.yxjn.myapp.entity.DemoEntity"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">    &lt;![CDATA[</span></span><br><span class="line"><span class="xml">        insert into demo(name,intro) values(#</span><span class="template-variable">&#123;name&#125;</span><span class="xml">,#</span><span class="template-variable">&#123;intro&#125;</span><span class="xml">)</span></span><br><span class="line"><span class="xml">        ]]&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryList"</span> <span class="attr">resultType</span>=<span class="string">"com.yxjn.myapp.entity.DemoEntity"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        select id,name,intro from demo</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryPage"</span> <span class="attr">resultType</span>=<span class="string">"com.yxjn.myapp.entity.DemoEntity"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        select id,name,intro from demo limit #</span><span class="template-variable">&#123;startNo&#125;</span><span class="xml">,#</span><span class="template-variable">&#123;size&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"count"</span> <span class="attr">resultType</span>=<span class="string">"java.lang.Integer"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        select count(1) from demo</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"addList"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        insert into demo(name,intro) values </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">item</span>=<span class="string">"demo"</span> <span class="attr">separator</span>=<span class="string">","</span>&gt;</span></span></span><br><span class="line"><span class="xml">       (</span></span><br><span class="line"><span class="xml">       #</span><span class="template-variable">&#123;demo.name&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">       ,#</span><span class="template-variable">&#123;demo.intro&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">       )</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"remove"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.String"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        delete from demo where id = #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">"removeIn"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        delete from demo where id in </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">"list"</span> <span class="attr">close</span>=<span class="string">")"</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">item</span>=<span class="string">"id"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"modify"</span> <span class="attr">parameterType</span>=<span class="string">"com.yxjn.myapp.entity.DemoEntity"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        update demo set name=#</span><span class="template-variable">&#123;name&#125;</span><span class="xml">,intro=#</span><span class="template-variable">&#123;intro&#125;</span><span class="xml"> where id=#</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span> </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryOne"</span> <span class="attr">resultType</span>=<span class="string">"com.yxjn.myapp.entity.DemoEntity"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        select id,name,intro from demo where id=#</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>demo.jsp</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@taglib</span> <span class="attr">uri</span>=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> <span class="attr">prefix</span>=<span class="string">"c"</span>%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@page</span> <span class="attr">isELIgnored</span>=<span class="string">"false"</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">c:forEach</span> <span class="attr">var</span>=<span class="string">"demo"</span> <span class="attr">items</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;demos&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>id<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$</span><span class="template-variable">&#123;demo.id&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>name<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$</span><span class="template-variable">&#123;demo.name&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>intro<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">td</span>&gt;</span>$</span><span class="template-variable">&#123;demo.intro&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">c:forEach</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li><p>启动tomcat，就可以调用接口了（包含事务的测试）</p></li><li><p>此时目录如下</p></li></ul><p><img src="/images/springMvc/003-05.png"></p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>006 springMvc数据库mysql的连接和事务配置</title>
      <link href="/2017/06/07/springMvc/006.springMvc%20Mysql%20deploy%20and%20Transactional/"/>
      <url>/2017/06/07/springMvc/006.springMvc%20Mysql%20deploy%20and%20Transactional/</url>
      
        <content type="html"><![CDATA[<ul><li>在 pom.xml 中添加 mysql和mybatis和连接池 的 jar 包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.35<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在resources下新建mybatis.xml</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>  </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span>  </span></span></span><br><span class="line"><span class="xml">    xmlns:tx="http://www.springframework.org/schema/tx"   </span></span><br><span class="line"><span class="xml">    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  </span></span><br><span class="line"><span class="xml">    xmlns:context="http://www.springframework.org/schema/context"  </span></span><br><span class="line"><span class="xml">    xmlns:aop="http://www.springframework.org/schema/aop"   </span></span><br><span class="line"><span class="xml">    xmlns:p="http://www.springframework.org/schema/p"  </span></span><br><span class="line"><span class="xml">    xsi:schemaLocation="http://www.springframework.org/schema/beans   </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/beans/spring-beans.xsd  </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/tx   </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/tx/spring-tx.xsd  </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/context   </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/context/spring-context.xsd  </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/aop  </span></span><br><span class="line"><span class="xml">       http://www.springframework.org/schema/aop/spring-aop.xsd"&gt; </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 引入属性文件 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:spring/jdbc.properties"</span> <span class="attr">ignore-unresolvable</span>=<span class="string">"true"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"dataSource"</span> <span class="attr">class</span> = <span class="string">"com.alibaba.druid.pool.DruidDataSource"</span><span class="attr">destroy-method</span> = <span class="string">"close"</span> &gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 数据库基本信息配置 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"url"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;url&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"username"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;username&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"password"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;password&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"driverClassName"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;driverClassName&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"filters"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;filters&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 最大并发连接数 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"maxActive"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;maxActive&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 初始化连接数量 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"initialSize"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;initialSize&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 配置获取连接等待超时的时间 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"maxWait"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;maxWait&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 最小空闲连接数 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"minIdle"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;minIdle&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"timeBetweenEvictionRunsMillis"</span> <span class="attr">value</span> =<span class="string">"$</span></span></span><span class="template-variable">&#123;timeBetweenEvictionRunsMillis&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 配置一个连接在池中最小生存的时间，单位是毫秒 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"minEvictableIdleTimeMillis"</span> <span class="attr">value</span> =<span class="string">"$</span></span></span><span class="template-variable">&#123;minEvictableIdleTimeMillis&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"validationQuery"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;validationQuery&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"testWhileIdle"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;testWhileIdle&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"testOnBorrow"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;testOnBorrow&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"testOnReturn"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;testOnReturn&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>    </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"maxOpenPreparedStatements"</span> <span class="attr">value</span> =<span class="string">"$</span></span></span><span class="template-variable">&#123;maxOpenPreparedStatements&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 打开 removeAbandoned 功能 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"removeAbandoned"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;removeAbandoned&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 1800 秒，也就是 30 分钟 --&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"removeAbandonedTimeout"</span> <span class="attr">value</span> =<span class="string">"$</span></span></span><span class="template-variable">&#123;removeAbandonedTimeout&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">       <span class="comment">&lt;!-- 关闭 abanded 连接时输出错误日志 --&gt;</span>     </span></span><br><span class="line"><span class="xml">       <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span> = <span class="string">"logAbandoned"</span> <span class="attr">value</span> = <span class="string">"$</span></span></span><span class="template-variable">&#123;logAbandoned&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- myBatis文件 --&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置sqlSessionFactory --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 自动扫描me/gacl/mapping/目录下的所有SQL映射的xml文件, 省掉Configuration.xml里的手工配置</span></span></span><br><span class="line"><span class="xml">        value="classpath:me/gacl/mapping/*.xml"指的是classpath(类路径)下me.gacl.mapping包中的所有xml文件</span></span><br><span class="line"><span class="xml">        UserMapper.xml位于me.gacl.mapping包下，这样UserMapper.xml就可以被自动扫描</span></span><br><span class="line"><span class="xml">         --&gt;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath:mapping/*Mapper.xml"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置扫描器 --&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        <span class="comment">&lt;!-- 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 --&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.yxjn.myapp.dao"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 配置事务管理器 --&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span>  </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 注解方式配置事物 --&gt;</span>  </span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span> /&gt;</span>  </span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>在resources下新建jdbc.properties</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="attr">jdbc:mysql://localhost:3306/demo?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">driverClassName:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">username:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">filters:</span> <span class="string">stat</span></span><br><span class="line"><span class="attr">maxActive:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">initialSize:</span> <span class="number">1</span></span><br><span class="line"><span class="attr">maxWait:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">minIdle:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">maxIdle:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span></span><br><span class="line"><span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span></span><br><span class="line"><span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="string">'x'</span></span><br><span class="line"><span class="attr">testWhileIdle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">testOnBorrow:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">testOnReturn:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">maxOpenPreparedStatements:</span> <span class="number">20</span></span><br><span class="line"><span class="attr">removeAbandoned:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">removeAbandonedTimeout:</span> <span class="number">1800</span></span><br><span class="line"><span class="attr">logAbandoned:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>application-config.xml 中添加配置</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  加载 其他xml文件  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">import</span> <span class="attr">resource</span>=<span class="string">"./mybatis.xml"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ul><li>由于在mybaits.xml中引入了classpath:mapping/*Mapper.xml,所有我们的在resources目录下新建mapping文件夹，并放入一个xml: demoMapper.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper  </span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  </span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.yxjn.myapp.dao.DemoDao"</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>由于在mybaits.xml中引入了com.yxjn.myapp.dao，我们新建dao文件夹</p></li><li><p>web.xml配置文件加载顺序：先web.xml再spring的配置文件，最后mvc的配置文件。</p></li></ul><p>加载顺序：1.web.xml  2.application-config.xml  3.mvc-config.xml。为了能保证事务，我们修改注解生效时间：</p><p>application-config.xml添加service层注解（这个文件引入mybatis事务xml，如要对mybatis进行切面处理，如分页，在引入mybatis.xml前加入才生效）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--由于服务器启动时的加载配置文件的顺序为 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--web.xml-contextConfigLocation(Spring的配置文件)-DispatcherServlet(SpringMVC的配置文件)， --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--错误：由于contextConfigLocation配置文件中Controller会先进行扫描装配， --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--但是此时service还没有进行事务增强处理，得到的将是原样的Service（没有经过事务加强处理，故而没有事务处理能力）  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--所以在contextConfigLocation一定先扫描service: --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--然后在DispatcherServlet再扫描controller: --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--如是没有按照这种扫描顺序，那么可能引起事务失效 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.yxjn.myapp"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">"annotation"</span> <span class="attr">expression</span>=<span class="string">"org.springframework.stereotype.Service"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后mvc-config.xml中的开启注解排除service层（即开启其他所有注解）:</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">context</span>:<span class="keyword">component</span>-scan base-<span class="keyword">package</span>=<span class="string">"com.yxjn.myapp"</span>&gt;</span><br><span class="line">&lt;<span class="keyword">context</span>:exclude-filter <span class="keyword">type</span>=<span class="string">"annotation"</span> expression=<span class="string">"org.springframework.stereotype.Service"</span>/&gt;</span><br><span class="line">&lt;/<span class="keyword">context</span>:<span class="keyword">component</span>-scan&gt;</span><br></pre></td></tr></table></figure><ul><li>这样，我们就配置好数据连接了，启动服务器， 这时我们的文件目录是这样的：</li></ul><p><img src="/images/springMvc/003-04.png"></p><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><ol><li><p>解决数据库连接池连接mysql时，每隔8小时mysql自动断开所有连接的问题：<a href="http://blog.csdn.net/joke124/article/details/51957830" target="_blank" rel="noopener">http://blog.csdn.net/joke124/article/details/51957830</a></p></li><li><p>数据库阿里连接池 druid配置详解：<a href="http://blog.csdn.net/hj7jay/article/details/51686418" target="_blank" rel="noopener">http://blog.csdn.net/hj7jay/article/details/51686418</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>005 springMvc中jsp模板</title>
      <link href="/2017/06/07/springMvc/005.springMvc%20JSP%20Template/"/>
      <url>/2017/06/07/springMvc/005.springMvc%20JSP%20Template/</url>
      
        <content type="html"><![CDATA[<ul><li>在 pom.xml 中添加freemarker的 jar 包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置jsp解析：在 mvc-config.xml 里添加：</li></ul><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean <span class="built_in">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"prefix"</span> value=<span class="string">"/WEB-INF/view/"</span>/&gt;</span><br><span class="line">    &lt;<span class="keyword">property</span> <span class="built_in">name</span>=<span class="string">"suffix"</span> value=<span class="string">".jsp"</span>/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><ul><li>在WEB-INF/view目录下添加 showMessage.jsp 文件，内容：</li></ul><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%@</span> <span class="attr">page</span> <span class="attr">language</span>=<span class="string">"java"</span> <span class="attr">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span> <span class="attr">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span></span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Welcome<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>$</span><span class="template-variable">&#123;message&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ul><li>DemoController.java 中的 添加方法</li></ul><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.yxjn.myapp.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/demo"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/index.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> String index() &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/showMessage.do"</span>)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView showMessage() &#123;</span><br><span class="line"><span class="keyword">final</span> ModelAndView mv = new ModelAndView(<span class="string">"showMessage"</span>);</span><br><span class="line">mv.addObject(<span class="string">"message"</span>, <span class="string">"这是jsp页面的jstl"</span>);</span><br><span class="line"><span class="keyword">return</span> mv;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>部署到tomcat，浏览器 <a href="http://localhost:8080/springMvc1/demo/showMessage.do" target="_blank" rel="noopener">http://localhost:8080/springMvc1/demo/showMessage.do</a> 既可以得到showMessage.jsp的页面</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>004 springMvc中freemarker模板</title>
      <link href="/2017/06/07/springMvc/004.springMvc%20Freemarker%20Template/"/>
      <url>/2017/06/07/springMvc/004.springMvc%20Freemarker%20Template/</url>
      
        <content type="html"><![CDATA[<ul><li>在 pom.xml 中添加freemarker的 jar 包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--freemarker --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.freemarker<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>配置freemarker解析：在 mvc-config.xml 里添加：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 针对freemarker的视图配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"cache"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".ftl"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"contentType"</span> <span class="attr">value</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"requestContextAttribute"</span> <span class="attr">value</span>=<span class="string">"request"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSpringMacroHelpers"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeRequestAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"exposeSessionAttributes"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">&lt;!-- 配置freeMarker的模板路径 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"freemarkerConfig"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"freemarkerSettings"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"tag_syntax"</span>&gt;</span>auto_detect<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"template_update_delay"</span>&gt;</span>5<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"defaultEncoding"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"url_escaping_charset"</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"locale"</span>&gt;</span>zh_CN<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"boolean_format"</span>&gt;</span>true,false<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"datetime_format"</span>&gt;</span>yyyy-MM-dd HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"date_format"</span>&gt;</span>yyyy-MM-dd<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"time_format"</span>&gt;</span>HH:mm:ss<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"number_format"</span>&gt;</span>0.######<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"whitespace_stripping"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"classic_compatible"</span>&gt;</span>true<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--  &lt;prop key="auto_import"&gt;/ftl/tags/index.ftl as p,/ftl/spring.ftl as s&lt;/prop&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"templateLoaderPath"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/view/"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>在WEB-INF/view目录下添加 index.ftl 文件，内容：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">这是首页</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>DemoController.java 中的 @ResponseBody（这个注解可以将返回的Object转为json字符串返回） 删掉</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.yxjn</span><span class="selector-class">.myapp</span><span class="selector-class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.stereotype</span><span class="selector-class">.Controller</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMapping</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Controller</span></span><br><span class="line">@<span class="keyword">RequestMapping</span>("/<span class="keyword">demo</span>")</span><br><span class="line"><span class="keyword">public</span> class DemoController &#123;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">RequestMapping</span>("/<span class="keyword">index</span>.<span class="keyword">do</span>")</span><br><span class="line">public String index() &#123;</span><br><span class="line"><span class="selector-tag">return</span> "<span class="selector-tag">index</span>";</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>部署到tomcat，浏览器 <a href="http://localhost:8080/springMvc1/demo/index.do" target="_blank" rel="noopener">http://localhost:8080/springMvc1/demo/index.do</a> 既可以得到index.ftl的页面</li></ul>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>003 springMvc创建项目和基本架构</title>
      <link href="/2017/06/07/springMvc/003.springMvc%20Create%20Project/"/>
      <url>/2017/06/07/springMvc/003.springMvc%20Create%20Project/</url>
      
        <content type="html"><![CDATA[<ul><li><p>打开sts（ecplise）</p></li><li><p>点击file -&gt; new -&gt; spring Legacy Project(有的工具是spring Project)</p></li></ul><p><img src="/images/springMvc/003-01.png"></p><ul><li>填写项目名称 - 选择 simple spring web maven - 点击finish</li></ul><p><img src="/images/springMvc/003-02.png"></p><ul><li>我们重头开始，搭建我们需要的基本框架，所以删除一下文件</li></ul><p><img src="/images/springMvc/003-03.png"></p><ul><li>运行 </li></ul><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>eclipse:eclipse -Dwtpversion<span class="number">=1</span>.<span class="number">0</span> </span><br><span class="line"><span class="keyword">mvn </span>clean</span><br></pre></td></tr></table></figure><p>生成Wtp插件的web项目可以部署在tomcat</p><ul><li>pom.xml 中添加mvc的jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Spring MVC ，开启&lt;mvc:&gt;,@RequestMapping注解等需要--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--定时任务，ftl的模板路径需要的架包--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context-support<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Spring and Transactions,jsp --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.1.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建 DemoController.java</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.yxjn</span><span class="selector-class">.myapp</span><span class="selector-class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.stereotype</span><span class="selector-class">.Controller</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMapping</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.ResponseBody</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Controller</span></span><br><span class="line">@<span class="keyword">RequestMapping</span>("/<span class="keyword">demo</span>")</span><br><span class="line"><span class="keyword">public</span> class DemoController &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">ResponseBody</span></span><br><span class="line">    @RequestMapping(<span class="string">"/index.do"</span>)</span><br><span class="line">    public String index() &#123;</span><br><span class="line">        <span class="selector-tag">return</span> "<span class="selector-tag">index</span>";</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>以下为自动生成的web.xml</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>springMvc1<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring/application-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/WEB-INF/mvc-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcherServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>为了能解析注解。我们在mvc-config.xml里添加 (com.yxjn.myapp 为我们项目的基础路径)</p><figure class="highlight vhdl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;mvc:annotation-driven /&gt;</span><br><span class="line">&lt;<span class="keyword">context</span>:<span class="keyword">component</span>-scan base-<span class="keyword">package</span>=<span class="string">"com.yxjn.myapp"</span>&gt;&lt;/<span class="keyword">context</span>:<span class="keyword">component</span>-scan&gt;</span><br></pre></td></tr></table></figure><ul><li>好了，至此，我们的基础框架搭建到了，部署到tomcat，运行以下得到页面显示文字：index</li></ul><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhos<span class="variable">t:8080</span>/springMvc1/demo/<span class="built_in">index</span>.<span class="keyword">do</span></span><br></pre></td></tr></table></figure><ul><li>还有一点，一般我们设置编码utf-8，在 web.xml 中</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 解决工程编码过滤器 --&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">init-param</span>&gt;</span>  </span><br><span class="line">           <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span>  </span><br><span class="line">           <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span>  </span><br><span class="line">       <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>  </span><br><span class="line">   <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>这样我们的基本springmvc的web框架就搭建好了，具体后面章节介绍</li></ul><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><ol><li>当项目中maven dependencies 没有出现时 需要 run -&gt; maven -&gt; update project</li></ol>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>001 springcloud简介</title>
      <link href="/2017/06/02/springcloud/001.springcloud%20Introduce/"/>
      <url>/2017/06/02/springcloud/001.springcloud%20Introduce/</url>
      
        <content type="html"><![CDATA[<p>Spring Cloud作为一站式微服务解决方案（其中主要使用了springboot），为开发人员提供了快速构建分布式系统中一些常见模式的工具（例如配置管理，服务发现，断路器，智能路由，微代理，控制总线）。分布式系统的协调导致样板模式，并且使用Spring Cloud开发人员可以快速站起来实施这些模式的服务和应用程序。他们将在任何分布式环境中运行良好，包括开发人员自己的笔记本电脑，裸机数据中心，以及Cloud Foundry等托管平台。</p><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><p>Spring Cloud专注于为典型用例提供良好的开箱即用经验和扩展机制来涵盖他人。</p><ol><li><p>分布式/版本化配置</p></li><li><p>服务注册和发现</p></li><li><p>路由</p></li><li><p>service - to - service调用</p></li><li><p>负载均衡</p></li><li><p>断路器</p></li><li><p>分布式消息传递</p></li></ol><h4 id="与Dubbo的比较："><a href="#与Dubbo的比较：" class="headerlink" title="与Dubbo的比较："></a>与Dubbo的比较：</h4><p>Dubbo，是阿里巴巴服务化治理的核心框架，并被广泛应用于阿里巴巴集团的各成员站点。Dubbo自身只是实现了服务治理的基础，其他为保证集群安全、可维护、可测试等特性方面都没有很好的实现，但是几乎大部分关键组件都能找到第三方开源来实现，这些组件主要来自于国内各家大型互联网企业的开源产品。文档在国内很健全，讲解也很深入，但是由于相对稳定，社区活跃度较低。（Dubbo_<a href="https://github.com/dubbo" target="_blank" rel="noopener">https://github.com/dubbo</a> ）。Dubbo的服务调用是通过RPC实现的。</p><p>Spring Cloud，从命名我们就可以知道，它是Spring Source的产物，Spring社区的强大背书可以说是Java企业界最有影响力的组织了，除了Spring Source之外，还有Pivotal和Netfix是其强大的后盾与技术输出。其中Netflix开源的整套微服务架构套件是Spring Cloud的核心。Spring Cloud分别覆盖了微服务架构下的方方面面。文档贫乏，不是很多，近年的较快发展，使得社区活跃度较为频繁。（Spring Cloud_<a href="https://github.com/spring-cloud" target="_blank" rel="noopener">https://github.com/spring-cloud</a> ）。Springcloud的服务调用是通过restful实现的。</p>]]></content>
      
      
      <categories>
          
          <category> springcloud </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>001 springboot简介</title>
      <link href="/2017/06/02/springboot/001.springboot%20Introduce/"/>
      <url>/2017/06/02/springboot/001.springboot%20Introduce/</url>
      
        <content type="html"><![CDATA[<p>Spring Boot是由Pivotal团队提供的全新框架（主要是针对微服务），其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域（rapid application development）成为领导者。</p><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><ol><li><p>创建独立的Spring应用程序</p></li><li><p>嵌入的Tomcat，无需部署WAR文件</p></li><li><p>简化Maven配置</p></li><li><p>自动配置Spring</p></li><li><p>提供生产就绪型功能，如指标，健康检查和外部配置</p></li><li><p>绝对没有代码生成和对XML没有要求配置(最好零xml化)</p></li></ol><p>优点：</p><p>SpringBoot帮助开发者快速搭建Spring框架；SpringBoot帮助开发者快速启动一个Web容器；SpringBoot继承了原有Spring框架的优秀基因；SpringBoot简化了使用Spring的过程。（Spring由于其繁琐的配置，一度被人认为“配置地狱”，各种XML、Annotation配置，让人眼花缭乱，而且如果出错了也很难找出原因。Spring Boot更多的是采用Java Config的方式，对Spring进行配置）</p><p>缺点：</p><p>Spring Boot作为一个微框架，离微服务的实现还是有距离的。没有提供相应的服务发现和注册的配套功能，自身的acturator所提供的监控功能，也需要与现有的监控对接。没有配套的安全管控方案，对于REST的落地，还需要自行结合实际进行URI的规范化工作。</p><h5 id="此次开发基于以下环境："><a href="#此次开发基于以下环境：" class="headerlink" title="此次开发基于以下环境："></a>此次开发基于以下环境：</h5><p>sts 3.9.2.RELEASE</p><p>jdk8 </p><p>springboot 2.0.1</p>]]></content>
      
      
      <categories>
          
          <category> springboot </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>tomcat7双向认证</title>
      <link href="/2017/05/15/other/tomcat_ssl%20install/"/>
      <url>/2017/05/15/other/tomcat_ssl%20install/</url>
      
        <content type="html"><![CDATA[<p>转载改编自：</p><p><a href="http://blog.csdn.net/qlp3643_1/article/details/42555875" target="_blank" rel="noopener">http://blog.csdn.net/qlp3643_1/article/details/42555875</a><br><a href="http://blog.csdn.net/kissliux/article/details/17392003" target="_blank" rel="noopener">http://blog.csdn.net/kissliux/article/details/17392003</a></p><p>####开始</p><ul><li><p>自己安装jdk</p></li><li><p>生成服务器端证书：</p></li></ul><p>生成证书的部分命令：</p><table><thead><tr><th>命令</th><th>意义</th></tr></thead><tbody><tr><td>-genkey</td><td>表示要创建一个新的密钥</td></tr><tr><td>-dname</td><td>表示密钥的Distinguished Names</td></tr><tr><td>CN</td><td>commonName</td></tr><tr><td>OU</td><td>organizationUnit</td></tr><tr><td>O</td><td>organizationName</td></tr><tr><td>L</td><td>localityName</td></tr><tr><td>S</td><td>stateName</td></tr><tr><td>C</td><td>country</td></tr><tr><td>Distinguished Names</td><td>表明了密钥的发行者身份</td></tr><tr><td>-keyalg</td><td>使用加密的算法，这里是RSA</td></tr><tr><td>-alias</td><td>密钥的别名</td></tr><tr><td>-keypass</td><td>私有密钥的密码，这里设置为changeit</td></tr><tr><td>-keystore</td><td>密钥保存在目录下的mykeystore文件中</td></tr><tr><td>-storepass</td><td>存取密码，这个密码提供系统从mykeystore文件中将信息取出</td></tr><tr><td>-validity</td><td>该密钥的有效期为 36500表示100年 (默认为90天)</td></tr></tbody></table><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -keyalg RSA -dname <span class="string">"cn=localhost,ou=sango,o=none,l=china,st=beijing,c=cn"</span> -alias<span class="built_in"> server </span>-keypass password -keystore server.jks -storepass password -validity 3650</span><br></pre></td></tr></table></figure><ul><li>生成客户端证书(客户端的CN可以是任意值。 )</li></ul><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">keytool</span> -genkey -keyalg <span class="type">RSA</span> -dname <span class="string">"cn=sango,ou=sango,o=none,l=china,st=beijing,c=cn"</span> -<span class="keyword">alias</span> custom -store<span class="keyword">type</span> <span class="type">PKCS12</span> -keypass password -keystore custom.p12 -storepass password -validity 3650</span><br></pre></td></tr></table></figure><ul><li>由于是双向SSL认证，服务器必须要信任客户端证书，因此，必须把客户端证书添加为服务器的信任认证。由于不能直接将PKCS12格式的证书库导入，我们必须先把客户端证书导出为一个单独的CER文件，使用如下命令，先把客户端证书导出为一个单独的cer文件：</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -export -alias custom -file custom<span class="selector-class">.cer</span> -keystore custom<span class="selector-class">.p12</span> -storepass password -storetype PKCS12 -rfc</span><br></pre></td></tr></table></figure><ul><li>然后，添加客户端证书到服务器中（将已签名数字证书导入密钥库</li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -import -v -alias custom -file custom<span class="selector-class">.cer</span> -keystore server<span class="selector-class">.jks</span> -storepass password</span><br></pre></td></tr></table></figure><ul><li>查看证书内容 </li></ul><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">keytool -list -v -keystore server<span class="selector-class">.jks</span> -storepass password</span><br></pre></td></tr></table></figure><ul><li>配置tomcat service.xml文件</li></ul><p>Xml代码 (clientAuth=”true”表示双向认证)</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8443"</span> <span class="attribute">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attribute">SSLEnabled</span>=<span class="string">"true"</span> </span><br><span class="line"><span class="attribute">maxThreads</span>=<span class="string">"150"</span> <span class="attribute">scheme</span>=<span class="string">"https"</span> <span class="attribute">secure</span>=<span class="string">"true"</span> </span><br><span class="line"><span class="attribute">clientAuth</span>=<span class="string">"true"</span> <span class="attribute">sslProtocol</span>=<span class="string">"TLS"</span> </span><br><span class="line"><span class="attribute">keystoreFile</span>=<span class="string">"D:/server.jks"</span> <span class="attribute">keystorePass</span>=<span class="string">"password"</span> </span><br><span class="line"><span class="attribute">truststoreFile</span>=<span class="string">"D:/server.jks"</span> <span class="attribute">truststorePass</span>=<span class="string">"password"</span> </span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p><connector>配置里的一些属性参数如下表：</connector></p><table><thead><tr><th>命令</th><th>意义</th></tr></thead><tbody><tr><td>clientAuth</td><td>如果设为true，表示Tomcat要求所有的SSL客户出示安全证书，对SSL客户进行身份验证</td></tr><tr><td>keystoreFile</td><td>指定keystore文件的存放位置，可以指定绝对路径，也可以指定相对于&lt;CATALINA_HOME&gt; （Tomcat安装目录）环境变量的相对路径。如果此项没有设定，默认情况下，Tomcat将从当前操作系统用户的用户目录下读取名为 “.keystore”的文件。</td></tr><tr><td>keystorePass</td><td>指定keystore的密码，如果此项没有设定，在默认情况下，Tomcat将使用“changeit”作为默认密码。</td></tr><tr><td>sslProtocol</td><td>指定套接字（Socket）使用的加密/解密协议，默认值为TLS，用户不应该修改这个默认值。</td></tr><tr><td>ciphers</td><td>指定套接字可用的用于加密的密码清单，多个密码间以逗号（,）分隔。如果此项没有设定，在默认情况下，套接字可以使用任意一个可用的密码。</td></tr></tbody></table><ul><li>导入客户端证书到浏览器</li></ul><p>双向认证需要强制验证客户端证书。双击“custom.p12”即可将证书导入至IE</p><ul><li>java代码实现</li></ul><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">DefaultHttpClient httpclient = new DefaultHttpClient()<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">KeyStore trustStore = KeyStore.getInstance(KeyStore.getDefaultType())<span class="comment">; </span></span><br><span class="line">FileInputStream <span class="keyword">instream </span>= new FileInputStream(new File(<span class="string">"D:/server.jks"</span>))<span class="comment">;</span></span><br><span class="line">try &#123;</span><br><span class="line">trustStore.load(<span class="keyword">instream, </span><span class="string">"password"</span>.toCharArray())<span class="comment">;</span></span><br><span class="line">&#125; finally &#123;</span><br><span class="line"><span class="keyword">instream.close();</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">SSLSocketFactory </span>socketFactory = new SSLSocketFactory(trustStore,<span class="string">"password"</span>,trustStore)<span class="comment">;</span></span><br><span class="line"><span class="keyword">Scheme </span><span class="keyword">sch </span>= new <span class="keyword">Scheme("https", </span>socketFactory, <span class="number">443</span>)<span class="comment">;</span></span><br><span class="line">httpclient.getConnectionManager().getSchemeRegistry().register(<span class="keyword">sch);</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">HttpGet </span>httpget = new HttpGet(<span class="string">"https://localhost:8443/"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"executing request"</span> + httpget.getRequestLine())<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">HttpResponse response = httpclient.execute(httpget)<span class="comment">;</span></span><br><span class="line">HttpEntity entity = response.getEntity()<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"----------------------------------------"</span>)<span class="comment">;</span></span><br><span class="line">System.out.println(response.getStatusLine())<span class="comment">;</span></span><br><span class="line">if (entity != null) &#123;</span><br><span class="line">System.out.println(<span class="string">"Response content length: "</span> + entity.getContentLength())<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">if (entity != null) &#123;</span><br><span class="line">entity.consumeContent()<span class="comment">;</span></span><br><span class="line">&#125;</span><br><span class="line">httpclient.getConnectionManager().<span class="keyword">shutdown();</span></span><br></pre></td></tr></table></figure><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>1.Tomcat SSL配置 Connector attribute SSLCertificateFile must be defined when using SSL with APR解决</p><ul><li>Tomcat提供了两个SSL实现，一个是JSSE实现，另一个是APR实现。</li><li>Tomcat将自动选择使用哪个实现，即如果安装了APR则自动选择APR，否则选择JSSE。</li><li>如果不希望让Tomcat自动选择，而是我们自己指定一个实现则可通过protocol定义，如下：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">protocol</span>=<span class="string">"..."</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>APR是什么文件？后来才发现APR文件名为tcnative-1.dll。进一步检查tomcat6.0和7.0的安装目录，结果发现6.0里没这个dll文件，而7.0里有。换句话说，6.0默认使用JSSE实现，而7.0默认使用APR实现。</p><p>弄明白缘由就好办了。由于习惯使用6.0的配置方式（即JSEE实现），因此只要把上面conf\server.xml里的protocol修改一下就行了：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8443"</span> <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11Protocol"</span> <span class="attribute">SSLEnabled</span>=<span class="string">"true"</span></span><br><span class="line">               <span class="attribute">maxThreads</span>=<span class="string">"150"</span> <span class="attribute">scheme</span>=<span class="string">"https"</span> <span class="attribute">secure</span>=<span class="string">"true"</span></span><br><span class="line">               <span class="attribute">clientAuth</span>=<span class="string">"false"</span> <span class="attribute">sslProtocol</span>=<span class="string">"TLS"</span></span><br><span class="line">               <span class="attribute">keystoreFile</span>=<span class="string">"<span class="variable">$&#123;user.home&#125;</span>/.keystore"</span></span><br><span class="line">               <span class="attribute">keystorePass</span>=<span class="string">"changeit"</span> /&gt;</span><br></pre></td></tr></table></figure><p> 重新启动，一切正常。</p><p>2.实现http向https的自动跳转</p><p>在tomcat的/conf/web.xml文件后面加上这样一段</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">login-config</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- Authorization setting for SSL --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">auth-method</span>&gt;</span>CLIENT-CERT<span class="tag">&lt;/<span class="name">auth-method</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">realm-name</span>&gt;</span>Client Cert Users-only Area<span class="tag">&lt;/<span class="name">realm-name</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">login-config</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">security-constraint</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- Authorization setting for SSL --&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">web-resource-collection</span> &gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">web-resource-name</span> &gt;</span>SSL<span class="tag">&lt;/<span class="name">web-resource-name</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">web-resource-collection</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">user-data-constraint</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">transport-guarantee</span>&gt;</span>CONFIDENTIAL<span class="tag">&lt;/<span class="name">transport-guarantee</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">user-data-constraint</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">security-constraint</span>&gt;</span></span><br></pre></td></tr></table></figure><p>重新启动即可</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git忽略文件记录(java)</title>
      <link href="/2017/05/15/other/git%20ignore%20files(java)/"/>
      <url>/2017/05/15/other/git%20ignore%20files(java)/</url>
      
        <content type="html"><![CDATA[<p>后期需要忽略的自行添加</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">## git ignore file  #</span><br><span class="line">#######################</span><br><span class="line">*.<span class="keyword">class</span></span><br><span class="line">*<span class="number">.7</span>z</span><br><span class="line">*.dmg</span><br><span class="line">*.gz</span><br><span class="line">*.iso</span><br><span class="line">*.jar</span><br><span class="line">*.rar</span><br><span class="line">*.tar</span><br><span class="line">*.zip</span><br><span class="line">*.log</span><br><span class="line">*.classpath</span><br><span class="line">*.project</span><br><span class="line">*.prefs</span><br><span class="line">*.springBeans</span><br><span class="line">*.war</span><br><span class="line">*.gitignore</span><br><span class="line">*.pmd</span><br><span class="line"></span><br><span class="line">#  ignore folder   #</span><br><span class="line">###################</span><br><span class="line">target/</span><br><span class="line">.settings/</span><br><span class="line">test-output/</span><br><span class="line">.clover/</span><br><span class="line"></span><br><span class="line">sh.exe.stackdump</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>006 mongodb-JDBC方式访问</title>
      <link href="/2017/05/11/mongodb/006%20mongodb-JDBC/"/>
      <url>/2017/05/11/mongodb/006%20mongodb-JDBC/</url>
      
        <content type="html"><![CDATA[<h3 id="mongodb-JDBC方式访问"><a href="#mongodb-JDBC方式访问" class="headerlink" title="mongodb-JDBC方式访问"></a>mongodb-JDBC方式访问</h3><p>参考：<a href="https://github.com/erh/mongo-jdbc/tree/f03cd3716dce88624cfc87a3c5a04ae19cbee3c5" target="_blank" rel="noopener">https://github.com/erh/mongo-jdbc/tree/f03cd3716dce88624cfc87a3c5a04ae19cbee3c5</a></p><p>pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-simple<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mongodb<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mongo-java-driver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">      <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>net.sf.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">type</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以连接多个mongos实现分布式，main方法</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package com.mongodb.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> void <span class="built_in">print</span>(<span class="keyword">final</span> <span class="type">String</span> name, <span class="keyword">final</span> <span class="type">ResultSet</span> rs) <span class="keyword">throws</span> <span class="type">SQLException</span> &#123;</span><br><span class="line">        <span class="type">System</span>.out.<span class="built_in">println</span>(name);</span><br><span class="line">        <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">            <span class="type">System</span>.out.<span class="built_in">println</span>(</span><br><span class="line">                    <span class="string">"\t"</span> + rs.getString(<span class="string">"name"</span>) +</span><br><span class="line">                    <span class="string">"\t"</span> + rs.getInt(<span class="string">"age"</span>) +</span><br><span class="line">                    <span class="string">"\t"</span> + rs.getObject(<span class="number">0</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">final</span> <span class="type">String</span> args[]) <span class="keyword">throws</span> <span class="type">SQLException</span>, <span class="type">ClassNotFoundException</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Class</span>.forName(<span class="string">"com.mongodb.jdbc.MongoDriver"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// The format of the URI is:</span></span><br><span class="line">        <span class="comment">// jdbc:mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]</span></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Connection</span> <span class="built_in">c</span> = <span class="type">DriverManager</span>.getConnection(<span class="string">"jdbc:mongodb://10.139.8.207:27031,10.139.8.207:27032/diameter_test"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Statement</span> stmt = <span class="built_in">c</span>.createStatement();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// drop old table</span></span><br><span class="line">        stmt.executeUpdate(<span class="string">"DROP TABLE people"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// insert some data</span></span><br><span class="line">        stmt.executeUpdate(<span class="string">"INSERT INTO people (name, age) VALUES ('Eliot' , 30)"</span>);</span><br><span class="line">        stmt.executeUpdate(<span class="string">"INSERT INTO people (name, age) VALUES ('Sara'  , 12)"</span>);</span><br><span class="line">        stmt.executeUpdate(<span class="string">"INSERT INTO people (name, age) VALUES ('Jaime' , 28)"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">String</span> baseSQL = <span class="string">"SELECT name, age FROM people"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// query</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"not sorted"</span>, stmt.executeQuery(baseSQL));</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"where"</span>, stmt.executeQuery(baseSQL + <span class="string">" WHERE name = 'Eliot'"</span>));</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"sorted by age"</span>, stmt.executeQuery(baseSQL + <span class="string">" ORDER BY age"</span>));</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"sorted by age desc"</span>, stmt.executeQuery(baseSQL + <span class="string">" ORDER BY age DESC LIMIT 2,1"</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// update</span></span><br><span class="line">        stmt.executeUpdate(<span class="string">"UPDATE people SET age = 32 WHERE name = 'Jaime'"</span>);</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"after update"</span>, stmt.executeQuery(baseSQL + <span class="string">" ORDER BY age DESC"</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一些JDBC实现等具体见压缩包</p><p><a href="/images/mongodb/mongoJdbc.zip" target="_blank">mongoJdbc.zip</a></p><p>注要支持中文解析：jar换成</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.jsqlparser<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsqlparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文件改成</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Copyright 2017 Carlos Tse &lt;copperoxide@gmail.com&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Licensed under the Apache License, Version 2.0 (the "License");</span></span><br><span class="line"><span class="comment"> * you may not use this file except in compliance with the License.</span></span><br><span class="line"><span class="comment"> * You may obtain a copy of the License at</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *     http://www.apache.org/licenses/LICENSE-2.0</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Unless required by applicable law or agreed to in writing, software</span></span><br><span class="line"><span class="comment"> * distributed under the License is distributed on an "AS IS" BASIS,</span></span><br><span class="line"><span class="comment"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span></span><br><span class="line"><span class="comment"> * See the License for the specific language governing permissions and</span></span><br><span class="line"><span class="comment"> * limitations under the License.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.mongodb.jdbc;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mongodb.BasicDBObject;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.DB;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.DBCollection;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.DBCursor;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.DBObject;</span><br><span class="line"><span class="keyword">import</span> com.mongodb.WriteResult;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.DoubleValue;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.Expression;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.Function;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.JdbcParameter;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.LongValue;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.NullValue;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.StringValue;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.operators.relational.EqualsTo;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.expression.operators.relational.ExpressionList;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.parser.CCJSqlParserManager;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.schema.Column;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.schema.<span class="keyword">Table</span>;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.Statement;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.drop.Drop;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.insert.Insert;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.AllColumns;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.Limit;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.OrderByElement;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.PlainSelect;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.Select;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.SelectExpressionItem;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.select.SelectItem;</span><br><span class="line"><span class="keyword">import</span> net.sf.jsqlparser.statement.update.Update;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> java.io.StringReader;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class Executor &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(Executor.class);</span><br><span class="line"></span><br><span class="line">    Executor(<span class="keyword">final</span> DB db, <span class="keyword">final</span> <span class="keyword">String</span> sql) <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line">        <span class="keyword">this</span>.db = db;</span><br><span class="line">        statement = parse(sql);</span><br><span class="line">        logger.trace(sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> DB db;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Statement statement;</span><br><span class="line">    <span class="keyword">private</span> List params;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> pos;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> setParams(<span class="keyword">final</span> List params) &#123;</span><br><span class="line">        pos = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">this</span>.params = params;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    DBCursor query() <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line">        <span class="keyword">if</span> (!(statement <span class="keyword">instanceof</span> Select)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"not a query sql statement"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Select select = (Select) statement;</span><br><span class="line">        <span class="keyword">if</span> (!(select.getSelectBody() <span class="keyword">instanceof</span> PlainSelect)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can only handle PlainSelect so far"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> PlainSelect ps = (PlainSelect) select.getSelectBody();</span><br><span class="line">        <span class="keyword">if</span> (!(ps.getFromItem() <span class="keyword">instanceof</span> <span class="keyword">Table</span>)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can only handle regular tables"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DBCollection coll = getCollection((<span class="keyword">Table</span>) ps.getFromItem());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// fields</span></span><br><span class="line">        <span class="keyword">final</span> BasicDBObject fields = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">Object</span> o : ps.getSelectItems()) &#123;</span><br><span class="line">            <span class="keyword">final</span> SelectItem si = (SelectItem) o;</span><br><span class="line">            <span class="keyword">if</span> (si <span class="keyword">instanceof</span> AllColumns) &#123;</span><br><span class="line">                <span class="keyword">if</span> (fields.<span class="built_in">size</span>() &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can't have * and fields"</span>);</span><br><span class="line">&#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (si <span class="keyword">instanceof</span> SelectExpressionItem) &#123;</span><br><span class="line">                <span class="keyword">final</span> SelectExpressionItem sei = (SelectExpressionItem) si;</span><br><span class="line">                fields.put(toFieldName(sei.getExpression()), <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"unknown select item: "</span> + si.getClass());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// where</span></span><br><span class="line">        <span class="keyword">final</span> DBObject query = parseWhere(ps.getWhere());</span><br><span class="line"></span><br><span class="line">        logger.trace(<span class="string">"table: "</span> + coll);</span><br><span class="line">        logger.trace(<span class="string">"fields: "</span> + fields);</span><br><span class="line">        logger.trace(<span class="string">"query: "</span> + query);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// done with basics, build DBCursor</span></span><br><span class="line">        <span class="keyword">final</span> DBCursor c = coll.find(query, fields);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// limit</span></span><br><span class="line">        <span class="keyword">final</span> Limit limit = ps.getLimit();</span><br><span class="line">        <span class="keyword">if</span> (limit != <span class="keyword">null</span>) &#123;</span><br><span class="line">            c.limit(Integer.parseInt(limit.getRowCount().toString())).skip(Integer.parseInt(limit.getOffset().toString()));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// order by</span></span><br><span class="line">        <span class="keyword">final</span> List orderBylist = ps.getOrderByElements();</span><br><span class="line">        <span class="keyword">if</span> (orderBylist != <span class="keyword">null</span> &amp;&amp; orderBylist.<span class="built_in">size</span>() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">final</span> BasicDBObject order = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">Object</span> orderBy: orderBylist) &#123;</span><br><span class="line">                <span class="keyword">final</span> OrderByElement o = (OrderByElement)orderBy;</span><br><span class="line">                <span class="keyword">final</span> Column col = (Column)o.getExpression();</span><br><span class="line">                order.put(col.getColumnName(), o.isAsc() ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            c.<span class="built_in">sort</span>(order);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> writeop() <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> Insert) &#123;</span><br><span class="line"><span class="keyword">return</span> insert((Insert) statement);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> Update) &#123;</span><br><span class="line"><span class="keyword">return</span> update((Update) statement);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (statement <span class="keyword">instanceof</span> Drop) &#123;</span><br><span class="line"><span class="keyword">return</span> drop((Drop) statement);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"unknown write: "</span> + statement.getClass());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> insert(<span class="keyword">final</span> Insert in) <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (in.getColumns() == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MongoSQLException.BadSQL(<span class="string">"have to give column names to insert"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DBCollection coll = getCollection(in.getTable());</span><br><span class="line">        logger.trace(<span class="string">"insert table: "</span> + coll);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!(in.getItemsList() <span class="keyword">instanceof</span> ExpressionList)) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"need ExpressionList"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BasicDBObject o = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> List valueList = ((ExpressionList) in.getItemsList()).getExpressions();</span><br><span class="line">        <span class="keyword">if</span> (in.getColumns().<span class="built_in">size</span>() != valueList.<span class="built_in">size</span>()) &#123;</span><br><span class="line"><span class="keyword">throw</span> <span class="keyword">new</span> MongoSQLException.BadSQL(<span class="string">"number of values and columns have to match"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; valueList.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            o.put(in.getColumns().<span class="built_in">get</span>(i).toString(), toConstant((Expression) valueList.<span class="built_in">get</span>(i)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> WriteResult result = coll.insert(o);</span><br><span class="line">        <span class="keyword">return</span> result == <span class="keyword">null</span>? <span class="number">0</span> : result.getN();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> update(<span class="keyword">final</span> Update up) <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DBObject query = parseWhere(up.getWhere());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BasicDBObject <span class="built_in">set</span> = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; up.getColumns().<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> k = up.getColumns().<span class="built_in">get</span>(i).toString();</span><br><span class="line">            <span class="keyword">final</span> Expression v = (up.getExpressions().<span class="built_in">get</span>(i));</span><br><span class="line">            <span class="built_in">set</span>.put(k.toString(), toConstant(v));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DBObject mod = <span class="keyword">new</span> BasicDBObject(<span class="string">"$set"</span>, <span class="built_in">set</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> DBCollection coll = getCollection(up.getTables().<span class="built_in">get</span>(<span class="number">0</span>));</span><br><span class="line">        <span class="keyword">final</span> WriteResult result = coll.update(query, mod);</span><br><span class="line">        <span class="keyword">return</span> result == <span class="keyword">null</span>? <span class="number">0</span> : result.getN();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> drop(<span class="keyword">final</span> Drop d) &#123;</span><br><span class="line">        db.getCollection(d.getName().getName()).drop();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ---- helpers -----</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">String</span> toFieldName(<span class="keyword">final</span> Expression e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> StringValue) &#123;</span><br><span class="line"><span class="keyword">return</span> e.toString();</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Column) &#123;</span><br><span class="line"><span class="keyword">return</span> e.toString();</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can't turn ["</span> + e + <span class="string">"] "</span> + e.getClass() + <span class="string">" into field name"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Object</span> toConstant(<span class="keyword">final</span> Expression e) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> StringValue) &#123;</span><br><span class="line"><span class="keyword">return</span> ((StringValue) e).getValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> DoubleValue) &#123;</span><br><span class="line"><span class="keyword">return</span> ((DoubleValue) e).getValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> LongValue) &#123;</span><br><span class="line"><span class="keyword">return</span> ((LongValue) e).getValue();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> NullValue) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> JdbcParameter) &#123;</span><br><span class="line"><span class="keyword">return</span> params.<span class="built_in">get</span>(pos++);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> Function) &#123;</span><br><span class="line"><span class="keyword">return</span> e;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can't turn ["</span> + e + <span class="string">"] "</span> + e.getClass().getName() + <span class="string">" into constant "</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    DBObject parseWhere(<span class="keyword">final</span> Expression e) &#123;</span><br><span class="line">        <span class="keyword">final</span> BasicDBObject o = <span class="keyword">new</span> BasicDBObject();</span><br><span class="line">        <span class="keyword">if</span> (e == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> o;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (e <span class="keyword">instanceof</span> EqualsTo) &#123;</span><br><span class="line">            <span class="keyword">final</span> EqualsTo eq = (EqualsTo) e;</span><br><span class="line">            o.put(toFieldName(eq.getLeftExpression()), toConstant(eq.getRightExpression()));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"can't handle: "</span> + e.getClass() + <span class="string">" yet"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> o;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Statement parse(<span class="keyword">String</span> s) <span class="keyword">throws</span> MongoSQLException &#123;</span><br><span class="line">        s = s.<span class="built_in">trim</span>();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="keyword">new</span> CCJSqlParserManager()).parse(<span class="keyword">new</span> StringReader(s));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> MongoSQLException.BadSQL(s);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ----</span></span><br><span class="line"></span><br><span class="line">    DBCollection getCollection(<span class="keyword">final</span> <span class="keyword">Table</span> t) &#123;</span><br><span class="line">        <span class="keyword">return</span> db.getCollection(t.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>005 springMVC配置mongodb-template方式访问</title>
      <link href="/2017/05/11/mongodb/005%20mongodb-mongoTemplate/"/>
      <url>/2017/05/11/mongodb/005%20mongodb-mongoTemplate/</url>
      
        <content type="html"><![CDATA[<p>###springMVC配置mongodb</p><h4 id="mongodb-简介"><a href="#mongodb-简介" class="headerlink" title="mongodb 简介"></a>mongodb 简介</h4><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。<br>在高负载的情况下，添加更多的节点，可以保证服务器性能。<br>MongoDB 旨在为WEB应用提供可扩展的高性能数据存储解决方案。<br>MongoDB 将数据存储为一个文档，数据结构由键值(key=&gt;value)对组成。MongoDB 文档类似于 JSON 对象。字段值可以包含其他文档，数组及文档数组。</p><h4 id="mongodb-单机安装"><a href="#mongodb-单机安装" class="headerlink" title="mongodb 单机安装"></a>mongodb 单机安装</h4><p>参考链接</p><pre><code>http://www.runoob.com/mongodb/mongodb-window-install.html</code></pre><h4 id="mongodb-设置用户密码"><a href="#mongodb-设置用户密码" class="headerlink" title="mongodb 设置用户密码"></a>mongodb 设置用户密码</h4><p>参考链接</p><pre><code>http://www.cnblogs.com/itxiongwei/p/5520863.html</code></pre><h4 id="mongodb-集群的三种方式"><a href="#mongodb-集群的三种方式" class="headerlink" title="mongodb 集群的三种方式"></a>mongodb 集群的三种方式</h4><p>参考链接</p><pre><code>http://blog.csdn.net/luonanqin/article/details/8497860</code></pre><h4 id="mongodb-集群设置用户密码"><a href="#mongodb-集群设置用户密码" class="headerlink" title="mongodb 集群设置用户密码"></a>mongodb 集群设置用户密码</h4><p>参考链接</p><pre><code>http://blog.csdn.net/monkey_four/article/details/50854410</code></pre><h4 id="mongodb-Java编写"><a href="#mongodb-Java编写" class="headerlink" title="mongodb Java编写"></a>mongodb Java编写</h4><ul><li>配置</li></ul><p>注：spring-data-mongodb1.6以上的版本需要配置的spring的版本需要4.0以上，否则报错java.lang.NoClassDefFoundError: org/springframework/objenesis/ObjenesisStd。所以我们这边引入1.5.6.RELEASE版本。</p><p>pom.xml添加如下架包：</p><pre><code>&lt;dependency&gt;    &lt;groupId&gt;org.mongodb&lt;/groupId&gt;    &lt;artifactId&gt;mongo-java-driver&lt;/artifactId&gt;    &lt;version&gt;3.4.2&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;    &lt;artifactId&gt;spring-data-mongodb&lt;/artifactId&gt;    &lt;version&gt;1.5.6.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;    &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;    &lt;artifactId&gt;spring-data-mongodb-cross-store&lt;/artifactId&gt;    &lt;version&gt;1.5.6.RELEASE&lt;/version&gt;&lt;/dependency&gt;&lt;dependency&gt;   &lt;groupId&gt;org.springframework.data&lt;/groupId&gt;   &lt;artifactId&gt;spring-data-mongodb-log4j&lt;/artifactId&gt;   &lt;version&gt;1.5.6.RELEASE&lt;/version&gt;&lt;/dependency&gt;</code></pre><p>添加配置文件如下：</p><pre>import java.util.ArrayList;import java.util.List;import org.apache.log4j.Logger;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.data.mongodb.MongoDbFactory;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.data.mongodb.core.SimpleMongoDbFactory;import com.mongodb.MongoClient;import com.mongodb.MongoCredential;import com.mongodb.ServerAddress;@Configurationpublic class MongoConfiguration {    private static final Logger logger=Logger.getLogger(MongoConfiguration.class);    /**     * mongodb节点1的ip     */    @Value("192.168.2.2")    private String ip1;    /**     * mongodb节点1的端口     */    @Value("27017")    private int port1;    /**     * 数据库     */    @Value("mytest")    private String db;    /**     * mongodb用户名     */    @Value("root")    private String userName;    /**     * mongodb密码     */    @Value("root")    private String password;    @SuppressWarnings("resource")    public @Bean MongoDbFactory mongoDbFactory() {        logger.info("连接mongodb数据库...");        final List<serveraddress> addrs = new ArrayList<serveraddress>();        //ServerAddress()两个参数分别为 服务器地址 和 端口        final ServerAddress serverAddress = new ServerAddress(ip1, port1);        addrs.add(serverAddress);        final List<mongocredential> credentials = new ArrayList<mongocredential>();        //MongoCredential.createScramSha1Credential()三个参数分别为 用户名 数据库名称 密码        final MongoCredential credential = MongoCredential.createScramSha1Credential(userName, db, password.toCharArray());        credentials.add(credential);        //通过连接认证获取MongoDB连接        final MongoClient mongoClient = new MongoClient(addrs,credentials);        return new SimpleMongoDbFactory(mongoClient, db);    }    public @Bean MongoTemplate mongoTemplate() {        return new MongoTemplate(mongoDbFactory());    }}</mongocredential></mongocredential></serveraddress></serveraddress></pre>这里是否需要加异常捕捉？<pre>try {    //通过连接认证获取MongoDB连接    final MongoClient mongoClient = new MongoClient(addrs,credentials);           return new SimpleMongoDbFactory(mongoClient, db);} catch (final Exception e) {        throw e;}</pre><p>好了，至此配置mongodb完成了。这里没有自定义任何配置参数，均使用默认。如需要，可在构造函数里设置第三个参数。</p><pre><code>new MongoClient(List&lt;ServerAddress&gt;, List&lt;MongoCredential&gt;, MongoClientOptions);</code></pre><p>参数详细设置可参考网址：</p><pre><code>http://blog.csdn.net/qazwsx081/article/details/50924352</code></pre><ul><li>代码使用</li></ul><p>1.实体注解</p><p>@Document(collection=”tableName”)，表名，默认实体名</p><p>@Id，主键，标注后自动生成唯一键</p><p>@Indexed，生成索引</p><p>…</p><p>2.注入MongoTemplate，这里使用到了连接池</p><pre><code>@Resourceprivate MongoTemplate template;</code></pre><p>3.使用MongoTemplate操作mongodb</p><p>api网址如下：</p><pre><code>http://docs.spring.io/spring-data/mongodb/docs/current/api/org/springframework/data/mongodb/core/MongoTemplate.html</code></pre><p>4.使用特定项目封装的client</p><p>针对以下代码不满足的自己封装进这里，这里是否需要抛出异常？TODO</p><pre>import java.util.ArrayList;import java.util.List;import java.util.Map;import java.util.Map.Entry;import java.util.Set;import javax.annotation.Resource;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.data.mongodb.core.MongoTemplate;import org.springframework.data.mongodb.core.query.Criteria;import org.springframework.data.mongodb.core.query.Query;import org.springframework.data.mongodb.core.query.Update;import org.springframework.stereotype.Component;import org.springframework.util.CollectionUtils;import com.mongodb.WriteResult;@Componentpublic class MongoClient {    private static final Logger LOGGER = LoggerFactory.getLogger(MongoClient.class);    /**     * 注入mongodb连接池的template     */    @Resource    private MongoTemplate template;    /**     * 包含@Id的主键，会判断数据库是否存在，存在更新全部字段，不存在插入     * 不包含@Id的主键，直接插入     * @param t     */    public <t> void insertOrUpdate(final T t) {        template.save(t);    }    /**     * 插入list     * @param list     * @param clazz     */    public <t> void insertList(final List<t> list, final Class<t> clazz) {        template.insert(list, clazz);    }    /**     * 更新满足条件的第一条数据特定字段     * @param query     * @param update     * @param clazz     * @return     */    public <t> WriteResult updateFirst(final Map<string, object> andMap,final Map<string, object> orMap, final Map<string, object> updateMap, final Class<t> clazz) {        return template.updateFirst(getQuery(andMap, orMap), getUpdate(updateMap), clazz);    }    /**     * 更新满足条件的所有数据特定字段     * @param query     * @param update     * @param clazz     * @return     */    public <t> WriteResult updateMuti(final Map<string, object> andMap,final Map<string, object> orMap, final Map<string, object> updateMap, final Class<t> clazz) {        return template.updateMulti(getQuery(andMap, orMap), getUpdate(updateMap), clazz);    }    /**     * 查找满足条件的一条数据     * @param query     * @param update     * @param clazz     * @return     */    public <t> T findOne(final Map<string, object> andMap,final Map<string, object> orMap, final Class<t> clazz) {        return template.findOne(getQuery(andMap, orMap), clazz);    }    /**     * 查找满足条件list     * @param query     * @param update     * @param clazz     * @return     */    public <t> List<t> findList(final Map<string, object> andMap,final Map<string, object> orMap, final Class<t> clazz) {        return template.find(getQuery(andMap, orMap), clazz);    }    private Update getUpdate(final Map<string, object> updateMap) {        final Update update = new Update();        if (!CollectionUtils.isEmpty(updateMap)) {            final Set<entry<string, object>> entrys = updateMap.entrySet();            for (final Entry<string, object> entry : entrys) {                update.set(entry.getKey(), entry.getValue());            }        }        return update;    }    /**     * 满足andMap且条件 后再满足orMap或条件     * @param andMap     * @param orMap     * @return     */    private Query getQuery(final Map<string, object> andMap,final Map<string, object> orMap) {        final Criteria andCri = andCris(andMap);        final Criteria[] orCris = orCris(orMap);        final Criteria cri = new Criteria();        if (andCri != null) {            cri.andOperator(andCri);        }        if (orCris!=null && orCris.length>0) {            cri.orOperator(orCris);        }        final Query query = new Query(cri);        return query;    }    private Criteria andCris(final Map<string, object> map) {        final Criteria cri = new Criteria();        if (!CollectionUtils.isEmpty(map)) {            final Set<entry<string, object>> entrys = map.entrySet();            for (final Entry<string, object> entry : entrys) {                cri.and(entry.getKey()).is(entry.getValue());            }        }        return cri;    }    private Criteria[] orCris(final Map<string, object> map) {        final List<criteria> list = new ArrayList<>();        if (!CollectionUtils.isEmpty(map)) {            final Set<entry<string, object>> entrys = map.entrySet();            for (final Entry<string, object> entry : entrys) {                list.add(Criteria.where(entry.getKey()).is(entry.getValue()));            }        }        return list.toArray(new Criteria[list.size()]);    }}</string,></entry<string,></criteria></string,></string,></entry<string,></string,></string,></string,></string,></entry<string,></string,></t></string,></string,></t></t></t></string,></string,></t></t></string,></string,></string,></t></t></string,></string,></string,></t></t></t></t></t></pre>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>004 部署Sharding（包含Replica Set）实践</title>
      <link href="/2017/05/11/mongodb/004%20mongodb-deploy-practice/"/>
      <url>/2017/05/11/mongodb/004%20mongodb-deploy-practice/</url>
      
        <content type="html"><![CDATA[<h3 id="部署Sharding（包含Replica-Set）"><a href="#部署Sharding（包含Replica-Set）" class="headerlink" title="部署Sharding（包含Replica Set）"></a>部署Sharding（包含Replica Set）</h3><ul><li>注：mongo3.0.6为例子</li></ul><p>路由mongos1,mongos2–&gt;config1,config2,config3</p><p>分片replSet1,replSet2各自配好replSet方式</p><p>单个路由mongos1–&gt;replSet1,replSet2</p><p>####环境</p><pre>mongos（部署2个）:10.139.8.207:27031,10.139.8.207:27032config（部署3个，必须奇数）:10.139.8.207:27021,10.139.8.207:27022,10.139.8.207:27023replSet:xxxxx  （部署3个,为一个replSet方式的分片，可以添加多个分片这里就不部署了）：10.139.8.207:27001，10.139.8.207:27002，10.139.8.207:27003(这台arbiter)</pre> <p>####配置</p><p>先创建数据存放的目录</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27001</span><br><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27002</span><br><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27003</span><br><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27021</span><br><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27022</span><br><span class="line">rm -rf <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27023</span><br><span class="line"></span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27001</span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27002</span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27003</span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27021</span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27022</span><br><span class="line">mkdir -p <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>data27023</span><br></pre></td></tr></table></figure><p>创建启动mongo的配置<br><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">configdb=10.139.8.207:27021,10.139.8.207:27022,10.139.8.207:27023</span><br><span class="line">port=27031</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongos27031.pid</span><br><span class="line">logpath=/app/eshub/mongo/mongos27031.log</span><br><span class="line">maxConns=20000</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27031.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">configdb=10.139.8.207:27021,10.139.8.207:27022,10.139.8.207:27023</span><br><span class="line">port=27032</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27032.pid</span><br><span class="line">logpath=/app/eshub/mongo/mongo27032.log</span><br><span class="line">maxConns=20000</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27032.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27021</span><br><span class="line">dbpath=/app/eshub/mongo/data27021/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27021.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27021.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27021.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27022</span><br><span class="line">dbpath=/app/eshub/mongo/data27022/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27022.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27022.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27022.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27023</span><br><span class="line">dbpath=/app/eshub/mongo/data27023/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27023.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27023.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27023.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27001/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27001.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27001.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27001</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27001.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27002/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27002.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27002.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27002</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27002.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27003/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27003.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27003.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27003</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27003.conf</span><br></pre></td></tr></table></figure></p><p>###启动 </p><p>先进入mongo的bin目录</p><p>数据：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27001.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27002.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27003.conf</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27021.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27022.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27023.conf</span><br></pre></td></tr></table></figure><p>再启动 mongos</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mongos -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27031.conf</span><br><span class="line">./mongos -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27032.conf</span><br></pre></td></tr></table></figure><p>选择一个节点27001</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./mongo 10.139.8.207:27001</span><br><span class="line"><span class="keyword">use</span> <span class="keyword">admin</span> </span><br><span class="line">cfg=&#123; _id:<span class="string">"xxxxx"</span>, members:[ &#123;_id:<span class="number">0</span>,host:<span class="string">'10.139.8.207:27001'</span>,<span class="keyword">priority</span>:<span class="number">2</span>&#125;, &#123;_id:<span class="number">1</span>,host:<span class="string">'10.139.8.207:27002'</span>,<span class="keyword">priority</span>:<span class="number">1</span>&#125;,&#123;_id:<span class="number">2</span>,host:<span class="string">'10.139.8.207:27003'</span>,arbiterOnly:<span class="literal">true</span>&#125;] &#125;;</span><br><span class="line">rs.initiate(cfg)             <span class="comment">#使配置生效</span></span><br></pre></td></tr></table></figure><p>配置路由节点</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./<span class="selector-tag">mongo</span> <span class="selector-tag">10</span><span class="selector-class">.139</span><span class="selector-class">.8</span><span class="selector-class">.207</span><span class="selector-pseudo">:27031</span></span><br><span class="line"><span class="selector-tag">use</span> <span class="selector-tag">admin</span>  <span class="selector-id">#test</span>表示<span class="selector-tag">replica</span> <span class="selector-tag">set</span>的名字 当把主节点添加到<span class="selector-tag">shard</span>以后，会自动找到<span class="selector-tag">set</span>里的主，备，决策节点  </span><br><span class="line"><span class="selector-tag">sh</span><span class="selector-class">.addShard</span>(<span class="string">"xxxxx/10.139.8.207:27001"</span>) </span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.runCommand</span>(&#123;<span class="attribute">enableSharding</span>:<span class="string">"diameter_test"</span>&#125;)    <span class="selector-id">#diameter_test</span> <span class="selector-tag">is</span> <span class="selector-tag">database</span> <span class="selector-tag">name</span>  </span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.runCommand</span>( &#123; <span class="attribute">shardCollection</span>: <span class="string">"diameter_test.dcca_dccr_test"</span>,<span class="attribute">key</span>:&#123;<span class="string">"__avpSessionId"</span>:<span class="number">1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>第一个命令很容易理解，第二个命令是对需要进行Sharding的数据库进行配置，第三个命令是对需要进行Sharding的Collection进行配置，这里的dccadccrtest即为Collection的名字。另外还有个key，这个是比较关键的东西，对于查询效率会有很大的影响，具体可以查看Shard Key Overview</p><h4 id="权限验证"><a href="#权限验证" class="headerlink" title="权限验证"></a>权限验证</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">登陆一台<span class="selector-tag">mongos</span></span><br><span class="line"><span class="selector-tag">mongo</span> <span class="selector-tag">10</span><span class="selector-class">.139</span><span class="selector-class">.8</span><span class="selector-class">.207</span><span class="selector-pseudo">:27031</span>/<span class="selector-tag">admin</span></span><br><span class="line">添加超级管理员（操作任何表）</span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.createUser</span>(&#123;<span class="attribute">user</span>:<span class="string">"root"</span>,<span class="attribute">pwd</span>:<span class="string">"12345678"</span>,<span class="attribute">roles</span>:[<span class="string">"root"</span>]&#125;)</span><br><span class="line">添加<span class="selector-tag">admin</span>用户（操作<span class="selector-tag">admin</span>表的用户管理权限）</span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.createUser</span>(&#123;<span class="attribute">user</span>:<span class="string">"oegw"</span>,<span class="attribute">pwd</span>:<span class="string">"12345678"</span>,<span class="attribute">roles</span>:[<span class="string">"userAdminAnyDatabase"</span>]&#125;)</span><br><span class="line">添加普通用户</span><br><span class="line"><span class="selector-tag">use</span> <span class="selector-tag">onedb</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.createUser</span>(&#123;<span class="attribute">user</span>:<span class="string">"testuser"</span>,<span class="attribute">pwd</span>:<span class="string">"testpass"</span>,<span class="attribute">roles</span>:[<span class="string">"readWrite"</span>]&#125;)</span><br></pre></td></tr></table></figure><p>关闭服务器的mongod和mongos服务</p><p>killall mongos &amp;&amp; killall mongod</p><p>生成keyfile：(每个进程的key file都保持一致，这里一台机子就用同一个了，否则复制过去)</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">openssl rand -base64 <span class="number">753</span> &gt;<span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>keyfile</span><br><span class="line">chmod <span class="number">600</span> <span class="regexp">/app/</span>eshub<span class="regexp">/mongo/</span>keyfile <span class="comment">#重点 必须</span></span><br></pre></td></tr></table></figure><p>修改配置文件（每个配置文件添加keyFile=/app/eshub/mongo/keyfile即可）</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">configdb=10.139.8.207:27021,10.139.8.207:27022,10.139.8.207:27023</span><br><span class="line">port=27031</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongos27031.pid</span><br><span class="line">logpath=/app/eshub/mongo/mongos27031.log</span><br><span class="line">maxConns=20000</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27031.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">configdb=10.139.8.207:27021,10.139.8.207:27022,10.139.8.207:27023</span><br><span class="line">port=27032</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27032.pid</span><br><span class="line">logpath=/app/eshub/mongo/mongo27032.log</span><br><span class="line">maxConns=20000</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27032.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27021</span><br><span class="line">dbpath=/app/eshub/mongo/data27021/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27021.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27021.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27021.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27022</span><br><span class="line">dbpath=/app/eshub/mongo/data27022/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27022.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27022.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27022.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">fork=true</span><br><span class="line">quiet=true</span><br><span class="line">port=27023</span><br><span class="line">dbpath=/app/eshub/mongo/data27023/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27023.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27023.pid</span><br><span class="line">logappend=true</span><br><span class="line">configsvr=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">maxConns=20000</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo27023.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27001/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27001.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27001.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27001</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27001.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27002/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27002.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27002.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27002</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27002.conf</span><br><span class="line"></span><br><span class="line">echo '</span><br><span class="line">dbpath=/app/eshub/mongo/data27003/</span><br><span class="line">logpath=/app/eshub/mongo/mongo27003.log</span><br><span class="line">pidfilepath=/app/eshub/mongo/mongo27003.pid</span><br><span class="line">logappend=true</span><br><span class="line">fork=true</span><br><span class="line">port=27003</span><br><span class="line">quiet=true</span><br><span class="line">directoryperdb=true</span><br><span class="line">replSet=xxxxx</span><br><span class="line">oplogSize=10240 </span><br><span class="line">maxConns=20000</span><br><span class="line">shardsvr=true</span><br><span class="line">keyFile=/app/eshub/mongo/keyfile</span><br><span class="line">'&gt;/app/eshub/mongo/mongo-x27003.conf</span><br></pre></td></tr></table></figure><p>先进入mongo的bin目录</p><p>数据：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27001.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27002.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo-x27003.conf</span><br></pre></td></tr></table></figure><p>配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27021.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27022.conf</span><br><span class="line">./mongod -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27023.conf</span><br></pre></td></tr></table></figure><p>再启动 mongos</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./mongos -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27031.conf</span><br><span class="line">./mongos -f <span class="meta-keyword">/app/</span>eshub<span class="meta-keyword">/mongo/</span>mongo27032.conf</span><br></pre></td></tr></table></figure><p>./mongo 10.139.8.207:27031/admin -u root -p 12345678即可</p>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>003 mongodb集群方式Sharding的搭建</title>
      <link href="/2017/05/11/mongodb/003%20mongodb-Sharding%20install/"/>
      <url>/2017/05/11/mongodb/003%20mongodb-Sharding%20install/</url>
      
        <content type="html"><![CDATA[<h3 id="Sharding"><a href="#Sharding" class="headerlink" title="Sharding"></a>Sharding</h3><p>参考：<a href="http://www.cnblogs.com/zhaowenzhong/p/5163861.html" target="_blank" rel="noopener">http://www.cnblogs.com/zhaowenzhong/p/5163861.html</a></p><p>和Replica Set类似，都需要一个仲裁节点，但是Sharding还需要配置节点和路由节点。就三种集群搭建方式来说，这种是最复杂的。部署图如下：</p><p><img src="/images/mongodb/Sharding.png" width="50%" height="50%"></p><p>1.启动数据节点</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./mongod</span> <span class="params">--fork</span> <span class="params">--dbpath</span> <span class="string">../data/set1/</span> <span class="params">--logpath</span> <span class="string">../log/set1.log</span> <span class="params">--replSet</span> test <span class="comment">#192.168.4.43  </span></span><br><span class="line"><span class="string">./mongod</span> <span class="params">--fork</span> <span class="params">--dbpath</span> <span class="string">../data/set2/</span> <span class="params">--logpath</span> <span class="string">../log/set2.log</span> <span class="params">--replSet</span> test <span class="comment">#192.168.4.44  </span></span><br><span class="line"><span class="string">./mongod</span> <span class="params">--fork</span> <span class="params">--dbpath</span> <span class="string">../data/set3/</span> <span class="params">--logpath</span> <span class="string">../log/set3.log</span> <span class="params">--replSet</span> test <span class="comment">#192.168.4.45 决策 不存储数据</span></span><br></pre></td></tr></table></figure><p>2.启动配置节点</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./mongod</span> <span class="params">--configsvr</span> <span class="params">--dbpath</span> <span class="string">../config/set1/</span> <span class="params">--port</span> 20001 <span class="params">--fork</span> <span class="params">--logpath</span> <span class="string">../log/conf1.log</span> <span class="comment">#192.168.4.30  </span></span><br><span class="line"><span class="string">./mongod</span> <span class="params">--configsvr</span> <span class="params">--dbpath</span> <span class="string">../config/set2/</span> <span class="params">--port</span> 20002 <span class="params">--fork</span> <span class="params">--logpath</span> <span class="string">../log/conf2.log</span> <span class="comment">#192.168.4.31</span></span><br></pre></td></tr></table></figure><p>3.启动路由节点</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./mongos</span> <span class="params">--configdb</span> 192.168.4.30<span class="function">:20001</span>,192.168.4.31<span class="function">:20002</span> <span class="params">--port</span> 27017 <span class="params">--fork</span> <span class="params">--logpath</span> <span class="string">../log/root.log</span> <span class="comment">#192.168.4.29</span></span><br></pre></td></tr></table></figure><p>这里我们没有用配置文件的方式启动，其中的参数意义大家应该都明白。一般来说一个数据节点对应一个配置节点，仲裁节点则不需要对应的配置节点。注意在启动路由节点时，要将配置节点地址写入到启动命令里。</p><p>4.配置Replica Set</p><p>这里可能会有点奇怪为什么Sharding会需要配置Replica Set。其实想想也能明白，多个节点的数据肯定是相关联的，如果不配一个Replica Set，怎么标识是同一个集群的呢。这也是人家mongodb的规定，咱们还是遵守吧。配置方式和之前所说的一样，定一个cfg，然后初始化配置。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./mongo <span class="number">192.168</span>.<span class="number">4.43</span>:<span class="number">27017</span>   <span class="meta">#ip和port是某个节点的地址  </span></span><br><span class="line">&gt;use admin  </span><br><span class="line">&gt;cfg=&#123; _id:<span class="string">"testrs"</span>, members:[ &#123;_id:<span class="number">0</span>,host:'192.168.4.43:<span class="number">2701</span>7',priority:<span class="number">2</span>&#125;, &#123;_id:<span class="number">1</span>,host:'192.168.4.44:<span class="number">2701</span>7',priority:<span class="number">1</span>&#125;,   </span><br><span class="line">&#123;_id:<span class="number">2</span>,host:'192.168.4.45:<span class="number">2701</span>7',arbiterOnly:true&#125;] &#125;;  </span><br><span class="line">&gt;rs.initiate(cfg)             <span class="meta">#使配置生效</span></span><br></pre></td></tr></table></figure><p>5.配置Sharding</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./<span class="selector-tag">mongo</span> <span class="selector-tag">192</span><span class="selector-class">.168</span><span class="selector-class">.4</span><span class="selector-class">.29</span><span class="selector-pseudo">:27017</span>   #这里必须连接路由节点  </span><br><span class="line">&gt;<span class="selector-tag">sh</span><span class="selector-class">.addShard</span>(<span class="string">"test/192.168.4.43:27017"</span>) <span class="selector-id">#test</span>表示<span class="selector-tag">replica</span> <span class="selector-tag">set</span>的名字 当把主节点添加到<span class="selector-tag">shard</span>以后，会自动找到<span class="selector-tag">set</span>里的主，备，决策节点  </span><br><span class="line">&gt;<span class="selector-tag">db</span><span class="selector-class">.runCommand</span>(&#123;<span class="attribute">enableSharding</span>:<span class="string">"diameter_test"</span>&#125;)    <span class="selector-id">#diameter_test</span> <span class="selector-tag">is</span> <span class="selector-tag">database</span> <span class="selector-tag">name</span>  </span><br><span class="line">&gt;<span class="selector-tag">db</span><span class="selector-class">.runCommand</span>( &#123; <span class="attribute">shardCollection</span>: <span class="string">"diameter_test.dcca_dccr_test"</span>,<span class="attribute">key</span>:&#123;<span class="string">"__avpSessionId"</span>:<span class="number">1</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><p>第一个命令很容易理解，第二个命令是对需要进行Sharding的数据库进行配置，第三个命令是对需要进行Sharding的Collection进行配置，这里的dcca_dccr_test即为Collection的名字。另外还有个key，这个是比较关键的东西，对于查询效率会有很大的影响，具体可以查看Shard Key Overview</p><p>6.后期：添加多个分片</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">登录mongs 添加分片服务器：</span><br><span class="line">./mongo 127.0.0.1:27019</span><br><span class="line">mongos&gt;<span class="keyword">use</span> admin</span><br><span class="line"><span class="keyword">db</span>.runCommand(&#123;<span class="string">"addshard"</span>:<span class="string">"10.139.8.207:27016"</span>&#125;)</span><br><span class="line"><span class="keyword">db</span>.runCommand(&#123;<span class="string">"addshard"</span>:<span class="string">"10.139.8.207:27017"</span>&#125;)</span><br><span class="line"></span><br><span class="line">设置分片数据库</span><br><span class="line">mongos&gt;<span class="keyword">use</span> admin</span><br><span class="line"><span class="keyword">db</span>.runCommand(&#123;<span class="string">"enablesharding"</span>: <span class="string">"oegw3"</span>&#125;) </span><br><span class="line">mongos&gt;<span class="keyword">use</span> oegw3;</span><br><span class="line">mongos&gt;<span class="keyword">db</span>.collectionName.ensureIndex(&#123;Date:1&#125;);</span><br><span class="line">mongos&gt;<span class="keyword">use</span> admin;</span><br><span class="line">mongos&gt;<span class="keyword">sh</span>.shardCollection(<span class="string">"oegw3.collectionName"</span>，&#123;Date:1&#125;);</span><br><span class="line"></span><br><span class="line">验证分片</span><br><span class="line"><span class="keyword">sh</span>.status();</span><br><span class="line"></span><br><span class="line">设置Balancer时间窗口</span><br><span class="line">查看均衡器在哪个机器则：</span><br><span class="line">mongos&gt;<span class="keyword">use</span> config</span><br><span class="line">mongos&gt;<span class="keyword">db</span>.locks.findOne(&#123;<span class="string">"_id"</span>:<span class="string">"balancer"</span>&#125;);</span><br><span class="line">启动均衡器</span><br><span class="line">mongos&gt;<span class="keyword">use</span> config</span><br><span class="line">mongos&gt;<span class="keyword">sh</span>.setBalancerState(true);</span><br><span class="line">或</span><br><span class="line">configsvr&gt;<span class="keyword">use</span> admin</span><br><span class="line">configsvr&gt;<span class="keyword">db</span>.settings.<span class="keyword">update</span>(&#123;_id:<span class="string">"balancer"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;stopped:false&#125;&#125;,&#123;upsert:true&#125;)</span><br><span class="line"> </span><br><span class="line">关闭均衡器</span><br><span class="line">mongos&gt;<span class="keyword">sh</span>.setBalancerState(false);</span><br><span class="line">或</span><br><span class="line">mongos&gt;<span class="keyword">sh</span>.stopBalancer()</span><br><span class="line">或</span><br><span class="line">configsvr&gt;<span class="keyword">use</span> admin</span><br><span class="line">configsvr&gt;<span class="keyword">db</span>.settings.<span class="keyword">update</span>(&#123;_id:<span class="string">"balancer"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;stopped:true&#125;&#125;,&#123;upsert:true&#125;);</span><br><span class="line"> </span><br><span class="line">设置时间窗口</span><br><span class="line">mongos&gt;<span class="keyword">db</span>.settings.<span class="keyword">update</span>(&#123;<span class="string">"_id"</span>:<span class="string">"balancer"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;activeWindow:&#123;start:<span class="string">"23:00"</span>,stop:<span class="string">"8:00"</span>&#125;&#125;&#125;,true);</span><br><span class="line"></span><br><span class="line">均衡器只是用块的数量来，非数据的大小，作为衡量分片间是否均衡的指标。</span><br></pre></td></tr></table></figure><p>到这里Sharding也已经搭建完成了，以上只是最简单的搭建方式，其中某些配置仍然使用的是默认配置。如果设置不当，会导致效率异常低下，所以建议大家多看看官方文档再进行默认配置的修改。</p><p>####Sharding方式权限验证</p><p>登陆mongos添加用户</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]<span class="comment"># mongo 192.168.0.178:20000/admin</span></span><br><span class="line">MongoDB <span class="keyword">shell</span><span class="bash"> version: 2.6.1</span></span><br><span class="line"><span class="bash">connecting to: 192.168.0.178:20000/admin</span></span><br><span class="line"><span class="bash">mongos&gt; db</span></span><br><span class="line"><span class="bash">admin</span></span><br><span class="line"><span class="bash">mongos&gt; db.addUser(<span class="string">'admin'</span>,<span class="string">'allentuns'</span>)</span></span><br><span class="line"><span class="bash">WARNING: The <span class="string">'addUser'</span> shell helper is DEPRECATED. Please use <span class="string">'createUser'</span> instead</span></span><br><span class="line"><span class="bash">Successfully added user: &#123; <span class="string">"user"</span> : <span class="string">"admin"</span>, <span class="string">"roles"</span> : [ <span class="string">"root"</span> ] &#125;</span></span><br><span class="line"><span class="bash">mongos&gt; db.addUser(<span class="string">'admin_read'</span>,<span class="string">'allentuns_read'</span>，<span class="literal">true</span>)  <span class="comment">#添加超级管理员可读用户</span></span></span><br><span class="line"><span class="bash">WARNING: The <span class="string">'addUser'</span> shell helper is DEPRECATED. Please use <span class="string">'createUser'</span> instead</span></span><br><span class="line"><span class="bash">Successfully added user: &#123; <span class="string">"user"</span> : <span class="string">"admin_read"</span>, <span class="string">"roles"</span> : [ <span class="string">"read"</span> ] &#125;</span></span><br><span class="line"><span class="bash">mongos&gt; use uba</span></span><br><span class="line"><span class="bash">switched to db uba</span></span><br><span class="line"><span class="bash">mongos&gt; db.addUser(<span class="string">'sa'</span>,<span class="string">'123root'</span>)</span></span><br><span class="line"><span class="bash">WARNING: The <span class="string">'addUser'</span> shell helper is DEPRECATED. Please use <span class="string">'createUser'</span> instead</span></span><br><span class="line"><span class="bash">Successfully added user: &#123; <span class="string">"user"</span> : <span class="string">"sa"</span>, <span class="string">"roles"</span> : [ <span class="string">"dbOwner"</span> ] &#125;</span></span><br><span class="line"><span class="bash">mongos&gt; db.addUser(<span class="string">'sa_read'</span>,<span class="string">'123root_read'</span>,<span class="literal">true</span>)   <span class="comment">#添加uba管理员可读用户</span></span></span><br><span class="line"><span class="bash">WARNING: The <span class="string">'addUser'</span> shell helper is DEPRECATED. Please use <span class="string">'createUser'</span> instead</span></span><br><span class="line"><span class="bash">Successfully added user: &#123; <span class="string">"user"</span> : <span class="string">"sa_read"</span>, <span class="string">"roles"</span> : [ <span class="string">"read"</span> ] &#125;</span></span><br></pre></td></tr></table></figure><p>关闭服务器的mongod和mongos服务</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall mongos <span class="meta">&amp;&amp; killall mongod</span></span><br></pre></td></tr></table></figure><p>成keyfile：(每个进程的key file都保持一致)</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# openssl rand -base64 <span class="number">753</span> &gt;keyfile</span><br><span class="line">[root@master ~]# chmod <span class="number">600</span> keyfile #重点 必须</span><br><span class="line">[root@master ~]# cat keyfile </span><br><span class="line"><span class="number">4</span>a7w479ouV6fY5CASqxeWzzPhPLzZgYnHKWOFSIxjMABjaWK7up6Keb2+<span class="type">ZKz1C2R</span></span><br><span class="line"><span class="title">tfl7ukCBelW2xOL0h3gOSAdIhUi0j8IMBYZV</span>/kbUSSf0987xIur3lHZqUINPVVyl</span><br><span class="line"><span class="title">ib</span>+<span class="type">XPrg3SO4IG25tCQbEf</span>/twvS1CxiDmi/<span class="type">GtQZfqOjUX7MEJK3ynFBsB</span>/<span class="number">9</span>wU1nf1</span><br><span class="line"><span class="number">6</span>rLhBPIdmSnpNf5s9yGohx2wn6dQcJ8o0wn75oOBysX2mPkLI0tEu4//<span class="number">7</span>x1PgY9Q</span><br><span class="line"><span class="type">Ws4XdXs1MFqUYXkh8K6RFd</span>/<span class="type">TKB2zs5fonzqiXrgwpaW1KUFZB1lAfQwWePmxsWul</span></span><br><span class="line"><span class="type">HqR96</span>/yTGPxQKOVpm1Zdj2LGa616X3Www16Td4c2UVoM7mPi+<span class="type">Js8R2Flc6oV9H</span>+t</span><br><span class="line"><span class="title">eEDLMIVRDAAuQBNZl1reye0iaL8F0SgoELPiEm4A2La</span>+ovNrK6K+shV+jmvrOEIC</span><br><span class="line"><span class="number">6</span>KJly68ZX6x+<span class="type">Xd5qxfoREYKsrwMJJYY1tWesUE</span>+<span class="number">26</span>QUs4TJB17uQzc1wJaRQK0pz</span><br><span class="line"><span class="number">4</span>B3E4DFzJT72ybaGFpbP4v9gMfoXXc6pPWEJ1LMvhvv4vNl5vDSpbS3YNUQjaTcU</span><br><span class="line"><span class="title">juM2FlcUeKe3VFdqHkvdrhORv52gcrqnXco7UojOYmOHRpefXmL49XLlqw9FOJ2u</span></span><br><span class="line"><span class="title">giGKSs06OaK7kyiVayUT4fUR</span>+<span class="type">OXVOAAbPRgaNbDcI9P5knWkYwNdAwP</span>+jH9h73nI</span><br><span class="line"><span class="type">ZqdZ7SvDW0</span>/iT6zbPfeQubSYJw//<span class="type">NG5gfN5Rsd5oEpXXz8bFnuJSC1ltzJenTYYN</span></span><br><span class="line"><span class="number">0</span>vsS/<span class="number">8</span>EpUKhbLYjo5c93SBjopODBfA5pqQ9hRoL36l9SfWnUVgYaqpJgvKUmwb9P</span><br><span class="line"><span class="number">1</span>Bz1YCLRo1cU9skz+chhRnZWp2c2ElMfdMD/<span class="type">XpcAbgY1KToEJFAkTiNRHvgPYjiw</span></span><br><span class="line"><span class="title">eGgEBSXlMBlKDkNqmLZ6i</span>/<span class="type">C5fCWsqDEDrMPtBM4Pp9SOPjbkwpwYHxBCUPM7oyQT</span></span><br><span class="line"><span class="title">fCisA72oOBB5L4vO55soTzX</span>+jBBrOTBaJhdsEUMC0rEq</span><br><span class="line"></span><br><span class="line"><span class="meta">#将生成的keyfile 拷贝到mongod/mongos/config 进程对应的文件夹</span></span><br><span class="line">[root@master ~]# cp keyfile /<span class="class"><span class="keyword">data</span>/mongodb/config/<span class="keyword">data</span>/</span></span><br><span class="line">[root@master ~]# cp keyfile /<span class="class"><span class="keyword">data</span>/mongodb/mongos/</span></span><br><span class="line">[root@master ~]# cp keyfile /<span class="class"><span class="keyword">data</span>/mongodb/shard1/<span class="keyword">data</span>/</span></span><br><span class="line">[root@master ~]# cp keyfile /<span class="class"><span class="keyword">data</span>/mongodb/shard2/<span class="keyword">data</span>/</span></span><br><span class="line">[root@master ~]# cp keyfile /<span class="class"><span class="keyword">data</span>/mongodb/shard3/<span class="keyword">data</span>/</span></span><br><span class="line"></span><br><span class="line">然后通过scp的方式把这个文件分别拷贝到slave1和slave2机器的对应目录中</span><br><span class="line">验证slave1服务器的keyfile文件</span><br><span class="line">[root@slave1 ~]# find /<span class="class"><span class="keyword">data</span>/mongodb -name keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard2/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard1/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard3/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/config/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/mongos/keyfile</span></span><br><span class="line"></span><br><span class="line">验证slave2服务器的keyfile文件</span><br><span class="line">[root@slave2 ~]#  find /<span class="class"><span class="keyword">data</span>/mongodb -name keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard2/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard1/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/shard3/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/config/<span class="keyword">data</span>/keyfile</span></span><br><span class="line">/<span class="class"><span class="keyword">data</span>/mongodb/mongos/keyfile</span></span><br></pre></td></tr></table></figure><p>使用–keyFile参数指定前面生成的keyfile文件，重启机器全部mongod,mongos进程</p><p>1、分别在master、slave1和slave2服务器上启动配置服务器</p><p>mongod –configsvr –dbpath /data/mongodb/config/data –port 21000 –logpath /data/mongodb/config/log/config.log –fork –keyFile /data/mongodb/config/data/keyfile</p><p>#注意在这个过程中，会报错，只需要再次执行chmod 600 /data/mongodb/config/data/keyfile 就可以</p><p>2、分别在master、slave1和slave2服务器上启动mongos服务器</p><p>mongos  –configdb 192.168.0.178:21000,192.168.0.180:21000,192.168.0.181:21000 –port 20000  –keyFile /data/mongodb/mongos/keyfile –logpath  /data/mongodb/mongos/log/mongos.log –fork</p><p>#执行chmod 600 /data/mongodb/mongos/keyfile</p><p>3、分别在master、slave1和slave2服务器上配置分片副本集</p><p>mongod –shardsvr –replSet shard1 –port 22001 –keyFile /data/mongodb/shard1/data/keyfile –dbpath /data/mongodb/shard1/data  –logpath /data/mongodb/shard1/log/shard1.log –fork –nojournal  –oplogSize 10</p><p>mongod –shardsvr –replSet shard2 –port 22002 –keyFile /data/mongodb/shard2/data/keyfile –dbpath /data/mongodb/shard2/data  –logpath /data/mongodb/shard1/log/shard2.log –fork –nojournal  –oplogSize 10</p><p>mongod –shardsvr –replSet shard3 –port 22003 –keyFile /data/mongodb/shard3/data/keyfile –dbpath /data/mongodb/shard3/data  –logpath /data/mongodb/shard1/log/shard3.log –fork –nojournal  –oplogSize 10</p><p>chmod 600 /data/mongodb/shard1/data/keyfile</p><p>chmod 600 /data/mongodb/shard2/data/keyfile</p><p>chmod 600 /data/mongodb/shard3/data/keyfile</p><p>验证认证</p><p>需要认证，没有认证没有任何权限</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# mongo localhost:20000</span><br><span class="line">MongoDB shell version: 2.6.1</span><br><span class="line">connecting <span class="keyword">to</span>: localhost:20000/test</span><br><span class="line"><span class="builtin-name">Error</span> <span class="keyword">while</span> trying <span class="keyword">to</span> show<span class="built_in"> server </span>startup warnings: <span class="keyword">not</span> authorized on admin <span class="keyword">to</span> execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line">mongos&gt; show collections;</span><br><span class="line">2014-08-03T12:02:48.535+0800 error: &#123;</span><br><span class="line"><span class="string">"<span class="variable">$err</span>"</span> : <span class="string">"not authorized for query on test.system.namespaces"</span>,</span><br><span class="line"><span class="string">"code"</span> : 13</span><br><span class="line">&#125; at src/mongo/shell/query.js:131</span><br><span class="line">mongos&gt; use uba</span><br><span class="line">switched <span class="keyword">to</span> db uba</span><br><span class="line">mongos&gt; db</span><br><span class="line">uba</span><br><span class="line">mongos&gt; show collections;</span><br><span class="line">2014-08-03T12:03:10.923+0800 error: &#123; <span class="string">"<span class="variable">$err</span>"</span> : <span class="string">"not authorized for query on uba.system.namespaces"</span>, <span class="string">"code"</span> : 13 &#125; at src/mongo/shell/query.js:131</span><br></pre></td></tr></table></figure><p>账户认证后状态</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#admin库认证</span><br><span class="line">[root@master ~]# mongo localhost:20000/admin -<span class="keyword">u</span> admin -p allentuns</span><br><span class="line">MongoDB <span class="keyword">shell</span> <span class="keyword">version</span>: 2.6.1</span><br><span class="line">connecting to: localhost:20000/admin</span><br><span class="line">mongos&gt; show collections;</span><br><span class="line">system.indexes</span><br><span class="line">system.users</span><br><span class="line">system.<span class="keyword">version</span></span><br><span class="line">#uba库认证 读写权限用户</span><br><span class="line">[root@master ~]# mongo localhost:20000/uba -<span class="keyword">u</span> <span class="keyword">sa</span> -p 123root</span><br><span class="line">MongoDB <span class="keyword">shell</span> <span class="keyword">version</span>: 2.6.1</span><br><span class="line">connecting to: localhost:20000/uba</span><br><span class="line"><span class="keyword">Error</span> <span class="keyword">while</span> trying to show server startup warnings: not authorized <span class="keyword">on</span> admin to execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line">mongos&gt; show collections;</span><br><span class="line">system.indexes</span><br><span class="line">table1</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.table1.<span class="keyword">count</span>()</span><br><span class="line">0</span><br><span class="line">mongos&gt; <span class="keyword">for</span> (<span class="keyword">var</span> i = 1; i &lt;= 1000; i++)<span class="keyword">db</span>.table1.<span class="keyword">save</span>(&#123;id:i,name:<span class="string">"username"</span>+i,age:i&#125;);</span><br><span class="line">WriteResult(&#123; <span class="string">"nInserted"</span> : 1 &#125;)</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.table1.<span class="keyword">count</span>()</span><br><span class="line">1000</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.table1.findOne()</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : ObjectId(<span class="string">"53ddb52a65bb900f61e458a1"</span>),</span><br><span class="line"><span class="string">"id"</span> : 1,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"username1"</span>,</span><br><span class="line"><span class="string">"age"</span> : 1</span><br><span class="line">&#125;</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.auth('<span class="keyword">sa</span>','123root')</span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">#uba库 只读权限用户</span><br><span class="line">[root@master ~]# mongo localhost:20000/uba -<span class="keyword">u</span> sa_read -p 123root_read</span><br><span class="line">MongoDB <span class="keyword">shell</span> <span class="keyword">version</span>: 2.6.1</span><br><span class="line">connecting to: localhost:20000/uba</span><br><span class="line"><span class="keyword">Error</span> <span class="keyword">while</span> trying to show server startup warnings: not authorized <span class="keyword">on</span> admin to execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.auth('sa_read','123root_read')</span><br><span class="line">1</span><br><span class="line">mongos&gt; <span class="keyword">db</span></span><br><span class="line">uba</span><br><span class="line">mongos&gt; <span class="keyword">for</span> (<span class="keyword">var</span> i = 1; i &lt;= 1000; i++)<span class="keyword">db</span>.table1.<span class="keyword">save</span>(&#123;id:i,name:<span class="string">"username"</span>+i,age:i&#125;);</span><br><span class="line">WriteResult(&#123;</span><br><span class="line"><span class="string">"writeError"</span> : &#123;</span><br><span class="line"><span class="string">"code"</span> : 13,</span><br><span class="line"><span class="string">"errmsg"</span> : <span class="string">"not authorized on uba to execute command &#123; insert: \"</span>table1\<span class="string">", documents: [ &#123; id: 1000.0, name: \"</span>username1000\<span class="string">", age: 1000.0, _id: ObjectId('53ddb5d62390d9a487087c87') &#125; ], ordered: true &#125;"</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.table1.findOne()</span><br><span class="line">&#123;</span><br><span class="line"><span class="string">"_id"</span> : ObjectId(<span class="string">"53ddb52a65bb900f61e458a1"</span>),</span><br><span class="line"><span class="string">"id"</span> : 1,</span><br><span class="line"><span class="string">"name"</span> : <span class="string">"username1"</span>,</span><br><span class="line"><span class="string">"age"</span> : 1</span><br><span class="line">&#125;</span><br><span class="line">mongos&gt; <span class="keyword">db</span>.table1.<span class="keyword">count</span>()</span><br><span class="line">1000</span><br></pre></td></tr></table></figure><p>验证主从切换，现在在192.168.0.180 slave1集群上停掉22001端口的服务，看master是否能接替slave1主的工作</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@slave1 ~]# netstat -tnlp |grep mongo</span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">22001</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">1955</span>/mongod         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">22002</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">2019</span>/mongod         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">22003</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">2081</span>/mongod         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">20000</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">1870</span>/mongos         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">21000</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">1847</span>/mongod         </span><br><span class="line">[root@slave1 ~]# kill <span class="number">1955</span></span><br><span class="line">[root@slave1 ~]# netstat -tnlp |grep mongo</span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">22002</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">2019</span>/mongod         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">22003</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">2081</span>/mongod         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">20000</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">1870</span>/mongos         </span><br><span class="line">tcp        <span class="number">0</span>      <span class="number">0</span> <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:<span class="number">21000</span>               <span class="number">0.0</span><span class="meta">.0</span><span class="meta">.0</span>:*                   LISTEN      <span class="number">1847</span>/mongod    </span><br><span class="line">[root@slave1 ~]# mongo <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.178</span>:<span class="number">22001</span>/admin</span><br><span class="line">MongoDB shell version: <span class="number">2.6</span><span class="meta">.1</span></span><br><span class="line">connecting to: <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.178</span>:<span class="number">22001</span>/admin</span><br><span class="line">Welcome to the MongoDB shell.</span><br><span class="line">For interactive help, type <span class="string">"help"</span>.</span><br><span class="line">For more comprehensive documentation, see</span><br><span class="line"><span class="symbol">http:</span>//docs.mongodb.org/</span><br><span class="line">Questions? Try the support group</span><br><span class="line"><span class="symbol">http:</span>//groups.google.com/group/mongodb-user</span><br><span class="line">Error while trying to show server startup warnings: <span class="keyword">not</span> authorized on admin to execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line"><span class="symbol">shard1:</span>PRIMARY&gt; ^C</span><br><span class="line">bye</span><br><span class="line">[root@slave1 ~]# mongo <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.178</span>:<span class="number">22002</span>/admin</span><br><span class="line">MongoDB shell version: <span class="number">2.6</span><span class="meta">.1</span></span><br><span class="line">connecting to: <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.178</span>:<span class="number">22002</span>/admin</span><br><span class="line">Error while trying to show server startup warnings: <span class="keyword">not</span> authorized on admin to execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line"><span class="symbol">shard2:</span>ARBITER&gt; ^C</span><br><span class="line">bye</span><br><span class="line">[root@slave1 ~]# mongod --shardsvr --replSet shard1 --port <span class="number">22001</span> --keyFile /data/mongodb/shard1/data/keyfile --dbpath /data/mongodb/shard1/data  --logpath /data/mongodb/shard1/log/shard1.log --fork --nojournal  --oplogSize <span class="number">10</span></span><br><span class="line">about to fork child process, waiting until server is ready for connections.</span><br><span class="line">forked process: <span class="number">2641</span></span><br><span class="line">child process started successfully, parent exiting</span><br><span class="line">[root@slave1 ~]# mongo <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.180</span>:<span class="number">22001</span>/admin</span><br><span class="line">MongoDB shell version: <span class="number">2.6</span><span class="meta">.1</span></span><br><span class="line">connecting to: <span class="number">192.168</span><span class="meta">.0</span><span class="meta">.180</span>:<span class="number">22001</span>/admin</span><br><span class="line">Error while trying to show server startup warnings: <span class="keyword">not</span> authorized on admin to execute command &#123; getLog: <span class="string">"startupWarnings"</span> &#125;</span><br><span class="line"><span class="symbol">shard1:</span>SECONDARY&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>002 mongodb集群方式Replica Set的搭建</title>
      <link href="/2017/05/11/mongodb/002%20mongodb-Replica%20Set%20install/"/>
      <url>/2017/05/11/mongodb/002%20mongodb-Replica%20Set%20install/</url>
      
        <content type="html"><![CDATA[<h3 id="Replica-Set"><a href="#Replica-Set" class="headerlink" title="Replica Set"></a>Replica Set</h3><p>中文翻译叫做副本集。其实简单来说就是集群当中包含了多份数据，保证主节点挂掉了，备节点能继续提供数据服务，提供的前提就是数据需要和主节点一致。如下图</p><p><img src="/images/mongodb/ReplicaSet.png" width="50%" height="50%"></p><p>Mongodb(M)表示主节点，Mongodb(S)表示备节点，Mongodb(A)表示仲裁节点。主备节点存储数据，仲裁节点不存储数据。客户端同时连接主节点与备节点，不连接仲裁节点。</p><p>默认设置下，主节点提供所有增删查改服务，备节点不提供任何服务。但是可以通过设置使备节点提供查询服务，这样就可以减少主节点的压力，当客户端进行数据查询时，请求自动转到备节点上。这个设置叫做Read Preference Modes，同时Java客户端提供了简单的配置方式，可以不必直接对数据库进行操作。</p><p>仲裁节点是一种特殊的节点，它本身并不存储数据，主要的作用是决定哪一个备节点在主节点挂掉之后提升为主节点，所以客户端不需要连接此节点。这里虽然只有一个备节点，但是仍然需要一个仲裁节点来提升备节点级别。我开始也不相信必须要有仲裁节点，但是自己也试过没仲裁节点的话，主节点挂了备节点还是备节点，所以咱们还是需要它的。</p><p>介绍完了集群方案，那么现在就开始搭建了。</p><p>#####注意：（原因在故障转移介绍）</p><p>当没有仲裁节点：<br>如果是2个节点成员的，master挂了，是不会自动切换到slave的。replset成员最少3个，这样才可以实现故障自动切换。（3个，4个，5个，6个 。。。。。等等）建议3个节点成员就可以（官方推荐奇数个节点）</p><p>有仲裁节点:<br>仲裁节点可以和其他服务合部。</p><p>#####故障转移介绍</p><p>故障转移是通过不同结点之间的角色切换达到的。角色分为三种：Primary，Secondary和Arbiter。顾名思义，Primary是主结点，可进行写入操作。操作日志从Primary向各个Secondary同步并重做达到数据复制的目的。当Primary出现故障时，集群成员会选举其中一个Secondary成为新的Primary。而Arbiter则是一个只参与投票的结点，不复制实际的内容。</p><ol><li>心跳</li></ol><p>心跳每2秒进行一次，如果在10秒（5次）内没有收到一个结点的心跳，则认为这个结点已经死亡，需要选举新的Primary结点。</p><ol start="2"><li>priority配置</li></ol><p>每个结点都具备Priority设置，默认为1。可以通过以下命令查看</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">rs</span><span class="selector-class">.conf</span>()</span><br></pre></td></tr></table></figure><p>可能的情况下，集群结点总是选举优先级最高的结点成为新的Primary。优先级0是特殊配置，这样的结点不会成为选举的候选结点（如Arbiter结点）。</p><p>当集群中出现了优先级比当前Primary更高的活跃结点时，会发生重新选举，而无论当前Primary是否存活。所以如果之前死亡的高优先级Primary结点恢复工作，并同步完所有操作日志，会马上发生选举使它重新成为Primary。</p><p>这在某些情况下会造成问题，因为Primary角色会在不同结点之间来回切换，而切换过程中集群会有短暂的不可用时间。把所有结点的优先级设置为相同则可以保证选举发生的次数更少，但这也不能说一定是件好事。总之没有最好的方案，只有最合适的方案。</p><ol start="3"><li>optime（最后同步时间）</li></ol><p>一个结点的最后同步时间必须是最接近Primary的，才有参与选举的资格，否则即使priority高也不行。</p><p>所以可以想象在群集中可能发生这样的状况：</p><p>Primary A死亡后，Secondary B具有更高的优先级，但同步时间比不上Secondary C。因此C会被优先提升为Primary。此后B从C处同步了最近的操作日志，成为了具备最高优先级，并且操作日志也最新的结点，因此B会成为新的Primary，C降级为Secondary。</p><p>当然在同一个网络中，这种情况发生的可能性不高。异地机房则更有可能发生。</p><ol start="4"><li>投票</li></ol><p>一个要成为Primary的结点必须得到集群中大多数成员选票。这里的多数成员并不是指的集群成员的数量，而是指参与投票的成员数量。</p><p>所以在3个成员的集群中，一个Primary死亡后，另外两个Secondary会产生出一个新的Primary。而如果2个成员死亡，剩下的一个会保持Secondary身份，因为得不到其他成员的投票。如果剩下的成员是Primary，则它会降级为Secondary。</p><p>要注意对于其他成员是否死亡的判断是相对的，一个结点只能判断死亡的结点对自己已经不可见，但是否真的死亡并不确定。也可能是自己从网络中脱离而造成自己对所有人都不可见。MongoDB必须保证任何时候任何情况都只能有一个Primary，因此对于升级的判断也是保守的，宁可不升级为Primary，也不可以让多于一个Secondary升级为Primary（会造成不可逆转的错误）。</p><p>要小心集群只剩一个成员的情况，它极有可能变成一个只读的集群，这对生产环境来说是灾难性的。以后的篇幅会讲如何处理这种情况。</p><ol start="5"><li>网络划分</li></ol><p>如果Primary死亡的时候没有一个Secondary得到足够的选票，则集群会变为只读的。因此多数结点应该位于同一个数据中心，避免因为数据中心间的网络故障造成集群变为只读。</p><p>从以上问题可以了解到Arbiter的必要性，它的存在可以解决极端情况下集群成员无法投票决定新的Primary的问题。</p><p>影响选举进行的因素包括：</p><h3 id="下载mongodb"><a href="#下载mongodb" class="headerlink" title="下载mongodb"></a>下载mongodb</h3><p>下载完安装包，并解压 tgz（以下演示的是 64 位 Linux上的安装） 。</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl -O https:<span class="regexp">//</span>fastdl.mongodb.org<span class="regexp">/linux/m</span>ongodb-linux-x86_64-amazon-<span class="number">3.4</span>.<span class="number">4</span>.tgz    <span class="comment"># 下载</span></span><br><span class="line">tar -zxvf mongodb-linux-x86_64-amazon-<span class="number">3.4</span>.<span class="number">4</span>.tgz                                  <span class="comment"># 解压</span></span><br><span class="line">mv mongodb-linux-x86_64-amazon-<span class="number">3.4</span>.<span class="number">4</span><span class="regexp">/ /u</span>sr<span class="regexp">/local/m</span>ongodb                         <span class="comment"># 将解压包拷贝到指定目录</span></span><br></pre></td></tr></table></figure><p>MongoDB 的可执行文件位于 bin 目录下，所以可以将其添加到 PATH 路径中(我们不加)：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=&lt;mongodb-install-directory&gt;/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="comment"># &lt;mongodb-install-directory&gt; 为你 MongoDB 的安装路径。</span></span><br></pre></td></tr></table></figure><h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><p>我们以搭建Primary，Secondary和Arbiter为例子：</p><ul><li>建立数据文件夹</li></ul><p>一般情况下不会把数据目录建立在mongodb的解压目录下，不过这里方便起见，就建在mongodb解压目录下吧。</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /mongodb/<span class="class"><span class="keyword">data</span>/master   </span></span><br><span class="line"><span class="title">mkdir</span> -p /mongodb/<span class="class"><span class="keyword">data</span>/slaver   </span></span><br><span class="line"><span class="title">mkdir</span> -p /mongodb/<span class="class"><span class="keyword">data</span>/arbiter    </span></span><br><span class="line"><span class="meta">#三个目录分别对应主，备，仲裁节点</span></span><br></pre></td></tr></table></figure><ul><li>建立配置文件</li></ul><p>由于配置比较多，所以我们将配置写到文件里。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#master.conf  </span></span><br><span class="line"><span class="attr">dbpath</span>=/mongodb/data/master  </span><br><span class="line"><span class="attr">logpath</span>=/mongodb/log/master.log  </span><br><span class="line"><span class="attr">pidfilepath</span>=/mongodb/master.pid  </span><br><span class="line"><span class="attr">directoryperdb</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">logappend</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">replSet</span>=testrs  </span><br><span class="line"><span class="attr">bind_ip</span>=<span class="number">10.10</span>.<span class="number">148.130</span>  </span><br><span class="line"><span class="attr">port</span>=<span class="number">27017</span>  </span><br><span class="line"><span class="attr">oplogSize</span>=<span class="number">10000</span>  </span><br><span class="line"><span class="attr">fork</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">noprealloc</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#slaver.conf  </span></span><br><span class="line"><span class="attr">dbpath</span>=/mongodb/data/slaver  </span><br><span class="line"><span class="attr">logpath</span>=/mongodb/log/slaver.log  </span><br><span class="line"><span class="attr">pidfilepath</span>=/mongodb/slaver.pid  </span><br><span class="line"><span class="attr">directoryperdb</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">logappend</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">replSet</span>=testrs  </span><br><span class="line"><span class="attr">bind_ip</span>=<span class="number">10.10</span>.<span class="number">148.131</span>  </span><br><span class="line"><span class="attr">port</span>=<span class="number">27017</span>  </span><br><span class="line"><span class="attr">oplogSize</span>=<span class="number">10000</span>  </span><br><span class="line"><span class="attr">fork</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">noprealloc</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#arbiter.conf  </span></span><br><span class="line"><span class="attr">dbpath</span>=/mongodb/data/arbiter  </span><br><span class="line"><span class="attr">logpath</span>=/mongodb/log/arbiter.log  </span><br><span class="line"><span class="attr">pidfilepath</span>=/mongodb/arbiter.pid  </span><br><span class="line"><span class="attr">directoryperdb</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">logappend</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">replSet</span>=testrs  </span><br><span class="line"><span class="attr">bind_ip</span>=<span class="number">10.10</span>.<span class="number">148.132</span>  </span><br><span class="line"><span class="attr">port</span>=<span class="number">27017</span>  </span><br><span class="line"><span class="attr">oplogSize</span>=<span class="number">10000</span>  </span><br><span class="line"><span class="attr">fork</span>=<span class="literal">true</span>  </span><br><span class="line"><span class="attr">noprealloc</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>dbpath</td><td>数据存放目录</td></tr><tr><td>logpath</td><td>日志存放路径</td></tr><tr><td>pidfilepath</td><td>进程文件，方便停止mongodb</td></tr><tr><td>directoryperdb</td><td>为每一个数据库按照数据库名建立文件夹存放</td></tr><tr><td>logappend</td><td>以追加的方式记录日志</td></tr><tr><td>replSet</td><td>replica set的名字，同一个replica set的名字一定要设置相同</td></tr><tr><td>bind_ip</td><td>mongodb所绑定的ip地址</td></tr><tr><td>port</td><td>mongodb进程所使用的端口号，默认为27017</td></tr><tr><td>oplogSize</td><td>mongodb操作日志文件的最大大小。单位为Mb，默认为硬盘剩余空间的5%</td></tr><tr><td>fork</td><td>以后台方式运行进程</td></tr><tr><td>noprealloc</td><td>不预先分配存储</td></tr></tbody></table><ul><li>启动mongodb</li></ul><p>进入每个mongodb节点的bin目录下</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./monood -f master<span class="selector-class">.conf</span>  </span><br><span class="line">./mongod -f slaver<span class="selector-class">.conf</span>  </span><br><span class="line">./mongod -f arbiter.conf</span><br></pre></td></tr></table></figure><p>注意配置文件的路径一定要保证正确，可以是相对路径也可以是绝对路径。</p><ul><li>配置主，备，仲裁节点</li></ul><p>可以通过客户端连接mongodb，也可以直接在三个节点中选择一个连接mongodb。</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">./mongo <span class="number">10.10</span>.<span class="number">148.130</span>:<span class="number">27017</span>   <span class="meta">#ip和port是某个节点的地址  </span></span><br><span class="line">&gt;use admin  </span><br><span class="line">&gt;cfg=&#123; _id:<span class="string">"testrs"</span>, members:[ &#123;_id:<span class="number">0</span>,host:'10.10.148.130:<span class="number">2701</span>7',priority:<span class="number">2</span>&#125;, &#123;_id:<span class="number">1</span>,host:'10.10.148.131:<span class="number">2701</span>7',priority:<span class="number">1</span>&#125;,   </span><br><span class="line">&#123;_id:<span class="number">2</span>,host:'10.10.148.132:<span class="number">2701</span>7',arbiterOnly:true&#125;] &#125;;  </span><br><span class="line">&gt;rs.initiate(cfg)             <span class="meta">#使配置生效</span></span><br></pre></td></tr></table></figure><p>cfg是可以任意的名字，当然最好不要是mongodb的关键字，conf，config都可以。最外层的_id表示replica set的名字，members里包含的是所有节点的地址以及优先级。优先级最高的即成为主节点，即这里的10.10.148.130:27017。特别注意的是，对于仲裁节点，需要有个特别的配置——arbiterOnly:true。这个千万不能少了，不然主备模式就不能生效。</p><p>配置的生效时间根据不同的机器配置会有长有短，配置不错的话基本上十几秒内就能生效，有的配置需要一两分钟。如果生效了，执行rs.status()命令会看到如下信息：</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&#123;  </span><br><span class="line">        <span class="string">"set"</span> : <span class="string">"testrs"</span>,  </span><br><span class="line">        <span class="string">"date"</span> : ISODate(<span class="string">"2013-01-05T02:44:43Z"</span>),  </span><br><span class="line">        <span class="string">"myState"</span> : <span class="number">1</span>,  </span><br><span class="line">        <span class="string">"members"</span> : [  </span><br><span class="line">                &#123;  </span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">0</span>,  </span><br><span class="line">                        <span class="string">"name"</span> : <span class="string">"10.10.148.130:27017"</span>,  </span><br><span class="line">                        <span class="string">"health"</span> : <span class="number">1</span>,  </span><br><span class="line">                        <span class="string">"state"</span> : <span class="number">1</span>,  </span><br><span class="line">                        <span class="string">"stateStr"</span> : <span class="string">"PRIMARY"</span>,  </span><br><span class="line">                        <span class="string">"uptime"</span> : <span class="number">200</span>,  </span><br><span class="line">                        <span class="string">"optime"</span> : Timestamp(<span class="number">1357285565000</span>, <span class="number">1</span>),  </span><br><span class="line">                        <span class="string">"optimeDate"</span> : ISODate(<span class="string">"2013-01-04T07:46:05Z"</span>),  </span><br><span class="line">                        <span class="string">"self"</span> : <span class="literal">true</span>  </span><br><span class="line">                &#125;,  </span><br><span class="line">                &#123;  </span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">1</span>,  </span><br><span class="line">                        <span class="string">"name"</span> : <span class="string">"10.10.148.131:27017"</span>,  </span><br><span class="line">                        <span class="string">"health"</span> : <span class="number">1</span>,  </span><br><span class="line">                        <span class="string">"state"</span> : <span class="number">2</span>,  </span><br><span class="line">                        <span class="string">"stateStr"</span> : <span class="string">"SECONDARY"</span>,  </span><br><span class="line">                        <span class="string">"uptime"</span> : <span class="number">200</span>,  </span><br><span class="line">                        <span class="string">"optime"</span> : Timestamp(<span class="number">1357285565000</span>, <span class="number">1</span>),  </span><br><span class="line">                        <span class="string">"optimeDate"</span> : ISODate(<span class="string">"2013-01-04T07:46:05Z"</span>),  </span><br><span class="line">                        <span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2013-01-05T02:44:42Z"</span>),  </span><br><span class="line">                        <span class="string">"pingMs"</span> : <span class="number">0</span>  </span><br><span class="line">                &#125;,  </span><br><span class="line">                &#123;  </span><br><span class="line">                        <span class="string">"_id"</span> : <span class="number">2</span>,  </span><br><span class="line">                        <span class="string">"name"</span> : <span class="string">"10.10.148.132:27017"</span>,  </span><br><span class="line">                        <span class="string">"health"</span> : <span class="number">1</span>,  </span><br><span class="line">                        <span class="string">"state"</span> : <span class="number">7</span>,  </span><br><span class="line">                        <span class="string">"stateStr"</span> : <span class="string">"ARBITER"</span>,  </span><br><span class="line">                        <span class="string">"uptime"</span> : <span class="number">200</span>,  </span><br><span class="line">                        <span class="string">"lastHeartbeat"</span> : ISODate(<span class="string">"2013-01-05T02:44:42Z"</span>),  </span><br><span class="line">                        <span class="string">"pingMs"</span> : <span class="number">0</span>  </span><br><span class="line">                &#125;  </span><br><span class="line">        ],  </span><br><span class="line">        <span class="string">"ok"</span> : <span class="number">1</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果配置正在生效，其中会包含如下信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"stateStr"</span> : <span class="string">"RECOVERING"</span></span><br></pre></td></tr></table></figure><p>同时可以查看对应节点的日志，发现正在等待别的节点生效或者正在分配数据文件.</p><p>现在基本上已经完成了集群的所有搭建工作。至于测试工作，一个是往主节点插入数据，能从备节点查到之前插入的数据（查询备节点可能会遇到某个问题，可以自己去网上查查看）。二是停掉主节点，备节点能变成主节点提供服务。三是恢复主节点，备节点也能恢复其备的角色，而不是继续充当主的角色。二和三都可以通过rs.status()命令实时查看集群的变化。</p><h3 id="单个mongo设置用户"><a href="#单个mongo设置用户" class="headerlink" title="单个mongo设置用户"></a>单个mongo设置用户</h3><p>用户管理员的角色名叫 userAdminAnyDatabase，这个角色只能在 admin 数据库中创建。下面是一个例子：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">&gt; db.createUser(&#123;<span class="string">user:</span><span class="string">"root"</span>,<span class="string">pwd:</span><span class="string">"root123"</span>,<span class="string">roles:</span>[<span class="string">"userAdminAnyDatabase"</span>]&#125;)</span><br><span class="line">Successfully added <span class="string">user:</span> &#123; <span class="string">"user"</span> : <span class="string">"root"</span>, <span class="string">"roles"</span> : [ <span class="string">"userAdminAnyDatabase"</span> ] &#125;</span><br></pre></td></tr></table></figure><p>这个例子创建了一个名为 root 的用户管理员。创建完了这个用户之后，我们应该马上以该用户的身份登录：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">db</span><span class="selector-class">.auth</span>(<span class="string">"root"</span>,<span class="string">"root123"</span>)</span><br><span class="line"><span class="selector-tag">1</span></span><br></pre></td></tr></table></figure><p>db.auth() 方法返回 1 表示登录成功。(我们做到这边)。</p><p>接下来我们为指定的数据库创建访问所需的账号。</p><p>首先保证你已经以用户管理员的身份登录 admin 数据库。然后用 use 命令切换到目标数据库，同样用 db.createUser() 命令来创建用户，其中角色名为 “readWrite”。</p><p>普通的数据库用户角色有两种，read 和 readWrite。顾名思义，前者只能读取数据不能修改，后者可以读取和修改。</p><p>下面是一个例子：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="keyword">use</span> <span class="keyword">test</span></span><br><span class="line">switched to <span class="keyword">db</span> <span class="keyword">test</span></span><br><span class="line">&gt; <span class="keyword">db</span>.createUser(&#123;user:<span class="string">"testuser"</span>,<span class="keyword">pwd</span>:<span class="string">"testpass"</span>,roles:[<span class="string">"readWrite"</span>]&#125;)</span><br><span class="line">Successfully added user: &#123; <span class="string">"user"</span> : <span class="string">"testuser"</span>, <span class="string">"roles"</span> : [ <span class="string">"readWrite"</span> ] &#125;</span><br><span class="line">&gt; <span class="keyword">db</span>.auth(<span class="string">"testuser"</span>,<span class="string">"testpass"</span>)</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>这样 MongoDB 的数据安全性就得到保障了，没有登录的客户端将无法执行任何命令。</p><h3 id="集群密码设置"><a href="#集群密码设置" class="headerlink" title="集群密码设置"></a>集群密码设置</h3><p>由于前面配置好后所有结点的MongoDB服务都启动了，所以第二步先service mongod stop(所有结点都要停止服务) </p><p>启动其中一台mongod服务, 正常启动，不要开启认证功能，并执行下面语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mongo   </span><br><span class="line"><span class="keyword">use</span> <span class="keyword">admin</span>  </span><br><span class="line">&lt;span <span class="keyword">style</span>=<span class="string">"color: rgb(34, 36, 38); font-family: Arial, 'Helvetica Neue', Helvetica, sans-serif; font-size: 15px; line-height: 19.5px;"</span>&gt;db.createUser(&#123; <span class="keyword">user</span>: <span class="string">"root"</span>, pwd: <span class="string">"123"</span>, <span class="keyword">roles</span>: [ &#123; <span class="keyword">role</span>: <span class="string">"root"</span>, db: <span class="string">"admin"</span> &#125; ] &#125;)&lt;/span&gt;</span><br></pre></td></tr></table></figure><p>修改配置文件,如master.conf 中添加</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">security:</span>  </span><br><span class="line"><span class="symbol"> authorization:</span> enabled  </span><br><span class="line"> ＃keyFile: <span class="meta-keyword">/data/</span>mongodb/mongodb-keyfile</span><br></pre></td></tr></table></figure><p>其中authorization: enabled是作用于mongodb认证功能的，keyFile属性下面会解释,暂时加上注释．</p><p>重启所有结点的mongod服务，这时随便在一台机器运行mongo，此时就需要认证了．</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">admin</span></span><br><span class="line">db.auth(<span class="string">"root"</span>, <span class="string">"123"</span>) </span><br><span class="line">返回<span class="number">1</span>表示认证成功．</span><br></pre></td></tr></table></figure><p>运行rs.status()会出现其他的结点状态是not reachable,类似于如下的信息．这说明结点之间没有认证功能（对于这一块还是有点模糊）</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"name"</span> : "<span class="type">IP</span> ADDRESS<span class="string">",  </span></span><br><span class="line"><span class="string">"</span>health<span class="string">" : 0,  </span></span><br><span class="line"><span class="string">"</span>state<span class="string">" : 8,  </span></span><br><span class="line"><span class="string">"</span>stateStr<span class="string">" : "</span>(<span class="keyword">not</span> reachable/healthy)<span class="string">",  </span></span><br><span class="line"><span class="string">"</span>uptime<span class="string">" : 0,  </span></span><br><span class="line"><span class="string">"</span>optime<span class="string">" : &#123;  </span></span><br><span class="line"><span class="string">    "</span>t<span class="string">" : 0,  </span></span><br><span class="line"><span class="string">    "</span>i<span class="string">" : 0  </span></span><br><span class="line"><span class="string">&#125;,</span></span><br></pre></td></tr></table></figure><p>为解决以上提到的问题，先在一台机器上产生mongodb keyfile</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">openssl</span> rand -base64 <span class="number">741</span> &gt; /<span class="class"><span class="keyword">data</span>/mongodb/mongodb-keyfile  </span></span><br><span class="line"><span class="title">chmod</span> <span class="number">600</span> /<span class="class"><span class="keyword">data</span>/mongodb/mongodb-keyfile</span></span><br></pre></td></tr></table></figure><p>将mongodb-keyfile文件拷贝到各个节点上．</p><p>修改配置文件conf文件，即将步骤中的keyFile前面的注释去掉，再重启所有结点的mongod服务,现在会发现所有结点状态正常．</p><pre>集群添加密码总结：1. 给admin库添加用户名和密码时，只需要在一个结点上操作，只要配置好了replica set, 用户名和密码会同步到其他结点．2. 关于用户名密码认证和结点之间认证．前者是对于mongodb client而言，处于对每个库的安全考虑，client端想操作数据库，必须先用用户名和密码登录，即配置文件中的authorization: enabled；而对于节点之间的认证，其实跟前面用户名密码认证是分离的，是让各结点之间有一个key来保持通信，即数据的同步等，是对整个集群成员的安全进行考虑，避免其他用户给集群胡乱添加成员．但是出现了一个问题，在设置用户名密码认证时，对于replica set而言必须设置结点之间的认证吗？我在使用的过程中发现确实必须，否则会出现结点状态是not reachable提示．</pre>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>001 mongodb集群方式Master-Slaver的搭建</title>
      <link href="/2017/05/11/mongodb/001%20mongodb-Master-Slaver%20install/"/>
      <url>/2017/05/11/mongodb/001%20mongodb-Master-Slaver%20install/</url>
      
        <content type="html"><![CDATA[<h3 id="mongodb集群方式Master-Slaver的搭建"><a href="#mongodb集群方式Master-Slaver的搭建" class="headerlink" title="mongodb集群方式Master-Slaver的搭建"></a>mongodb集群方式Master-Slaver的搭建</h3><p>这个是最简答的集群搭建，不过准确说也不能算是集群，只能说是主备。并且官方已经不推荐这种方式，所以在这里只是简单的介绍下吧，搭建方式也相对简单。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">./mongod</span> <span class="params">--master</span> <span class="params">--dbpath</span> <span class="string">/data/masterdb/</span>      <span class="comment">#主节点  </span></span><br><span class="line">  </span><br><span class="line"><span class="string">./mongod</span> <span class="params">--slave</span> <span class="params">--source</span> &lt;masterip<span class="function">:masterport</span>&gt; <span class="params">--dbpath</span> <span class="string">/data/slavedb/</span>     备节点</span><br></pre></td></tr></table></figure><p>基本上只要在主节点和备节点上分别执行这两条命令，Master-Slaver就算搭建完成了。我没有试过主节点挂掉后备节点是否能变成主节点，不过既然已经不推荐了，大家就没必要去使用了。</p>]]></content>
      
      
      <categories>
          
          <category> mongodb </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>删除字符串中的所有空白</title>
      <link href="/2017/04/18/other/delete%20String%20all%20air/"/>
      <url>/2017/04/18/other/delete%20String%20all%20air/</url>
      
        <content type="html"><![CDATA[<figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public static String replaceBlank(String str) &#123;</span><br><span class="line">String dest = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">if</span> (str!=<span class="literal">null</span>) &#123;</span><br><span class="line">Pattern p = Pattern.compile(<span class="string">"\\s*|\t|\r|\n"</span>);</span><br><span class="line">Matcher m = p.matcher(str);</span><br><span class="line">dest = m.replaceAll(<span class="string">""</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dest;</span><br><span class="line">&#125;</span><br><span class="line">注：<span class="string">\n</span> 回车(<span class="string">\u000a)</span> </span><br><span class="line"><span class="string">\t</span> 水平制表符(<span class="string">\u0009)</span> </span><br><span class="line"><span class="string">\s</span> 空格(<span class="string">\u0008)</span> </span><br><span class="line"><span class="string">\r</span> 换行(<span class="string">\u000d)*/</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>002 springMvc开始</title>
      <link href="/2017/04/11/springMvc/002.springMvc%20Start/"/>
      <url>/2017/04/11/springMvc/002.springMvc%20Start/</url>
      
        <content type="html"><![CDATA[<p>学习springMvc我们直接快速上手，以 springMvc+mybatis+mysql 为例，具体准备如下：</p><table><thead><tr><th>描述</th><th>数据</th></tr></thead><tbody><tr><td>使用版本</td><td>spring4.0+mybatis3.3.0+maven3</td></tr><tr><td>开发工具</td><td>sts3.8.3</td></tr><tr><td>JDK版本</td><td>1.8</td></tr><tr><td>实现功能</td><td>1: addOne 单条增加<br>2: addList 多条增加<br>3: remove 删除操作<br>4: removeIn 删除的in操作<br>5: modify 修改操作<br>6: queryOne 查找单条，不存在返回null<br>7: queryList 多条查询，不存在返回[]空数组<br>8: queryPage 分页查询<br>9：transaction 事务测试<br>10.切面+拦截器+过滤器+定时任务+日志</td></tr></tbody></table><p>mysql的参数：</p><table><thead><tr><th>描述</th><th>数据</th></tr></thead><tbody><tr><td>driverClassName</td><td><code>com.mysql.jdbc.Driver</code></td></tr><tr><td>url</td><td><code>jdbc:mysql://localhost:3306/demo</code></td></tr><tr><td>username</td><td><code>root</code></td></tr><tr><td>password</td><td><code>root</code></td></tr><tr><td>初始化数据库环境</td><td>1. 进入数据库<br>2. <code>CREATE DATABASE `demo` CHARACTER SET &#39;utf8&#39;  COLLATE &#39;utf8_general_ci&#39;;</code><br>3. <code>use demo</code><br>4. <code>CREATE TABLE demo(</code><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>id int primary key auto_increment,</code><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>name varchar(50),</code><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<code>intro varchar(1024)</code><br>&nbsp;&nbsp;&nbsp;&nbsp;<code>) DEFAULT CHARSET=utf8;</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>001 springMvc简介</title>
      <link href="/2017/04/08/springMvc/001.springMvc%20Introduce/"/>
      <url>/2017/04/08/springMvc/001.springMvc%20Introduce/</url>
      
        <content type="html"><![CDATA[<p>SpringMvc是Spring Framework的一部分，是基于Java实现MVC的轻量级Web框架，通过实现Model-View-Controller模式来很好地将数据、业务与展现进行解耦分离。</p><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><p>轻量高效，兼容性好，功能强大 RESTful、数据验证、格式化、绑定机制、本地化、主题等</p><h4 id="核心思想"><a href="#核心思想" class="headerlink" title="核心思想"></a>核心思想</h4><p>1、IOC(Inversion of control): 控制反转，依赖注入</p><p>2、AOP(Aspect-Oriented Programming): 切面编程，动态代理</p><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>第一步：发起请求到前端控制器(DispatcherServlet)</p><p>第二步：前端控制器请求HandlerMapping（处理器映射器）查找 Handler，可以根据xml配置、注解进行查找</p><p>第三步：处理器映射器HandlerMapping向前端控制器返回Handler</p><p>第四步：前端控制器调用处理器适配器去执行Handler</p><p>第五步：处理器适配器去执行Handler</p><p>第六步：Handler执行完成给适配器返回ModelAndView</p><p>第七步：处理器适配器向前端控制器返回ModelAndView，ModelAndView是springmvc框架的一个底层对象，包括 Model和view</p><p>第八步：前端控制器请求视图解析器去进行视图解析，根据逻辑视图名解析成真正的视图(jsp，ftl)</p><p>第九步：视图解析器向前端控制器返回View</p><p>第十步：前端控制器进行视图渲染，视图渲染将模型数据(在ModelAndView对象中)填充到request域</p><p>第十一步：前端控制器向用户响应结果</p>]]></content>
      
      
      <categories>
          
          <category> springMvc </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>linux上执行定时任务操作mysql(mongodb)</title>
      <link href="/2017/04/08/other/linux%20operate%20crontab%20mysql(mongodb)/"/>
      <url>/2017/04/08/other/linux%20operate%20crontab%20mysql(mongodb)/</url>
      
        <content type="html"><![CDATA[<p>1、 进入某个目录并创建可执行文件</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>cd mydir</span><br><span class="line"><span class="variable">$ </span>vi mytest.sh</span><br><span class="line"></span><br><span class="line"><span class="comment">### 以下创建mysql(mongodb)的命令文件</span></span><br><span class="line"><span class="comment">### mysql：</span></span><br><span class="line">mysql -u root -p <span class="number">123456</span> -e <span class="string">"  （数据库用户名密码）</span></span><br><span class="line"><span class="string">        use database_name（数据库名字）</span></span><br><span class="line"><span class="string">        update wxch_prize_count set count=0;"</span>  （执行的sql语句）</span><br><span class="line">        </span><br><span class="line"><span class="comment">### mongodb</span></span><br><span class="line">mongo <span class="variable">$server</span><span class="symbol">:</span><span class="variable">$port</span>/<span class="variable">$database</span> -u <span class="variable">$name</span> -p <span class="variable">$password</span> -quiet /xxx/work_user_day_record.js(此文件为mongo操作脚本，类js)</span><br></pre></td></tr></table></figure><p>2、  保存 mytest.sh 后。设置linux的定时任务：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ crontab -e</span><br><span class="line"></span><br><span class="line">### 输入:</span><br><span class="line"><span class="number">0</span> <span class="number">5</span> * * * sh /mydir/mytest.sh（每天凌晨<span class="number">5</span>点跑一次）</span><br></pre></td></tr></table></figure><p>3、 保存退出。</p><p>开启linux定时任务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="regexp">/etc/i</span>nit.d<span class="regexp">/crond start</span></span><br></pre></td></tr></table></figure><p>重启linux定时任务：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="regexp">/etc/i</span>nit.d<span class="regexp">/crond restart</span></span><br></pre></td></tr></table></figure><p>4、现在可以查看定时任务：（会显示linux的全部定时任务，其中包含了我们之前写的定时任务命令）</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>crontab -l</span><br></pre></td></tr></table></figure><h4 id="注："><a href="#注：" class="headerlink" title="注："></a>注：</h4><p>开启定时任务前，手动运行下脚本，再查看数据库确认是否成功:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.<span class="regexp">/mydir/my</span>test.sh</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>session共享(单点登录)</title>
      <link href="/2017/04/08/other/session%20share(one%20login)/"/>
      <url>/2017/04/08/other/session%20share(one%20login)/</url>
      
        <content type="html"><![CDATA[<p>多个tomcat运行不同项目共享session——使用redis方法</p><h3 id="方法一-：-修改tomcat-通常同一项目集群用"><a href="#方法一-：-修改tomcat-通常同一项目集群用" class="headerlink" title="方法一 ： 修改tomcat(通常同一项目集群用)"></a>方法一 ： 修改tomcat(通常同一项目集群用)</h3><p>1、Tomcat7/tomcat6下</p><p>2、以下3个jar：放入tomcat的lib文件夹</p><p>(1) <a href="/images/other/session-redis.jar">tomcat-redis-session-manager.jar</a></p><p>(2) <a href="/images/other/commons-pool2-2.3.jar">commons-pool2.jar</a></p><p>(3) <a href="/images/other/jedis-2.7.2.jar">jedis.jar</a></p><p>3、修改每个tomcat的context.xml文件</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Valve <span class="built_in">className</span>=<span class="string">"com.orangefunction.tomcat.redissessions.RedisSessionHandlerValve"</span> /&gt;  </span><br><span class="line">&lt;Manager <span class="built_in">className</span>=<span class="string">"com.orangefunction.tomcat.redissessions.RedisSessionManager"</span>  </span><br><span class="line">             host=“redis的ip”  </span><br><span class="line">             port=<span class="string">"6379"</span>    <span class="comment">//redis的端口</span></span><br><span class="line">             database=<span class="string">"0"</span>  <span class="comment">//redis的第0个库</span></span><br><span class="line">             maxInactiveInterval=<span class="string">"60"</span></span><br><span class="line">             password=<span class="string">"这里写redis的密码（如果有）"</span>/&gt;</span><br></pre></td></tr></table></figure><p>4、server.xml中加载项目：（每个项目tomcat的path必须相同才能获取同一个session）</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">"demo-web"</span> <span class="attribute">path</span>=“/此处相同” <span class="attribute">reloadable</span>=<span class="string">"true"</span></span><br><span class="line"><span class="attribute">source</span>=<span class="string">"org.eclipse.jst.jee.server:demo-web"</span>/&gt;</span><br></pre></td></tr></table></figure><p>5、注意：如果要放入session中的是类，要实现序列化接口，序列号相同</p><p>以上方法有缺陷，需要项目名称一样</p><p>###方法二 ： 基于spring-session（分布式session） </p><p>原理：</p><p>spring-session无缝替换应用服务器的request大概原理是<br>1.自定义个Filter，实现doFilter方法<br>2.继承 HttpServletRequestWrapper 、HttpServletResponseWrapper 类，重写getSession等相关方法(在这些方法里调用相关的 session存储容器操作类)。<br>3.在 第一步的doFilter中，new 第二步 自定义的request和response的类。并把它们分别传递 到 过滤器链 </p><p>4.把该filter配置到 过滤器链的第一个位置上</p><p>实现：</p><p>(1)spring session可以利用redis透明的存储并共享web应用的HttpSession，当结合spring boot使用时，更是大大的节省了我们整合的时间。</p><p>1、pom.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- redis starter --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- spring session的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、开启spring session配置</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@SpringBootApplication</span></span><br><span class="line"><span class="variable">@EnableRedisHttpSession</span></span><br><span class="line">public class SpringApplication &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的例子中，使用的是Redis来存储应用的session，当然spring session还支持以下几种方式</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">EnableGemFireHttpSession</span></span><br><span class="line"><span class="attribute">EnableMongoHttpSession</span></span><br><span class="line"><span class="attribute">EnableJdbcHttpSession</span></span><br></pre></td></tr></table></figure><p>当然pom文件里面要加上各自对应的依赖。当添加完依赖之后，我们需要开启spring session的配置，该配置会负责创建一个Servlet的过滤器:SessionRepositoryFilter，该过滤器负责包装HttpServletRequest，并将替换HttpSession的实现</p><p>3、HttpSession策略</p><p>3.在 第一步的doFilter中，new 第二步 自定义的request和response的类。并把它们分别传递 到 过滤器链 </p><p>默认的情况下，使用的是CookieHttpSessionStrategy，这种策略将允许使用setCookieName来指定Cookie的名称，如果不指定，默认是SESSION。当一个会话被创建时，HTTP响应将会有一个包含指定cookie名称和session id的cookie。spring session也支持其他的策略，如下：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">HeaderHttpSessionStrategy</span></span><br><span class="line"><span class="attribute">MultiHttpSessionStrategyAdapter</span></span><br></pre></td></tr></table></figure><p>如何配置HttpSession策略，方式如下(默认使用的是CookieHttpSessionStrategy):</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpSessionConfig</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@Bean</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> HttpSessionStrategy <span class="title">httpSessionStrategy</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> CookieHttpSessionStrategy();</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、增加redis配置</p><p>由于session信息被过滤器拦截之后，会存放在redis中，因此，我们需要添加redis的配置。</p><p>5、使用的方式和原来的方式一致，不需要做任何的改变。使用后可以查看redis中的数据</p><p>6、和springcloud-zuul合用时</p><p>我们发现每次请求经过zuul的时候，session就会发生改变，导致后面的请求获取不到session中的内容，由于cookie丢失导致。</p><p>cookie丢失的问题是由于springboot 默认的配置是讲request中的cookie信息给去掉了。需要配置zuul不去掉任何request中的东西。在application.properties文件中配置：全局（zuul.sensitive-headers=）可解决</p><p>具体服务zuul.routes.api-a.sensitiveHeaders=”*” </p><p>原文：<a href="https://blog.csdn.net/liuchuanhong1/article/details/78432401" target="_blank" rel="noopener">https://blog.csdn.net/liuchuanhong1/article/details/78432401</a> </p><p>(2)springMvc4未经过测试，所以推荐查看：<a href="http://blog.csdn.net/moxies8090/article/details/53355244" target="_blank" rel="noopener">http://blog.csdn.net/moxies8090/article/details/53355244</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>007 Maven聚合</title>
      <link href="/2017/04/07/maven/007.Maven%20Aggregate/"/>
      <url>/2017/04/07/maven/007.Maven%20Aggregate/</url>
      
        <content type="html"><![CDATA[<p>简单举个例子：</p><p>目录结构：父文件夹下包含几个子文件夹</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;app-parent</span><br><span class="line">&gt;app-controller</span><br><span class="line">pom.xml</span><br><span class="line">&gt;app-service</span><br><span class="line">pom.xml</span><br><span class="line">&gt;app-dao</span><br><span class="line">pom.xml</span><br><span class="line">&gt;app-dto</span><br><span class="line">pom.xml</span><br><span class="line">pom.xml</span><br></pre></td></tr></table></figure><p>父pom中：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></span><br><span class="line"><span class="xml">xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project_groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span>App Parent<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project_version</span>&gt;</span>1.0.0<span class="tag">&lt;/<span class="name">project_version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project_groupId</span>&gt;</span>com.yxjn.app<span class="tag">&lt;/<span class="name">project_version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modules</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">module</span>&gt;</span>app-controller<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">module</span>&gt;</span>app-service<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">module</span>&gt;</span>app-dao<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">module</span>&gt;</span>app-dto<span class="tag">&lt;/<span class="name">module</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">modules</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>app-controller中的pom</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></span><br><span class="line"><span class="xml">xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-controller<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project_groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project.groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project.groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-dao<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project.groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-dto<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>app-service中的pom</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></span><br><span class="line"><span class="xml">xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-service<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project_groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">relativePath</span>&gt;</span>../pom.xml<span class="tag">&lt;/<span class="name">relativePath</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project.groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-dao<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>$</span><span class="template-variable">&#123;project.groupId&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-dto<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;project_version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中父pom中<modules>声明了项目聚合了多少子项目，子项目中<parent>说明依赖那个parent中的pom.xml，如此下去，之后打包等都在parent中就可以。</parent></modules></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>006 Maven插件</title>
      <link href="/2017/04/06/maven/006.Maven%20Plugin/"/>
      <url>/2017/04/06/maven/006.Maven%20Plugin/</url>
      
        <content type="html"><![CDATA[<h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Maven的核心只是定义了生命周期，所有任务的执行都是有插件完成，插件是以独立方式存在。maven会下载关联的插件执行任务（一个插件通常可以完成多个生命周期的任务）。</p><h4 id="插件绑定"><a href="#插件绑定" class="headerlink" title="插件绑定"></a>插件绑定</h4><p>Ⅰ、Maven内置绑定了一些重要的生命周期的插件。</p><p>以下是生命周期对于的默认插件：</p><p>（1）clean</p><table><thead><tr><th>生命周期</th><th>默认插件</th><th>功能</th></tr></thead><tbody><tr><td>1、clean:clean</td><td>maven-clean-plugin:clean</td><td>删除项目输出目录</td></tr></tbody></table><p>（2）default（打不同包插件有所区别，以打jar包为例）</p><table><thead><tr><th>生命周期</th><th>默认插件</th><th>功能</th></tr></thead><tbody><tr><td>1、process-resources</td><td>maven-resources-plugin:resources</td><td>复制主资源文件到主输出目录</td></tr><tr><td>2、compile</td><td>maven-compile-plugin:compile</td><td>编译主代码到主输出目录</td></tr><tr><td>3、process-test-resources</td><td>maven-resources-plugin:testResources</td><td>复制测试资源文件到测试输出目录</td></tr><tr><td>4、test-compile</td><td>maven-compile-plugin:testCompile</td><td>编译测试代码到测试输出目录</td></tr><tr><td>5、test</td><td>maven-surefire-plugin:test</td><td>执行测试</td></tr><tr><td>6、package</td><td>maven-jar-plugin:jar</td><td>打jar包</td></tr><tr><td>7、install</td><td>maven-install-plugin:install</td><td>构建jar放到本地仓库</td></tr><tr><td>8、deploy</td><td>maven-deploy-plugin:deploy</td><td>构建jar放到远程仓库</td></tr></tbody></table><p>（3）site</p><table><thead><tr><th>生命周期</th><th>默认插件</th><th>功能</th></tr></thead><tbody><tr><td>1、site:site</td><td>maven-site-plugin:site</td><td>生成项目站点</td></tr><tr><td>2、site:site-deploy</td><td>maven-site-plugin:deploy</td><td>将项目站点部署到远程服务器上</td></tr></tbody></table><p>Ⅱ、除了默认的插件绑定，其他生命周期阶段没有绑定任何插件，可自行绑定</p><p>以下为打源码jar举例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-source-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>attach-sources<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>jar-no-fork<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>每个execution是一个任务，先配置了一个id为attach-sources的任务，通过phase，将生命周期的verify阶段绑定了插件的jar-no-fork目标。这个插件会打源码包，并以 -sources.jar 结尾。</p><p>注：有时候插件目标里已经绑定了生命周期阶段，这个时候phase也可以不写。当多个插件目标绑定同一个生命周期阶段时，按照插件声明的顺序执行。</p><p>Ⅲ、插件配置好后，还可以通过命令行配置插件目标</p><p>-D 是java自带的，设置一个java系统属性。以下为运行default:install时，跳过test的生命周期，即不执行test：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="keyword">install</span> -Dmaven.<span class="keyword">test</span>.skip=<span class="keyword">true</span></span><br></pre></td></tr></table></figure><p>命令行使用插件：如 mvn eclipse:eclipse</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn [options] <span class="meta">[&lt;goal(s)&gt;]</span> <span class="meta">[&lt;phase(s)&gt;]</span></span><br></pre></td></tr></table></figure><p>Ⅳ、插件的配置</p><p>（1）全局配置：指定以某个版本编译</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">source</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">target</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（2）为插件绑定特定自定义任务。maven-antrun-plugin,有个run目标，可以调用ant任务,在生命周期verify时，输出一句话：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-antrun-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>xxxxxx<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">phase</span>&gt;</span>verify<span class="tag">&lt;/<span class="name">phase</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>run<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tasks</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">echo</span>&gt;</span>this is output<span class="tag">&lt;/<span class="name">echo</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tasks</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅴ、插件仓库</p><p>默认插件groupId：org.apache.maven.plugins(默认时可以不写groupId)</p><p>官方插件库：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pluginRepositories</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>Maven plugin<span class="tag">&lt;/<span class="name">name</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">url</span>&gt;</span>htpp://repo1.maven.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">enabled</span>&gt;</span>true<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">releases</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">updatePolicy</span>&gt;</span>never<span class="tag">&lt;/<span class="name">updatePolicy</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">releases</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">pluginRepository</span>&gt;</span>    </span><br><span class="line"><span class="tag">&lt;/<span class="name">pluginRepositories</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="测试插件-maven-surefire-plugin"><a href="#测试插件-maven-surefire-plugin" class="headerlink" title="测试插件 maven-surefire-plugin"></a>测试插件 maven-surefire-plugin</h4><p>（1）JUnit</p><p>Ⅰ、默认test的目标是测试源码路径（src/test/java/）下所有符合以下命名的文件：</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1、*<span class="strong">*/Test*</span>.java</span><br><span class="line">2、*<span class="strong">*/*</span>Test.java</span><br><span class="line">3、*<span class="strong">*/*</span>TestCase.java</span><br></pre></td></tr></table></figure><p>动态指定运行的测试，几种方式，My1Test等为待测试的类</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="keyword">test</span> -Dtest=My*<span class="keyword">Test</span>  (*通配符)</span><br><span class="line">mvn <span class="keyword">test</span> -Dtest=My1Test,My2Test,You*<span class="keyword">Test</span></span><br></pre></td></tr></table></figure><p>以下命令是的即使没有测试也不报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="built_in">test</span> -Dtest -DfailIfNoTest=<span class="literal">false</span></span><br></pre></td></tr></table></figure><p>Ⅱ、除了默认的测试类命名规则，还可以配置如下(包含不在约定命名和去除某些测试)：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*Teee.java<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclude</span>&gt;</span>**/My*Test.java<span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅲ、跳过测试运行</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn <span class="keyword">package</span> <span class="title">-DskipTests</span></span><br></pre></td></tr></table></figure><p>也可以在pom中使用 maven-surefire-plugin 插件来提供这个属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅳ、跳过测试编译与运行</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">maven package -Dmaven<span class="selector-class">.test</span><span class="selector-class">.skip</span>=true</span><br></pre></td></tr></table></figure><p>也可以在pom中使用 maven-compiler-plugin，maven-surefire-plugin 插件来提供这个属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">skip</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skip</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">skipTests</span>&gt;</span>true<span class="tag">&lt;/<span class="name">skipTests</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅴ、测试报告</p><p>在 target/surefire-reports 目录下生成2种格式错误报告：</p><p>1、简单文本格式</p><p>2、junit兼容的xml格式</p><p>Ⅵ、测试覆盖率报告，cobertura-maven-plugin</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>cobertura:cobertura</span><br></pre></td></tr></table></figure><p>在 target/site/cobertura/ 目录下会出现 index.html 文件显示测试覆盖率</p><p>（2）TestNG</p><p>Ⅰ、使用名为 testng.xml 配置需要测试的类</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">suite</span> <span class="attr">name</span>=<span class="string">"suite1"</span> <span class="attr">verbose</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">test</span> <span class="attr">name</span>=<span class="string">"test1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">classes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">class</span> <span class="attr">name</span>=<span class="string">"com.xxx.web.service.My1Test"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">classes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suite</span>&gt;</span></span><br></pre></td></tr></table></figure><p>使用 maven-surefire-plugin 配置 pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">suiteXmlFile</span>&gt;</span>testng.xml<span class="tag">&lt;/<span class="name">suiteXmlFile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">suiteXmlFiles</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅱ、TestNG可以使用测试组，在代码里：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test(groups = &#123;<span class="meta-string">"myTestGroup"</span>, <span class="meta-string">"mainTestGroup"</span>&#125;)</span></span><br></pre></td></tr></table></figure><p>使用 maven-surefire-plugin 配置 pom，归类测试</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groups</span>&gt;</span>myTestGroup,mainTestGroup<span class="tag">&lt;/<span class="name">groups</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅲ、打测试文件的包以供其他项目使用 maven-jar-plugin，在package生命周期</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-jar-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>test-jar<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>其他项目引用时 dependency中添加</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="built_in">type</span>&gt;<span class="built_in">test</span>-jar&lt;/<span class="built_in">type</span>&gt;</span><br><span class="line">&lt;scope&gt;<span class="built_in">test</span>&lt;/scope&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>005 Maven生命周期</title>
      <link href="/2017/04/05/maven/005.Maven%20Life/"/>
      <url>/2017/04/05/maven/005.Maven%20Life/</url>
      
        <content type="html"><![CDATA[<p>mavn拥有3套独立的生命周期：clean、default和site</p><h4 id="clean：清理项目"><a href="#clean：清理项目" class="headerlink" title="clean：清理项目"></a>clean：清理项目</h4><p>（1）pre-clean</p><p>执行一些清理前需要完成的工作</p><p>（2）clean</p><p>清理上一次构建生成的文件</p><p>（3）post-clean </p><p>执行一些清理后需要完成的工作</p><h4 id="default：构建项目（核心）"><a href="#default：构建项目（核心）" class="headerlink" title="default：构建项目（核心）"></a>default：构建项目（核心）</h4><p>（1）validate</p><p>（2）initialize</p><p>（3）generate-sources</p><p>（4）process-sources</p><p>处理项目主资源文件。一般，对 src/java/resources 目录内的内容进行项目替换等工作后，复制到项目输出的主classpath目录中。</p><p>（5）generate-resources</p><p>（6）process-resources</p><p>（7）compile</p><p>编译项目主源码。一般，对 src/java/main 编译到输出的主classpath目录中。</p><p>（8）process-classes</p><p>（9）generate-test-sources</p><p>（10）process-test-sources</p><p>处理项目测试资源文件。一般，对 src/test/resources 目录内的内容进行项目替换等工作后，复制到项目输出的主classpath目录中。</p><p>（11）generate-test-resources</p><p>（12）process-test-resources</p><p>（13）test-compile</p><p>编译项目测试源码。一般，对 src/test/main 编译到输出的主classpath目录中。</p><p>（14）process-test-classes</p><p>（15）test</p><p>测试框架测试，不会打包部署。</p><p>（16）prepare-package</p><p>（17）package</p><p>将编译的代码打包。</p><p>（18）pre-integration-test</p><p>（19）integration-test</p><p>（20）post-integration-test</p><p>（21）verify</p><p>（22）install</p><p>将打好的包放到maven本地仓库。</p><p>（23）deploy</p><p>将打好的包放到maven远程仓库。</p><p>####site：建立与发布项目</p><p>（1）pre-site</p><p>执行一些生成项目站点前需要完成的工作</p><p>（2）site</p><p>生成项目站点</p><p>（3）post-site</p><p>执行一些生成项目站点后需要完成的工作</p><p>（4）site-deploy</p><p>将生成的项目站点发布到服务器上</p><h4 id="执行maven生命周期的指令"><a href="#执行maven生命周期的指令" class="headerlink" title="执行maven生命周期的指令"></a>执行maven生命周期的指令</h4><p>maven的3个独立生命周期指令可以一起执行，也可以单独执行，如：</p><p>一起执行：执行了clean的1-2步，default的1-22步，site的1-2步：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean install site</span><br></pre></td></tr></table></figure><p>单独执行：执行了default的1-22步</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>install</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>004 Maven仓库</title>
      <link href="/2017/04/04/maven/004.Maven%20Repository/"/>
      <url>/2017/04/04/maven/004.Maven%20Repository/</url>
      
        <content type="html"><![CDATA[<h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><p>在学习maven仓库之前，必须先学会坐标与依赖。maven仓库的布局就是基于maven坐标的。</p><p>（1）坐标</p><p>以下是一个示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baidu.myapp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>weba<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br></pre></td></tr></table></figure><p>坐标包含groupId，artifactId，version，packaging，classifier。前3个是必须的，package可选（不写默认jar）,而classifier是不能直接定义的。前4个之前已经介绍过，这里讲下classifier。</p><p>classifier：该元素用来帮助定义构建输出的一些附属构建。对应主构件：比如一个jar包含了java文档和源代码，这时候就有这两个附属构建的classifier。例子：TestNG主构件是基于java1.4的，但是它还有个基于java1.5的附属构建。附属构建是由附加的插件生成的，不能直接定义。</p><p>（2）依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>...<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">type</span>&gt;</span>...<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>...<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>...<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">exclusion</span>&gt;</span>...<span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"><span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>groupId，artifactId，version是必须的，不做介绍了</p></li><li><p>type：对应开发时的package，默认jar</p></li><li><p>scope：依赖范围</p><p>  有compile，test，provided，runtime，system</p></li></ul><table><thead><tr><th>scope</th><th>编译有效</th><th>测试有效</th><th>运行时有效</th><th>例子</th></tr></thead><tbody><tr><td>compile</td><td>Y</td><td>Y</td><td>Y</td><td>spring-core</td></tr><tr><td>test</td><td></td><td>Y</td><td></td><td>JUnit</td></tr><tr><td>provided</td><td>Y</td><td>Y</td><td></td><td>servlet-api</td></tr><tr><td>runtime</td><td></td><td>Y</td><td>Y</td><td>JDBC驱动实现</td></tr><tr><td>system</td><td>Y</td><td>Y</td><td></td><td>本地类库文件</td></tr></tbody></table><pre><code>依赖是可传递的，对于不同的依赖范围传递性也不一样。A对B第一直接依赖（下表的第一竖列），B对C第二直接依赖（下表的第一横行），得到的就是A对C的依赖是否传递</code></pre><table><thead><tr><th></th><th>compile</th><th>test</th><th>provided</th><th>runtime</th></tr></thead><tbody><tr><td>compile</td><td>compile</td><td></td><td></td><td>runtime</td></tr><tr><td>test</td><td>test</td><td></td><td></td><td>test</td></tr><tr><td>provided</td><td>provided</td><td></td><td>provided</td><td>provided</td></tr><tr><td>runtime</td><td>runtime</td><td></td><td></td><td>runtime</td></tr></tbody></table><pre><code>第一原则：当引入2个依赖X，Y时；X-&gt;B-&gt;C-&gt;D(1.0)，Y-&gt;E-&gt;D(2.0)。前一个D需要3步，后一个D需要2步，所以这里只有D(2.0)会被解析，可达性优先原则。第二原则：当引入2个依赖X，Y时；X-&gt;B-&gt;D(1.0)，Y-&gt;E-&gt;D(2.0)。前一个D需要2步，后一个D需要2步，当X在pom.xml中先声明，则这里只有D(1.0)会被解析，声明优先原则。（Maven2.0.9后）</code></pre><ul><li><p>optional：标记依赖是否可选</p><p>  在理想情况下，不使用可选依赖。可选依赖不可传递。</p></li><li><p>exclusions：排除传递性依赖</p><p>  由于传递依赖会给项目隐式的引入很多依赖，很方便了使用者，但是有时候传递依赖中有一些不稳定的依赖，如SNAPSHOT版本，或我们需要更高版本的jar等。这时，我们可以使用排除不稳定（低版本）传递性依赖，然后添加我们需要的版本依赖。</p></li></ul><p>（3）优化依赖</p><p>Ⅰ、使用统一的版本管理,定义与引用如下：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">xxx.version</span>&gt;</span>2.0.0<span class="tag">&lt;/<span class="name">xxx.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>...<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;xxx.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>Ⅱ、以上，我们知道maven根据传递原则会过滤一些重复依赖，最终的依赖我们成为解析依赖。我们可以查看所有的解析依赖，代码：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn dependency:<span class="built_in">list</span></span><br></pre></td></tr></table></figure><p>我们还可以通过依赖树来详细的了解依赖的传递关系(已经解析的依赖树)，代码：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>dependency:tree</span><br></pre></td></tr></table></figure><p>我们还可以通过maven来查看依赖是否显示声明还是使用了传递依赖。首先得到<b>Used undeclared dependencies found</b>，这是没有显式声明，但我们正在使用的jar，这些import的jar有一些隐藏的风向，假如依赖版本更改，我们不易察觉，推荐直接显式声明；其次得到<b>Unused declared dependencies found</b>指项目中未用到的jar，对于这些，我们需要仔细分析（这里代码分析出来的只是编译主代码和测试代码用到的jar，对于执行测试或运行时需要的jar没有发现），只有在确定完全没有使用到的时候才能删除依赖。maven分析代码：</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>dependency:analyze</span><br></pre></td></tr></table></figure><h4 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h4><p>Maven中的仓库用来存放生成的构建和各种依赖。严格说来只有两种仓库：本地和远程。本地仓库指本机的一份拷贝，用来缓存远程下载、包含你尚未发布的临时构件。</p><p>远程仓库指通过各种协议如file:// 和http:// 访问的其它类型的仓库。这些仓库可能是第三方搭建的真实的远程仓库，用来提供他们的构件下载（例如repo.maven.apache.org和uk.maven.org是Maven的中央仓库）。其它“远程”仓库可能是你的公司拥有的建立在文件或HTTP服务器上的内部仓库，用来在开发团队间共享私有构件和管理发布。</p><p>本地和远程仓库有着相同的结构，所以脚本可以很容易地在两边运行，或同步仓库供离线使用。不过，一般情况下，仓库内部的布局对Maven用户是完全透明的。</p><p>（1）本地仓库</p><p>本地仓库位置定义在maven的conf/setting.xml中，就是第二节我们提到的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/.m2/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>默认位置是：~/.m2/repository</p><p>用户在使用maven时，都会把jar下载到本地的仓库中，才能被项目使用到。比如：我们执行mvn clean install 时，maven会自动把pom.xml文件中需要的jar从远程仓库下载到本地仓库，项目再去引用。</p><p>（2）远程仓库</p><p>远程仓库的配置也是通过setting文件，如第二节的</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 中央仓库1 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">         <span class="comment">&lt;!-- 中央仓库2 --&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo2.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Ⅰ、中央仓库 ——中央仓库是默认的远程仓库，maven安装文件自带了中央仓库。在$M2_HOME/lib/maven-model-builder-3.0.jar(maven3),然后找到 org/apache/maven/model/pom-4.0.0.xml中的中央仓库声明。这个文件是所有Maven项目都会继承的超级pom。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">repositories</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">repository</span>&gt;</span><span class="tag">&lt;<span class="name">id</span>&gt;</span>central<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>Central Repository<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo.maven.apache.org/maven2<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">layout</span>&gt;</span>default<span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">enabled</span>&gt;</span>false<span class="tag">&lt;/<span class="name">enabled</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">snapshots</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">repositories</span>&gt;</span></span><br></pre></td></tr></table></figure><p>snapshots的false表示不下载快照版本。自己还可以配置updatePolicy（从远程仓库更新的频率，默认daliy每天，还有never从不，always每次构建，inerval:N每隔N分钟）；checksumPolicy（检查检验和文件的策略，从maven下载构建时，会验证校验和文件，校验失败时，默认warn输出警告，fail构建失败，ignre忽略错误）</p><p>Ⅱ、私服 ——私服可以让一些外部无法下载到的东西，本地上传后供合作者使用。</p><p>有以下特点：</p><p>1.节省外网流量。jar等只需要从外网下载一次到私服，以后团队只需要从私服下载；</p><p>2.加速Maven构建。下载快速使构建加快；</p><p>3.部署自己内部的jar等；</p><p>4.提高下载jar等的稳定性；</p><p>（3）远程仓库的认证</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">setting</span>&gt;</span></span><br><span class="line">    ...    <span class="tag">&lt;<span class="name">servers</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>仓库的id<span class="tag">&lt;/<span class="name">id</span>&gt;</span>      <span class="tag">&lt;<span class="name">username</span>&gt;</span>...<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">password</span>&gt;</span>...<span class="tag">&lt;/<span class="name">password</span>&gt;</span>      <span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">servers</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">setting</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（4）发布构件到远程仓库</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">project</span>&gt;</span></span><br><span class="line">    ...    <span class="tag">&lt;<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">repository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>proj-releases<span class="tag">&lt;/<span class="name">id</span>&gt;</span>      <span class="tag">&lt;<span class="name">name</span>&gt;</span>proj releases name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://xxxxxx/repositories/pro-releases<span class="tag">&lt;/<span class="name">url</span>&gt;</span>            <span class="tag">&lt;/<span class="name">repository</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">snapshotRepository</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>proj-snapshots<span class="tag">&lt;/<span class="name">id</span>&gt;</span>      <span class="tag">&lt;<span class="name">name</span>&gt;</span>proj snapshots name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://xxxxxx/repositories/pro-snapshots<span class="tag">&lt;/<span class="name">url</span>&gt;</span>      <span class="tag">&lt;/<span class="name">snapshotRepository</span>&gt;</span>    <span class="tag">&lt;/<span class="name">distributionManagement</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    ...   </span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>repository为发布版本，snapshotRepository为快照版本。之后用以下发布到远程仓库。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>003 POM_Demo编写</title>
      <link href="/2017/04/03/maven/003.HelloWorld%20Code/"/>
      <url>/2017/04/03/maven/003.HelloWorld%20Code/</url>
      
        <content type="html"><![CDATA[<h4 id="pom-xml"><a href="#pom-xml" class="headerlink" title="pom.xml"></a>pom.xml</h4><p>POM(Project Object Model，项目对象模型)定义了项目的基本信息，用于描述项目如何构建，声明项目依赖等等。</p><p>最简单的POM示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.company.app<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>app-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>app-web<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">description</span>&gt;</span>this is demo<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>modelVersion指定了当前的POM模型版本，maven2和maven3固定为4.0.0</li><li>groupId定义了所属项目组，往往和组织相关，比如：com.baidu.appname</li><li>artifactId定义了当前项目组中的唯一Id，比如：appname-web，appname-service，appname-dao</li><li>version定义了当前项目开发的当前版本，SNAPSHOT表示快照，还在开发中，不稳定</li><li>package定义打包的类型，jar，war，pom</li><li>name定义项目的友好名称，不是必须的</li><li>describe定义了项目的描述，不是必须的</li></ul><h4 id="java代码"><a href="#java代码" class="headerlink" title="java代码"></a>java代码</h4><p>项目主代码和测试代码分别位于src/main/java和src/test/java。测试代码并不会打包，只在运行测试用到</p><p>1.我们在主代码中编写</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">package com.example;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Demo</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>)</span> &#123;</span><br><span class="line">System.<span class="keyword">out</span>.println(<span class="string">"这是一个Demo"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们清理target目录：mvn clean。编译主代码：mvn compile，会在target中看到编译好的Demo.class</p><p>2.编写测试类</p><p>编写测试类前需要添加jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里scope是依赖范围，这里test表示该依赖只对测试有效。未写表示默认compile，对主代码和测试代码都有效。测试代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DemoApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testDemo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试主要有3步：准备测试类与数据，执行测试，检查结果。这里没有体现出来。</p><p>写完测试可以运行 mvn clean test</p><p>测试结束成功后可以打包了 mvn clean package，会在target中出现我们打的包jar，用于发布运行</p><h4 id="运用maven生成基本框架"><a href="#运用maven生成基本框架" class="headerlink" title="运用maven生成基本框架"></a>运用maven生成基本框架</h4><p>（1）maven3：mvn archetype:generate。会跳出输入groupId，artufactId等，安装提示输入即可</p><p>（2）sts（eclipse）：右键-》New-》Maven project（去掉create a new simple project）-》选择maven-archetype-quickstart -》填写groupId，artifactId-》finish</p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>002 Maven3安装</title>
      <link href="/2017/04/02/maven/002.Maven%20Install/"/>
      <url>/2017/04/02/maven/002.Maven%20Install/</url>
      
        <content type="html"><![CDATA[<h4 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h4><p>安装JDK，这里以mac os安装jdk8为例</p><ul><li><p>下载网址：</p><p>  <a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a> 双击打开按提示就可以安装完成</p></li><li><p>设置环境变量</p><p>  打开终端查看安装的java并设置环境变量</p>  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -<span class="keyword">version</span></span><br><span class="line">sudo <span class="keyword">vi</span> .<span class="keyword">profile</span></span><br></pre></td></tr></table></figure><p>  输入</p>  <figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JAV<span class="built_in">A_HOME</span>=`/usr/libexec/jav<span class="built_in">a_home</span>`</span><br><span class="line">export JAV<span class="built_in">A_HOME</span></span><br></pre></td></tr></table></figure><p>  保存退出</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .profile</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$JAVA_HOME</span></span><br></pre></td></tr></table></figure><p>  使配置生效，并查看JAVA_HOME是否设置正确</p></li></ul><h4 id="安装MAVEN"><a href="#安装MAVEN" class="headerlink" title="安装MAVEN"></a>安装MAVEN</h4><ul><li><p>下载网址</p><p>  <a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a> 解压放在自己的目录即可</p></li><li><p>设置环境变量</p><p>  打开终端设置环境变量</p>  <figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vi</span> .<span class="keyword">profile</span></span><br></pre></td></tr></table></figure><p>  输入</p>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">JAVA_HOME</span>=`/usr/libexec/java_home`</span><br><span class="line"><span class="attribute">M2_HOME</span>=<span class="string">"/../apache-maven-3.3.9"</span></span><br><span class="line"><span class="builtin-name">export</span> JAVA_HOME</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="string">"<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$M2_HOME</span>/bin:/opt/local/bin:/opt/local/sbin:<span class="variable">$PATH</span>"</span></span><br></pre></td></tr></table></figure><p>  保存退出</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> .profile</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$M2_HOME</span></span><br><span class="line">mvn -v</span><br></pre></td></tr></table></figure><p>  使配置生效，并查看M2_HOME和Maven版本是否设置好</p></li><li><p>MAVEN_OPTS环境变量</p><p> 由于maven命令实际上就是运行的java命令，那么java的命令参数也在maven中。<br> 可以设置MAVEN_OPTS为-Xms128m -Xmx512m防止内存溢出</p></li><li><p>修改setting文件(这里没有添加私有库和密码)</p><p>  settings标签下添加，来设置本地仓库位置</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">localRepository</span>&gt;</span>/.m2/repository<span class="tag">&lt;/<span class="name">localRepository</span>&gt;</span></span><br></pre></td></tr></table></figure><p>  添加国内镜像，使下载jar包速度快些</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirrors</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 中央仓库1 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo1<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo1.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 中央仓库2 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>repo2<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>Human Readable Name for this Mirror.<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://repo2.maven.org/maven2/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">mirrors</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>1.修改conf/setting.xml建议复制一份再修改</p><p>2.设置sts(eclipse)工具，使用修改过的setting.xm文件</p><p><img src="/images/maven/sts-maven-setting.png" alt="sts设置"></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>001 Maven简介</title>
      <link href="/2017/04/01/maven/001.Maven%20Introduce/"/>
      <url>/2017/04/01/maven/001.Maven%20Introduce/</url>
      
        <content type="html"><![CDATA[<p>Maven是一个项目管理和整合的工具。Maven为开发者提供了一套完整的构建生命周期框架。开发团队基本不用花多少时间就能自动完成工程的基础构建配置，因为Maven使用了一个标准的目录结构和一个默认的构建生命周期。在创建报告、检查、构建和测试自动配置时，Maven可以让开发者的工作变得更简单。</p><p>pom.xml：Maven工程结构和内容被定义在pom.xml中，全称即为project object moduel.</p><p>约定优于配置：Maven使用约定而不是配置，意味着开发者不需要再自己创建构建过程。<br>当创建Maven工程时，Maven会创建默认的工程结构，开发者只需要合理的放置配置文件而在pom.xml中无需做任何配置。</p><p>下面的表格展示了默认的源码、配置文件、编译后文件的默认存储位置：</p><table><thead><tr><th>配置项</th><th>默认值</th></tr></thead><tbody><tr><td>程序代码</td><td>/src/main/java</td></tr><tr><td>配置文件</td><td>/src/main/resources</td></tr><tr><td>测试代码</td><td>/src/test</td></tr><tr><td>编译过的代码等</td><td>/target</td></tr></tbody></table><p> <img src="/images/maven/java-jiegou.png" alt="maven项目默认结构"></p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="http://baike.baidu.com/link?url=QaIDyG7_uiWvVE_QmI7387Fc0ILPLsGgBCF4cH3skU2PvOFaaqw-NVawPZ8jIh8FZpyPuv4jeJSVqjUWKsD58a" target="_blank" rel="noopener">1、百度百科</a></p>]]></content>
      
      
      <categories>
          
          <category> maven </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/03/31/hello-world/"/>
      <url>/2017/03/31/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
