<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雨中风筝</title>
  
  <subtitle>雨，淅淅沥沥的下；风筝，摇曳穿梭</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://20177.win/"/>
  <updated>2019-12-18T07:18:18.047Z</updated>
  <id>http://20177.win/</id>
  
  <author>
    <name>YaoJie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>springboot2.2.2 多租户saas（动态数据源，多数据源动态切换）</title>
    <link href="http://20177.win/2019/12/18/springboot/dynamic%20data%20source/"/>
    <id>http://20177.win/2019/12/18/springboot/dynamic data source/</id>
    <published>2019-12-18T11:06:54.000Z</published>
    <updated>2019-12-18T07:18:18.047Z</updated>
    
    <content type="html"><![CDATA[<ol><li><em>SaaS</em>,是Software-as-a-Service的缩写名称,意思为软件即服务,即通过网络提供软件服务。</li></ol><p>springboot实现saas的一种方式，一个平台用户一个数据库。当某个用户登录时，判断是某个租户平台的，寻找到对应的数据库作相应操作。</p><p>spring的AbstractRoutingDataSource类就是指数据源路由，我们依赖这个类做一定操作。首先了解这个类。AbstractRoutingDataSource实现了InitializingBean，即初始化项目立即运行；类包含了targetDataSources，defaultTargetDataSource，resolvedDefaultDataSource。这里必须有一个默认数据库即defaultTargetDataSource，否则初始化报错；然后targetDataSources则是&lt;租户名字，DataSource&gt;的一个Map，我们设置后需要afterPropertiesSet()这个方法去初始化resolvedDefaultDataSource（最后使用的数据源）。AbstractRoutingDataSource提供determineCurrentLookupKey()方法给我们让我们定义当前使用的数据源，determineCurrentLookupKey()方法返回的值即 租户名字。每次我们调用数据库，则会自动经过determineCurrentLookupKey()方法，自动使用对应的数据源去做数据库操作。</p><p>为了每单词调用的数据源是相同的，我们使用ThreadLocal来存储租户名字。</p><ol start="2"><li><p>开始编码：此例子基于mybatis</p><p><strong>mysql</strong></p></li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 主库-存放租户信息</span></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3306:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br><span class="line"><span class="comment"># 租户库-存放业务信息</span></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3305:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3304:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=root --name mysql mysql:5.7</span><br></pre></td></tr></table></figure><p>主库3306创建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`master_tenant`</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> <span class="string">'utf8mb4'</span> <span class="keyword">COLLATE</span> <span class="string">'utf8mb4_general_ci'</span>;</span><br><span class="line"><span class="keyword">use</span> master_tenant;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`MASTER_TENANT`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`TENANT`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`URL`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`USERNAME`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`PASSWORD`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`MASTER_TENANT`</span>(<span class="string">`ID`</span>, <span class="string">`TENANT`</span>, <span class="string">`URL`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>) <span class="keyword">VALUES</span> (<span class="string">'1'</span>, <span class="string">'tenant1'</span>, <span class="string">'jdbc:mysql://10.68.8.81:3305/master_tenant?useSSL=false'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`MASTER_TENANT`</span>(<span class="string">`ID`</span>, <span class="string">`TENANT`</span>, <span class="string">`URL`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>) <span class="keyword">VALUES</span> (<span class="string">'2'</span>, <span class="string">'tenant2'</span>, <span class="string">'jdbc:mysql://10.68.8.81:3304/master_tenant?useSSL=false'</span>, <span class="string">'root'</span>, <span class="string">'root'</span>);</span><br></pre></td></tr></table></figure><p>租户库3305和3304</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`master_tenant`</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> <span class="string">'utf8mb4'</span> <span class="keyword">COLLATE</span> <span class="string">'utf8mb4_general_ci'</span>;</span><br><span class="line"><span class="keyword">use</span> master_tenant;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`USER`</span> (</span><br><span class="line">  <span class="string">`ID`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`USERNAME`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`PASSWORD`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`TENANT`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`ID`</span>) <span class="keyword">USING</span> BTREE</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8mb4;</span><br><span class="line">分别3305</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`USER`</span>(<span class="string">`ID`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>, <span class="string">`TENANT`</span>) <span class="keyword">VALUES</span> (<span class="string">'3305'</span>, <span class="string">'x'</span>, <span class="string">'root'</span>, <span class="string">''</span>);</span><br><span class="line">和3304</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="string">`master_tenant`</span>.<span class="string">`USER`</span>(<span class="string">`ID`</span>, <span class="string">`USERNAME`</span>, <span class="string">`PASSWORD`</span>, <span class="string">`TENANT`</span>) <span class="keyword">VALUES</span> (<span class="string">'3304'</span>, <span class="string">'x'</span>, <span class="string">'root'</span>, <span class="string">''</span>);</span><br></pre></td></tr></table></figure><p>​    <strong>java代码</strong></p><p><em>pom.xml</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>saas<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>saas<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>saas project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.31<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>application.properties</em>配置主数据源</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.url</span>=jdbc:mysql:<span class="comment">//10.68.8.81:3306/master_tenant?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span></span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.username</span>=root</span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.password</span>=root</span><br><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.driverClassName</span>=com<span class="selector-class">.mysql</span><span class="selector-class">.jdbc</span><span class="selector-class">.Driver</span></span><br></pre></td></tr></table></figure><p>维护单个请求相同的数据源的类基础</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class DynamicDataSourceContextHolder &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> ThreadLocal&lt;<span class="keyword">String</span>&gt; db = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> setDataSourceKey(<span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line">        db.<span class="built_in">set</span>(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getDataSourceKey() &#123;</span><br><span class="line">        <span class="keyword">return</span> db.<span class="built_in">get</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> clearDataSourceKey() &#123;</span><br><span class="line">        db.remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主要类，实现数据源路由</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">package com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ConcurrentHashMap;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> DynamicRoutingDataSource <span class="keyword">extends</span> AbstractRoutingDataSource &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Map&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; targetTargetDataSources = <span class="keyword">new</span> ConcurrentHashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">Object</span> determineCurrentLookupKey() &#123;</span><br><span class="line">        <span class="comment">// 每次连接数据库，都会去设置数据源</span></span><br><span class="line">        <span class="keyword">return</span> DynamicDataSourceContextHolder.getDataSourceKey();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置targetDataSources并记录数据源（这里可以记录每个数据源的最近使用时间，可以做删除不经常使用的数据源）</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> setTargetDataSources(Map&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; targetDataSources) &#123;</span><br><span class="line">        <span class="keyword">super</span>.setTargetDataSources(targetDataSources);</span><br><span class="line">        <span class="keyword">super</span>.afterPropertiesSet();</span><br><span class="line">        targetTargetDataSources = targetDataSources;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加数据源</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> addDataSource(<span class="built_in">String</span> tenant, Map&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; dataSourceProperties) &#123;</span><br><span class="line">        targetTargetDataSources.put(tenant, dataSource(dataSourceProperties));</span><br><span class="line">        <span class="keyword">super</span>.setTargetDataSources(targetTargetDataSources);</span><br><span class="line">        afterPropertiesSet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 判断是否存在数据源，存在直接取</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> existDataSource(<span class="built_in">String</span> tenant) &#123;</span><br><span class="line">        <span class="keyword">return</span> targetTargetDataSources.containsKey(tenant);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 组装数据源</span></span><br><span class="line">    <span class="keyword">public</span> DataSource dataSource(Map&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; dataSourceProperties) &#123;</span><br><span class="line">        DataSource dataSource;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dataSource = DruidDataSourceFactory.createDataSource(dataSourceProperties);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"dataSource: &#123;&#125;"</span>, e);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置默认数据源和数据源路由bean</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.<span class="keyword">factory</span>.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.<span class="built_in">Map</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">DataSourceConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.url&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> url;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.username&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.username&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"<span class="subst">$&#123;spring.datasource.driverClassName&#125;</span>"</span>)</span><br><span class="line">    private <span class="built_in">String</span> driverClassName;</span><br><span class="line"></span><br><span class="line">    private <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; getProperties() &#123;</span><br><span class="line">        <span class="built_in">Map</span>&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">"driverClassName"</span>, driverClassName);</span><br><span class="line">        map.put(<span class="string">"url"</span>, url);</span><br><span class="line">        map.put(<span class="string">"username"</span>, username);</span><br><span class="line">        map.put(<span class="string">"password"</span>, password);</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(<span class="string">"dynamicDataSource"</span>)</span><br><span class="line">    public DynamicRoutingDataSource dynamicDataSource() &#123;</span><br><span class="line">        DynamicRoutingDataSource dynamicRoutingDataSource = <span class="keyword">new</span> DynamicRoutingDataSource();</span><br><span class="line">        <span class="built_in">Map</span>&lt;<span class="built_in">Object</span>, <span class="built_in">Object</span>&gt; dataSourceMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">1</span>);</span><br><span class="line">        dataSourceMap.put(<span class="string">"default_db"</span>, dynamicRoutingDataSource.dataSource(getProperties()));</span><br><span class="line">        dynamicRoutingDataSource.setTargetDataSources(dataSourceMap);</span><br><span class="line">        dynamicRoutingDataSource.setDefaultTargetDataSource(dynamicRoutingDataSource.dataSource(getProperties()));</span><br><span class="line">        <span class="keyword">return</span> dynamicRoutingDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来业务实现，租户dto和dao</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TenantDto</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>TenantDao</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.saas</span><span class="selector-class">.dao</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.saas</span><span class="selector-class">.model</span><span class="selector-class">.TenantDto</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Mapper</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Param</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.ibatis</span><span class="selector-class">.annotations</span><span class="selector-class">.Select</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">Mapper</span></span><br><span class="line"><span class="keyword">public</span> interface TenantDao &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Select</span>("<span class="keyword">select</span> url,username,password from MASTER_TENANT where tenant = #&#123;<span class="selector-tag">tenant</span>&#125;")</span><br><span class="line">    <span class="selector-tag">TenantDto</span> <span class="selector-tag">findByTenant</span>(@<span class="keyword">Param</span>("<span class="keyword">tenant</span>") String tenant);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>业务就以用户登录和添加为测试</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.model;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line">@Data</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDto</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserDao</p><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">package</span> com.example.saas.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.UserDto;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line">@Mapper</span><br><span class="line">public interface UserDao &#123;</span><br><span class="line"></span><br><span class="line">    @Select(<span class="string">"select id,username,password from USER where username = <span class="subst">#&#123;username&#125;</span> and password = <span class="subst">#&#123;password&#125;</span>"</span>)</span><br><span class="line">    UserDto findByUsernameAndPassword(UserDto dto);</span><br><span class="line"></span><br><span class="line">    @Insert(<span class="string">"insert into USER(id,username,password) values (<span class="subst">#&#123;id&#125;</span>, <span class="subst">#&#123;username&#125;</span>, <span class="subst">#&#123;password&#125;</span>)"</span>)</span><br><span class="line">    //自增返回主键@Options(useGeneratedKeys=<span class="literal">true</span>, keyProperty=<span class="string">"id"</span>, keyColumn=<span class="string">"id"</span>)</span><br><span class="line">    void insertOne(UserDto dto);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller业务实现和租户完全透明</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.UserDto;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.<span class="keyword">annotation</span>.Transactional;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.<span class="keyword">annotation</span>.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(<span class="meta-string">"/login"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> String login(HttpServletRequest request, <span class="meta">@RequestBody</span> UserDto dto) &#123;</span><br><span class="line"></span><br><span class="line">        UserDto userDto = userDao.findByUsernameAndPassword(dto);</span><br><span class="line">        <span class="keyword">if</span> (userDto != <span class="literal">null</span>) &#123;</span><br><span class="line">            request.getSession().setAttribute(<span class="string">"tenant"</span>, request.getHeader(<span class="string">"tenant"</span>));</span><br><span class="line">            <span class="keyword">return</span> JSONObject.toJSONString(userDto);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"无此用户"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(<span class="meta-string">"/add"</span>)</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> String add() &#123;</span><br><span class="line"></span><br><span class="line">        UserDto dto1 = new UserDto();</span><br><span class="line">        dto1.setId(<span class="string">"11"</span>);</span><br><span class="line">        dto1.setUsername(<span class="string">"user1"</span>);</span><br><span class="line">        dto1.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        userDao.insertOne(dto1);</span><br><span class="line"><span class="comment">//        int a = 1/0;</span></span><br><span class="line">        UserDto dto2 = new UserDto();</span><br><span class="line">        dto2.setId(<span class="string">"22"</span>);</span><br><span class="line">        dto2.setUsername(<span class="string">"user2"</span>);</span><br><span class="line">        dto2.setPassword(<span class="string">"root"</span>);</span><br><span class="line">        userDao.insertOne(dto2);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还有一个业务的数据源控制，这里使用拦截器实现即可</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.saas.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.saas.dao.TenantDao;</span><br><span class="line"><span class="keyword">import</span> com.example.saas.model.TenantDto;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InterceptorConfig</span> <span class="keyword">extends</span> <span class="title">WebMvcConfigurerAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TenantInterceptor tenantInterceptor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span></span>&#123;</span><br><span class="line">        registry.addInterceptor(tenantInterceptor).addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TenantInterceptor</span> <span class="keyword">implements</span> <span class="title">HandlerInterceptor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TenantDao tenantDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DynamicRoutingDataSource dynamicRoutingDataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;spring.datasource.driverClassName&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">        String url = request.getServletPath();</span><br><span class="line">        String tenant;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"/login"</span>.equals(url) || <span class="string">"/register"</span>.equals(url)) &#123;</span><br><span class="line">            <span class="comment">// 登录的时候获取下租户数据库信息</span></span><br><span class="line">            tenant = request.getHeader(<span class="string">"tenant"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 其他所有接口走session</span></span><br><span class="line">            Object tenantObj = request.getSession().getAttribute(<span class="string">"tenant"</span>);</span><br><span class="line">            <span class="keyword">if</span> (tenantObj == <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"租户未登录"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            tenant = tenantObj.toString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotBlank(tenant)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!dynamicRoutingDataSource.existDataSource(tenant)) &#123;</span><br><span class="line">                <span class="comment">//搜索默认数据库，去注册租户的数据源，下次进来直接session匹配数据源</span></span><br><span class="line">                TenantDto dto = tenantDao.findByTenant(tenant);</span><br><span class="line">                <span class="keyword">if</span> (dto == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"无此租户"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                Map&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">                map.put(<span class="string">"driverClassName"</span>, driverClassName);</span><br><span class="line">                map.put(<span class="string">"url"</span>, dto.getUrl());</span><br><span class="line">                map.put(<span class="string">"username"</span>, dto.getUsername());</span><br><span class="line">                map.put(<span class="string">"password"</span>, dto.getPassword());</span><br><span class="line">                dynamicRoutingDataSource.addDataSource(tenant, map);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 为了单次请求，多次连接数据库的情况，这里设置localThread，AbstractRoutingDataSource的方法去获取设置数据源</span></span><br><span class="line">        DynamicDataSourceContextHolder.setDataSourceKey(tenant);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> postHandle(HttpServletRequest request, HttpServletResponse response, Object <span class="keyword">handler</span>,</span><br><span class="line">                           ModelAndView modelAndView) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="comment">// 请求结束删除localThread</span></span><br><span class="line">        DynamicDataSourceContextHolder.clearDataSourceKey();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>好了，至此，代码完成。</p><p><strong>运行测试</strong></p><p>curl -X POST \<br>  <a href="http://localhost:8080/login" target="_blank" rel="noopener">http://localhost:8080/login</a> \<br>  -H ‘Content-Type: application/json’ \<br>  -H ‘Postman-Token: 30833305-d96a-4734-9abd-f760ac3dd24b’ \<br>  -H ‘cache-control: no-cache’ \<br>  -H ‘tenant: tenant1’ \<br>  -d ‘{“username”:”x”,”password”:”root”}’</p><p>租户找到3305数据库，登录信息返回3305数据库数据</p><p>{“id”:”3305”,”password”:”root”,”username”:”x”}</p><p>相同session下3305添加用户成功</p><p>curl -X POST \<br>  <a href="http://localhost:8080/add" target="_blank" rel="noopener">http://localhost:8080/add</a> \<br>  -H ‘Authorization: KEDACOM123’ \<br>  -H ‘Content-Type: application/json’ \<br>  -H ‘Postman-Token: f30d60e2-3fde-48dd-94ef-7e73179ffa13’ \<br>  -H ‘cache-control: no-cache’ \<br>  -H ‘tenant: tenant2’ \<br>  -d ‘{}’</p><p><em>代码</em>： <a href="/images/springboot/saas.zip">saas.zip</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;em&gt;SaaS&lt;/em&gt;,是Software-as-a-Service的缩写名称,意思为软件即服务,即通过网络提供软件服务。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;springboot实现saas的一种方式，一个平台用户一个数据库。当某个用户登录时，判断是某个租户平台的
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>docker-compose 安装工具</title>
    <link href="http://20177.win/2019/07/02/docker/docker-compose%20install%20tools/"/>
    <id>http://20177.win/2019/07/02/docker/docker-compose install tools/</id>
    <published>2019-07-02T08:51:56.000Z</published>
    <updated>2020-01-07T01:49:02.382Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull nginx</span><br><span class="line">docker pull <span class="keyword">redi</span><span class="variable">s:3</span>.<span class="number">2</span></span><br><span class="line">docker pull mysq<span class="variable">l:5</span>.<span class="number">7</span></span><br><span class="line">docker pull fauria/vsftpd</span><br></pre></td></tr></table></figure><p><strong>docker-compose 部署前提</strong></p><p><strong><em>mysql</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/mysql/<span class="keyword">data</span>  #存储数据可以不写，后续自动生成</span></span><br><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/mysql/init  #初始化语句存放，这里用来创建用户</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/mysql/my.cnf</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/mysql/init/init.sql</span></span><br></pre></td></tr></table></figure><p>/data/mysql/my.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">20</span>M</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="comment">#data     = /var/lib/mysql</span></span><br><span class="line"><span class="attr">max_allowed_packet</span> = <span class="number">20</span>M</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="attr">sql_mode</span>=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTIO</span><br></pre></td></tr></table></figure><p>/data/mysql/init/init.sql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> tablename <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span> utf8 <span class="keyword">COLLATE</span> utf8_general_ci;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'username'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'pwd'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span>,<span class="keyword">CREATE</span>,<span class="keyword">UPDATE</span>,<span class="keyword">DELETE</span>,<span class="keyword">DROP</span>,<span class="keyword">ALTER</span> <span class="keyword">ON</span> tablename.* <span class="keyword">TO</span> <span class="string">'username'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">User</span> = <span class="string">'root'</span> <span class="keyword">and</span> Host=<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p><strong><em>sftpd</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/vsftpd</span></span><br></pre></td></tr></table></figure><p><strong><em>nginx</em></strong></p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -p /<span class="class"><span class="keyword">data</span>/nginx</span></span><br><span class="line"><span class="title">vi</span> /<span class="class"><span class="keyword">data</span>/nginx/nginx.conf</span></span><br></pre></td></tr></table></figure><p>/data/nginx/nginx.conf</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span>  nginx;</span><br><span class="line"><span class="comment">#启动进程,通常设置成和cpu的数量相等</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line"><span class="attribute">error_log</span>  /var/log/nginx/error.log <span class="literal">warn</span>;</span><br><span class="line"><span class="attribute">pid</span>        /var/run/nginx.pid;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">1024</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       /etc/nginx/mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">log_format</span>  main  <span class="string">'<span class="variable">$remote_addr</span> - <span class="variable">$remote_user</span> [<span class="variable">$time_local</span>] "<span class="variable">$request</span>" '</span></span><br><span class="line">                      <span class="string">'<span class="variable">$status</span> <span class="variable">$body_bytes_sent</span> "<span class="variable">$http_referer</span>" '</span></span><br><span class="line">                      <span class="string">'"<span class="variable">$http_user_agent</span>" "<span class="variable">$http_x_forwarded_for</span>"'</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">access_log</span>  /var/log/nginx/access.log  main;</span><br><span class="line"> </span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"> </span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line">    <span class="attribute">gzip</span> <span class="literal">on</span>;</span><br><span class="line">    <span class="attribute">gzip_min_length</span>  <span class="number">5k</span>;</span><br><span class="line">    <span class="attribute">gzip_buffers</span>     <span class="number">4</span> <span class="number">16k</span>;</span><br><span class="line">    <span class="comment">#gzip_http_version 1.0;</span></span><br><span class="line">    <span class="attribute">gzip_comp_level</span> <span class="number">4</span>;</span><br><span class="line">    <span class="attribute">gzip_types</span>       application/javascript text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span><br><span class="line">    <span class="attribute">gzip_vary</span> <span class="literal">on</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">#include /etc/nginx/conf.d/*.conf;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">upstream</span> rams_api &#123;</span><br><span class="line">        <span class="attribute">server</span> <span class="number">148.70.71.218:8080</span>;</span><br><span class="line">        <span class="attribute">keepalive</span> <span class="number">30</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">         <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">         <span class="attribute">server_name</span> localhost;</span><br><span class="line">         <span class="comment">#location / &#123;</span></span><br><span class="line">         <span class="comment">#    root /;</span></span><br><span class="line">         <span class="comment">#    index index.html index.htm;</span></span><br><span class="line">         <span class="comment">#&#125;</span></span><br><span class="line">       </span><br><span class="line">         <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">         <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">             <span class="attribute">root</span>   html;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="attribute">location</span> /file/ &#123;</span><br><span class="line">             <span class="attribute">alias</span> /data/vsftpd/;</span><br><span class="line">             <span class="attribute">autoindex</span> <span class="literal">on</span>;</span><br><span class="line">         &#125;</span><br><span class="line">        </span><br><span class="line">         <span class="attribute">location</span> /rams/ &#123;</span><br><span class="line">             <span class="attribute">alias</span> /data/rams/rams_web/dist/;</span><br><span class="line">             <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="attribute">location</span> /api/ &#123;</span><br><span class="line">            <span class="attribute">proxy_http_version</span> <span class="number">1</span>.<span class="number">1</span>;</span><br><span class="line">            <span class="attribute">proxy_redirect</span> <span class="literal">off</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> Host <span class="variable">$host</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">            <span class="attribute">proxy_set_header</span> X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">            <span class="attribute">proxy_connect_timeout</span> <span class="number">10</span>;</span><br><span class="line">            <span class="attribute">proxy_send_timeout</span> <span class="number">300</span>;</span><br><span class="line">            <span class="attribute">proxy_read_timeout</span> <span class="number">300</span>;</span><br><span class="line">            <span class="attribute">proxy_buffer_size</span>  <span class="number">128k</span>;</span><br><span class="line">            <span class="attribute">proxy_buffers</span>  <span class="number">1000</span> <span class="number">128k</span>;</span><br><span class="line">            <span class="attribute">proxy_busy_buffers_size</span> <span class="number">256k</span>;</span><br><span class="line">            <span class="attribute">proxy_temp_file_write_size</span> <span class="number">256k</span>;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://rams_api/rams/;</span><br><span class="line">            <span class="attribute">proxy_cookie_path</span> /rams/ /api/;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>服务启动</strong></p><p><strong><em>java后端</em></strong> </p><p>springboot项目下载到/data/rams/rams_server</p><p>build_rams_server.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">DIR=/data/rams/rams_server</span><br><span class="line">JARFILE=rams-0.0.1-SNAPSHOT.jar</span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$DIR</span></span><br><span class="line">git pull</span><br><span class="line">PIDS=`ps -ef | grep <span class="variable">$JARFILE</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$PIDS</span>"</span> != <span class="string">""</span> ];<span class="keyword">then</span></span><br><span class="line">    ps -ef | grep <span class="variable">$JARFILE</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span> | xargs <span class="built_in">kill</span> -9</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">mvn clean install</span><br><span class="line"><span class="built_in">cd</span> /data/rams/rams_server/target</span><br><span class="line">java -jar <span class="variable">$JARFILE</span> --server.port=8080 &gt; /home/rams_server.log &amp;</span><br><span class="line"><span class="built_in">echo</span> end</span><br><span class="line">tail -f /home/rams_server.log</span><br></pre></td></tr></table></figure><p><strong><em>vue前端</em></strong></p><p>vue项目下载到/data/rams/rams_web</p><p>build_rams_web.sh</p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cd /data/rams/rams_web</span><br><span class="line">git pull</span><br><span class="line">node -v</span><br><span class="line"><span class="built_in">npm</span> -v <span class="comment">#检查编译环境</span></span><br><span class="line"><span class="built_in">npm</span> config set registry https:<span class="regexp">//</span>registry.<span class="built_in">npm</span>.taobao.org </span><br><span class="line"><span class="built_in">npm</span> install</span><br><span class="line">rm -R dist</span><br><span class="line"><span class="built_in">npm</span> run build <span class="comment">#编译项目</span></span><br></pre></td></tr></table></figure><p><strong>使用docker-compose启动服务</strong></p><p>docker-compose.yml</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">version</span>: '3'</span><br><span class="line"></span><br><span class="line"><span class="attribute">services:</span></span><br><span class="line">  redis:</span><br><span class="line">    <span class="attribute">image</span>: redis:3.2</span><br><span class="line">    <span class="attribute">container_name</span>: myRedis</span><br><span class="line">    <span class="attribute">restart</span>: always</span><br><span class="line">    <span class="attribute">command</span>: redis-server --requirepass 123456</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '6379:6379'</span><br><span class="line">  <span class="attribute">mysql:</span></span><br><span class="line">    image: mysql:5.7</span><br><span class="line">    <span class="attribute">container_name</span>: myMysql</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '3306:3306' </span><br><span class="line">    <span class="attribute">environment:</span></span><br><span class="line">      TZ: 'Asia/Shanghai'</span><br><span class="line">      <span class="attribute">MYSQL_ROOT_PASSWORD</span>: 123456</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/mysql/my.cnf:/etc/my.cnf</span><br><span class="line">      - /data/mysql/data:/var/lib/mysql</span><br><span class="line">      - /data/mysql/init:/docker-entrypoint-initdb.d/</span><br><span class="line">  <span class="attribute">vsftpd:</span></span><br><span class="line">    image: fauria/vsftpd</span><br><span class="line">    <span class="attribute">container_name</span>: myFtp</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '20:20'</span><br><span class="line">      - '21:21'</span><br><span class="line">      - '21100-21110:21100-21110'</span><br><span class="line">    <span class="attribute">environment:</span></span><br><span class="line">      FTP_USER: rams</span><br><span class="line">      <span class="attribute">FTP_PASS</span>: rams</span><br><span class="line">      <span class="attribute">FILE_OPEN_MODE</span>: 0777   # FILE_OPEN_MODE,LOCAL_UMASK用户上传文件的权限chmod</span><br><span class="line">      <span class="attribute">LOCAL_UMASK</span>: 022</span><br><span class="line">    <span class="attribute">privileged</span>: true</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/vsftpd:/home/vsftpd</span><br><span class="line">  <span class="attribute">nginx:</span></span><br><span class="line">    image: nginx</span><br><span class="line">    <span class="attribute">container_name</span>: myNginx</span><br><span class="line">    <span class="attribute">ports:</span></span><br><span class="line">      - '80:80'</span><br><span class="line">    <span class="attribute">volumes:</span></span><br><span class="line">      - /data/nginx/nginx.conf:/etc/nginx/nginx.conf</span><br><span class="line">      - /data/vsftpd:/data/vsftpd</span><br><span class="line">      - /data/rams/rams_web/dist:/data/rams/rams_web/dist</span><br></pre></td></tr></table></figure><p>启动docker-compose</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up -d       <span class="meta">#全部启动</span></span><br><span class="line">docker-compose up -d nginx <span class="meta">#启动单个</span></span><br><span class="line">docker-compose down        <span class="meta">#全部停掉</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="docker" scheme="http://20177.win/categories/docker/"/>
    
    
      <category term="docker" scheme="http://20177.win/tags/docker/"/>
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>docker 基础命令</title>
    <link href="http://20177.win/2019/07/02/docker/docker%20cmd/"/>
    <id>http://20177.win/2019/07/02/docker/docker cmd/</id>
    <published>2019-07-02T07:51:56.000Z</published>
    <updated>2019-07-19T06:27:14.901Z</updated>
    
    <content type="html"><![CDATA[<p><strong>HELP 命令</strong></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">version</span>:版本</span><br><span class="line">docker info：信息</span><br><span class="line">docker <span class="comment">--help：帮助</span></span><br></pre></td></tr></table></figure><p><strong>docker 基础</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">docker images (-<span class="keyword">a</span>) (-q) (--digests) (--<span class="keyword">no</span>-<span class="built_in">trunc</span>)</span><br><span class="line">    -<span class="keyword">a</span> :列出本地所有的镜像（含中间映像层）</span><br><span class="line">    -q :只显示镜像ID。</span><br><span class="line">    --digests :显示镜像的摘要信息</span><br><span class="line">    --<span class="keyword">no</span>-<span class="built_in">trunc</span> :显示完整的镜像信息</span><br><span class="line">各个选项说明:</span><br><span class="line">    REPOSITORY：表示镜像的仓库源</span><br><span class="line">    TAG：镜像的标签</span><br><span class="line">    IMAGE ID：镜像ID</span><br><span class="line">    CREATED：镜像创建时间</span><br><span class="line">    SIZE：镜像大小</span><br><span class="line">    同一仓库源可以有多个 TAG，代表这个仓库源的不同个版本，我们使用 REPOSITORY:TAG 来定义不同的镜像。</span><br><span class="line">    如果你不指定一个镜像的版本标签，例如你只使用 ubuntu，docker 将默认使用 ubuntu:latest 镜像</span><br><span class="line">    </span><br><span class="line">docker <span class="built_in">search</span> 某个XXX镜像名字 (--<span class="keyword">no</span>-<span class="built_in">trunc</span>) (-s) (--automated)</span><br><span class="line">    --<span class="keyword">no</span>-<span class="built_in">trunc</span> : 显示完整的镜像描述</span><br><span class="line">    -s : 列出收藏数不小于指定值的镜像。</span><br><span class="line">    --automated : 只列出 automated build类型的镜像；</span><br><span class="line">    网站 http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span></span><br><span class="line"></span><br><span class="line">docker rmi 某个XXX镜像名字ID  删除镜像</span><br><span class="line">    删除单个 docker rmi  -<span class="keyword">f</span> 镜像ID</span><br><span class="line">    删除多个 docker rmi -<span class="keyword">f</span> 镜像名<span class="number">1</span>:TAG 镜像名<span class="number">2</span>:TAG </span><br><span class="line">    删除全部 docker rmi -<span class="keyword">f</span> $(docker images -<span class="keyword">qa</span>)</span><br><span class="line"></span><br><span class="line"># 登陆http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span>查看版本</span><br><span class="line">docker pull 某个XXX镜像名字  下载镜像</span><br><span class="line">docker pull 镜像名字[:TAG]</span><br><span class="line"></span><br><span class="line">docker run --name=<span class="string">"容器新名字"</span> -d -<span class="keyword">p</span> <span class="number">8081</span>:<span class="number">8080</span> --privileged=true</span><br><span class="line"></span><br><span class="line">一次性删除多个容器</span><br><span class="line">    docker rm -<span class="keyword">f</span> $(docker <span class="keyword">ps</span> -<span class="keyword">a</span> -q)</span><br><span class="line">    docker <span class="keyword">ps</span> -<span class="keyword">a</span> -q | xargs docker rm</span><br><span class="line"></span><br><span class="line">查看容器日志</span><br><span class="line">  docker logs -<span class="keyword">f</span> -t --tail <span class="number">8</span> 容器ID</span><br><span class="line">    *   -t 是加入时间戳</span><br><span class="line">    *   -<span class="keyword">f</span> 跟随最新的日志打印</span><br><span class="line">    *   --tail 数字 显示最后多少条</span><br><span class="line"></span><br><span class="line">查看容器内运行的进程 docker top 容器ID</span><br><span class="line">查看容器内部细节 docker inspect 容器ID</span><br><span class="line">进入正在运行的容器并以命令行交互 docker exec -it 容器ID /bin/bash</span><br><span class="line">重新进入  docker attach 容器ID</span><br><span class="line">述两个区别</span><br><span class="line">      attach 直接进入容器启动命令的终端，不会启动新的进程</span><br><span class="line">      exec 是在容器中打开新的终端，并且可以启动新的进程</span><br><span class="line">从容器内拷贝文件到主机上 docker <span class="keyword">cp</span>  容器ID:容器内路径 目的主机路径</span><br></pre></td></tr></table></figure><p>命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">attach    <span class="comment"># 当前 shell 下 attach 连接指定运行镜像</span></span><br><span class="line">build     <span class="comment"># 通过 Dockerfile 定制镜像</span></span><br><span class="line"><span class="keyword">commit</span>    <span class="comment"># 提交当前容器为新的镜像</span></span><br><span class="line">cp        <span class="comment">#从容器中拷贝指定文件或者目录到宿主机中</span></span><br><span class="line"><span class="keyword">create</span>    <span class="comment"># 创建一个新的容器，同 run，但不启动容器</span></span><br><span class="line">diff      <span class="comment"># 查看 docker 容器变化</span></span><br><span class="line"><span class="keyword">events</span>    <span class="comment"># 从 docker 服务获取容器实时事件</span></span><br><span class="line">exec      <span class="comment"># 在已存在的容器上运行命令</span></span><br><span class="line"><span class="keyword">export</span>    <span class="comment"># 导出容器的内容流作为一个 tar 归档文件[对应 import ]</span></span><br><span class="line">history   <span class="comment"># 展示一个镜像形成历史</span></span><br><span class="line">images    <span class="comment"># 列出系统当前镜像</span></span><br><span class="line"><span class="keyword">import</span>    <span class="comment"># 从tar包中的内容创建一个新的文件系统映像[对应export]</span></span><br><span class="line">info      <span class="comment"># 显示系统相关信息</span></span><br><span class="line">inspect   <span class="comment"># 查看容器详细信息</span></span><br><span class="line"><span class="keyword">kill</span>      <span class="comment"># kill 指定 docker 容器</span></span><br><span class="line"><span class="keyword">load</span>      <span class="comment"># 从一个 tar 包中加载一个镜像[对应 save]</span></span><br><span class="line">login     <span class="comment"># 注册或者登陆一个 docker 源服务器</span></span><br><span class="line">logout    <span class="comment"># 从当前 Docker registry 退出</span></span><br><span class="line"><span class="keyword">logs</span>      <span class="comment"># 输出当前容器日志信息</span></span><br><span class="line">port      <span class="comment"># 查看映射端口对应的容器内部源端口</span></span><br><span class="line">pause     <span class="comment"># 暂停容器</span></span><br><span class="line">ps        <span class="comment"># 列出容器列表</span></span><br><span class="line">pull      <span class="comment"># 从docker镜像源服务器拉取指定镜像或者库镜像</span></span><br><span class="line">push      <span class="comment"># 推送指定镜像或者库镜像至docker源服务器</span></span><br><span class="line">restart   <span class="comment"># 重启运行的容器</span></span><br><span class="line">rm        <span class="comment"># 移除一个或者多个容器</span></span><br><span class="line">rmi       <span class="comment"># 移除一个或多个镜像[无容器使用该镜像才可删除，否则需删除相关容器才可继续或 -f 强制删除]</span></span><br><span class="line">run       <span class="comment"># 创建一个新的容器并运行一个命令</span></span><br><span class="line"><span class="keyword">save</span>      <span class="comment"># 保存一个镜像为一个 tar 包[对应 load]</span></span><br><span class="line"><span class="keyword">search</span>    <span class="comment"># 在 docker hub 中搜索镜像</span></span><br><span class="line"><span class="keyword">start</span>     <span class="comment"># 启动容器</span></span><br><span class="line"><span class="keyword">stop</span>      <span class="comment"># 停止容器</span></span><br><span class="line">tag       <span class="comment"># 给源中镜像打标签</span></span><br><span class="line">top       <span class="comment"># 查看容器中运行的进程信息</span></span><br><span class="line">unpause   <span class="comment"># 取消暂停容器</span></span><br><span class="line"><span class="keyword">version</span>   <span class="comment"># 查看 docker 版本号</span></span><br><span class="line"><span class="keyword">wait</span>      <span class="comment"># 截取容器停止时的退出状态值</span></span><br></pre></td></tr></table></figure><p><strong>将容器生成镜像</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.  从Hub上下载tomcat镜像到本地并成功运行 docker run -it -<span class="selector-tag">p</span> <span class="number">8080</span>:<span class="number">8080</span> tomcat</span><br><span class="line">    -<span class="selector-tag">p</span> 主机端口:docker容器端口</span><br><span class="line">    -P 随机分配端口</span><br><span class="line">    <span class="selector-tag">i</span>:交互</span><br><span class="line">    t:终端</span><br><span class="line"><span class="number">2</span>.故意删除上一步镜像生产tomcat容器的文档</span><br><span class="line">docker ps </span><br><span class="line">docker exec -it <span class="number">346</span>a87913be9  /bin/bash</span><br><span class="line">cd /webapps</span><br><span class="line">ls -l</span><br><span class="line">rm -rf docs</span><br><span class="line"><span class="number">3</span>.也即当前的tomcat运行实例是一个没有文档内容的容器， 以它为模板commit一个没有doc的tomcat新镜像zhw/tomcat02</span><br><span class="line">docker commit -a=<span class="string">"zhw"</span> -m=<span class="string">"自定义镜像"</span> <span class="number">346</span>a87913be9 zhw/tomcat2:<span class="number">1.0</span></span><br><span class="line">启动我们的新镜像并和原来的对比</span><br><span class="line">  启动zhw/tomcat02，它没有docs</span><br><span class="line">  新启动原来的tomcat，它有docs</span><br></pre></td></tr></table></figure><p><strong>DockerFile添加镜像</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获得一个新镜像jingxiang,/mydocker/dockerfile2是Dockerfile</span></span><br><span class="line">docker build -f /mydocker/dockerfile2 -t jingxiang . </span><br><span class="line"></span><br><span class="line"><span class="comment"># VOLUME 创建数据卷</span></span><br><span class="line"><span class="keyword">FROM</span> centos</span><br><span class="line"><span class="keyword">VOLUME</span><span class="bash"> [<span class="string">"/dataVolumeContainer1"</span>,<span class="string">"/dataVolumeContainer2"</span>]</span></span><br><span class="line"><span class="bash">CMD <span class="built_in">echo</span> <span class="string">"finished,--------success1"</span></span></span><br><span class="line"><span class="bash">CMD /bin/bash</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">docker run -it --name dc01 jingxiang</span></span><br><span class="line"><span class="bash"><span class="comment"># 共享数据卷</span></span></span><br><span class="line"><span class="bash">docker run -it --name dc02 --volumes-from dc01  jingxiang</span></span><br></pre></td></tr></table></figure><p><strong>DockerFile格式</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span></span><br><span class="line">    基础镜像，当前新镜像是基于哪个镜像的</span><br><span class="line"><span class="keyword">MAINTAINER</span></span><br><span class="line">    镜像维护者的姓名和邮箱地址</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"></span></span><br><span class="line"><span class="bash">    容器构建时需要运行的命令</span></span><br><span class="line"><span class="bash">EXPOSE</span></span><br><span class="line"><span class="bash">    当前容器对外暴露出的端口</span></span><br><span class="line"><span class="bash">WORKDIR</span></span><br><span class="line"><span class="bash">    指定在创建容器后，终端默认登陆的进来工作目录，一个落脚点</span></span><br><span class="line"><span class="bash">ENV</span></span><br><span class="line"><span class="bash">    用来在构建镜像过程中设置环境变量</span></span><br><span class="line"><span class="bash"> </span></span><br><span class="line"><span class="bash">    ENV MY_PATH /usr/mytest 这个环境变量可以在后续的任何RUN指令中使用，这就如同在命令前面指定了环境变量前缀一样；也可以在其它指令中直接使用这些环境变量，比如：WORKDIR <span class="variable">$MY_PATH</span></span></span><br><span class="line"><span class="bash">ADD</span></span><br><span class="line"><span class="bash">    将宿主机目录下的文件拷贝进镜像且ADD命令会自动处理URL和解压tar压缩包</span></span><br><span class="line"><span class="bash">COPY</span></span><br><span class="line"><span class="bash">    类似ADD，拷贝文件和目录到镜像中。 将从构建上下文目录中 &lt;源路径&gt; 的文件/目录复制到新的一层的镜像内的 &lt;目标路径&gt; 位置</span></span><br><span class="line"><span class="bash">VOLUME</span></span><br><span class="line"><span class="bash">    容器数据卷，用于数据保存和持久化工作</span></span><br><span class="line"><span class="bash">CMD</span></span><br><span class="line"><span class="bash">    指定一个容器启动时要运行的命令</span></span><br><span class="line"><span class="bash">    Dockerfile 中可以有多个 CMD 指令，但只有最后一个生效，CMD 会被 docker run 之后的参数替换</span></span><br><span class="line"><span class="bash">ENTRYPOINT </span></span><br><span class="line"><span class="bash">    指定一个容器启动时要运行的命令</span></span><br><span class="line"><span class="bash">    ENTRYPOINT 的目的和 CMD 一样，都是在指定容器启动程序及参数</span></span><br><span class="line"><span class="bash">ONBUILD</span></span><br><span class="line"><span class="bash">    当构建一个被继承的Dockerfile时运行命令，父镜像在被子继承后父镜像的onbuild被触发</span></span><br></pre></td></tr></table></figure><p><strong>自定义TOMCAT</strong></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>. mkdir -p /zhwfile/mydockerfile/tomcat9</span><br><span class="line"><span class="number">2</span>. 在上述目录下touch c.txt</span><br><span class="line"><span class="number">3</span>. 将jdk和tomcat安装的压缩包拷贝进上一步目录</span><br><span class="line">    apache-tomcat-<span class="number">9.0</span>.<span class="number">8</span>.tar.gz</span><br><span class="line">    jdk-<span class="number">8</span>u171-linux-x64.tar.gz</span><br><span class="line"><span class="number">4</span>.在/zhwfile/mydockerfile/tomcat9目录下新建Dockerfile文件</span><br><span class="line">目录内容:</span><br><span class="line"><span class="comment">#基础镜像，当前新镜像是基于哪个镜像的</span></span><br><span class="line"><span class="keyword">FROM</span>         centos </span><br><span class="line"><span class="comment">#镜像维护者的姓名和邮箱地址</span></span><br><span class="line"><span class="keyword">MAINTAINER</span>    zhw&lt;zhw731727335@<span class="number">163</span>.com&gt;</span><br><span class="line"><span class="comment">#把宿主机当前上下文的c.txt拷贝到容器/usr/local/路径下</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> c.txt /usr/<span class="built_in">local</span>/cincontainer.txt</span></span><br><span class="line"><span class="bash"><span class="comment">#把java与tomcat添加到容器中</span></span></span><br><span class="line"><span class="bash">ADD jdk-8u171-linux-x64.tar.gz /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="bash">ADD apache-tomcat-9.0.8.tar.gz /usr/<span class="built_in">local</span>/</span></span><br><span class="line"><span class="bash"><span class="comment">#安装vim编辑器</span></span></span><br><span class="line"><span class="bash">RUN yum -y install vim</span></span><br><span class="line"><span class="bash"><span class="comment">#设置工作访问时候的WORKDIR路径，登录落脚点</span></span></span><br><span class="line"><span class="bash">ENV MYPATH /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="bash">WORKDIR <span class="variable">$MYPATH</span></span></span><br><span class="line"><span class="bash"><span class="comment">#配置java与tomcat环境变量</span></span></span><br><span class="line"><span class="bash">ENV JAVA_HOME /usr/<span class="built_in">local</span>/jdk1.8.0_171</span></span><br><span class="line"><span class="bash">ENV CLASSPATH <span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</span></span><br><span class="line"><span class="bash">ENV CATALINA_HOME /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="bash">ENV CATALINA_BASE /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8</span></span><br><span class="line"><span class="bash">ENV PATH <span class="variable">$PATH</span>:<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$CATALINA_HOME</span>/lib:<span class="variable">$CATALINA_HOME</span>/bin</span></span><br><span class="line"><span class="bash"><span class="comment">#容器运行时监听的端口</span></span></span><br><span class="line"><span class="bash">EXPOSE  8080</span></span><br><span class="line"><span class="bash"><span class="comment">#启动时运行tomcat</span></span></span><br><span class="line"><span class="bash"><span class="comment"># ENTRYPOINT ["/usr/local/apache-tomcat-9.0.8/bin/startup.sh" ]</span></span></span><br><span class="line"><span class="bash"><span class="comment"># CMD ["/usr/local/apache-tomcat-9.0.8/bin/catalina.sh","run"]</span></span></span><br><span class="line"><span class="bash">CMD /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/bin/startup.sh &amp;&amp; tail -F /usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/bin/logs/catalina.out</span></span><br><span class="line"><span class="bash">5.在该目录下执行构建 docker build -t zhwTomcat</span></span><br><span class="line"><span class="bash">6.查看构建是否成功</span></span><br><span class="line"><span class="bash">docker images</span></span><br><span class="line"><span class="bash">7.运行：</span></span><br><span class="line"><span class="bash">docker run -d -p 9080:8080 --name myt9 -v /zhwfile/mydockerfile/tomcat9/<span class="built_in">test</span>:/usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/webapps/<span class="built_in">test</span> -v /zhwfile/mydockerfile/tomcat9/tomcat9logs/:/usr/<span class="built_in">local</span>/apache-tomcat-9.0.8/logs --privileged=<span class="literal">true</span> zhwTomcat</span></span><br><span class="line"><span class="bash">8.验证是否成功：</span></span><br><span class="line"><span class="bash"> http://94.191.86.252:9080/</span></span><br><span class="line"><span class="bash">9.将项目放在/zhwfile/mydockerfile/tomcat9/<span class="built_in">test</span>下浏览器进行访问，查看是否成功。</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;HELP 命令&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;spa
      
    
    </summary>
    
      <category term="docker" scheme="http://20177.win/categories/docker/"/>
    
    
      <category term="docker" scheme="http://20177.win/tags/docker/"/>
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>docker/docker-compose安装</title>
    <link href="http://20177.win/2019/07/02/docker/install%20docker/"/>
    <id>http://20177.win/2019/07/02/docker/install docker/</id>
    <published>2019-07-02T06:51:56.000Z</published>
    <updated>2019-12-18T07:18:18.047Z</updated>
    
    <content type="html"><![CDATA[<p>以下是在linux环境下的安装</p><p>1.<strong>安装docker</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。</span></span><br><span class="line"><span class="comment"># 通过 uname -r 命令查看你当前的内核版本</span></span><br><span class="line">uname -r</span><br><span class="line"><span class="comment"># 使用 root 权限登录 Centos。确保 yum 包更新到最新。</span></span><br><span class="line">sudo yum <span class="keyword">update</span></span><br><span class="line"><span class="comment"># 卸载旧版本(如果安装过旧版本的话)</span></span><br><span class="line">sudo yum remove docker  docker-common docker-selinux docker-<span class="keyword">engine</span></span><br><span class="line"><span class="comment"># 安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span></span><br><span class="line">sudo yum <span class="keyword">install</span> -y yum-utils device-mapper-persistent-<span class="keyword">data</span> lvm2</span><br><span class="line"><span class="comment"># 设置yum源</span></span><br><span class="line">sudo yum-config-manager <span class="comment">--add-repo https://download.docker.com/linux/centos/docker-ce.repo</span></span><br><span class="line"><span class="comment"># 可以查看所有仓库中所有docker版本，并选择特定版本安装</span></span><br><span class="line">yum <span class="keyword">list</span> docker-ce <span class="comment">--showduplicates | sort -r</span></span><br><span class="line"><span class="comment"># 安装docker</span></span><br><span class="line">sudo yum <span class="keyword">install</span> docker-ce  <span class="comment">#由于repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0</span></span><br><span class="line">sudo yum <span class="keyword">install</span> &lt;FQPN&gt;  <span class="comment"># 例如：sudo yum install docker-ce-17.12.0.ce</span></span><br><span class="line"><span class="comment"># 启动并加入开机启动</span></span><br><span class="line">sudo systemctl <span class="keyword">start</span> docker</span><br><span class="line">sudo systemctl <span class="keyword">enable</span> docker</span><br><span class="line"><span class="comment"># 验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</span></span><br><span class="line">docker <span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>加速镜像</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http<span class="variable">s:</span>//<span class="built_in">get</span>.daocloud.io/daotools/set_mirror.<span class="keyword">sh</span> | <span class="keyword">sh</span> -s http://<span class="number">94.191</span>.<span class="number">114.178</span>.<span class="keyword">m</span>.daocloud.io</span><br><span class="line"><span class="keyword">vi</span> /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p>问题：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">因为之前已经安装过旧版本的docker，在安装的时候报错如下：</span><br><span class="line">Transaction check error:</span><br><span class="line">  file /usr/bin/docker from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/docker-containerd from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/docker-containerd-shim from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line">  file /usr/bin/dockerd from install of docker-ce-<span class="number">17.12</span>.<span class="number">0</span><span class="selector-class">.ce-1</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span> conflicts with file from package docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line"></span><br><span class="line">卸载旧版本的包</span><br><span class="line">sudo yum erase docker-common-<span class="number">2</span>:<span class="number">1.12</span>.<span class="number">6</span>-<span class="number">68</span><span class="selector-class">.gitec8512b</span><span class="selector-class">.el7</span><span class="selector-class">.centos</span><span class="selector-class">.x86_64</span></span><br><span class="line"></span><br><span class="line">再次安装docker</span><br><span class="line">sudo yum install docker-ce</span><br></pre></td></tr></table></figure><p>Docker卸载：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop docker </span><br><span class="line">yum -y remove docker-ce</span><br><span class="line">rm -rf /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span></span></span><br></pre></td></tr></table></figure><p>2.<strong>安装docker-componse</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装pip源</span></span><br><span class="line">yum -y <span class="keyword">install</span> epel-<span class="keyword">release</span></span><br><span class="line">yum -y <span class="keyword">install</span> python-pip</span><br><span class="line"><span class="comment">#安装</span></span><br><span class="line">pip <span class="keyword">install</span> docker-compose</span><br><span class="line"><span class="comment">#查找路径</span></span><br><span class="line">which docker-compose</span><br><span class="line"><span class="comment">#修改权限</span></span><br><span class="line">chmod +x 安装路径下的/docker-compose </span><br><span class="line"><span class="comment">#版本</span></span><br><span class="line">docker-compose <span class="keyword">version</span></span><br></pre></td></tr></table></figure><p>3.<strong>docker离线安装</strong></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">https://pan.baidu.com/s/13W2ZNMdkx2hwRGZTO9zQDA</span></span><br><span class="line"><span class="comment"># 1、解压</span></span><br><span class="line">tar -xvf docker-18.06.1-ce.tgz</span><br><span class="line"><span class="comment"># 2、将解压出来的docker文件内容移动到 /usr/bin/ 目录下</span></span><br><span class="line">cp docker/* /usr/bin/</span><br><span class="line"><span class="comment"># 3、将docker注册为service</span></span><br><span class="line">vim /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">[Unit]</span><br><span class="line">Description=Docker Application Container Engine</span><br><span class="line">Documentation=https://docs.docker.com</span><br><span class="line">After=network-online.target firewalld.service</span><br><span class="line">Wants=network-online.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="comment"># the default is not to use systemd for cgroups because the delegate issues still</span></span><br><span class="line"><span class="comment"># exists and systemd currently does not support the cgroup feature set required</span></span><br><span class="line"><span class="comment"># for containers run by docker</span></span><br><span class="line">ExecStart=/usr/bin/dockerd</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line"><span class="comment"># Having non-zero Limit*s causes performance problems due to accounting overhead</span></span><br><span class="line"><span class="comment"># in the kernel. We recommend using cgroups to do container-local accounting.</span></span><br><span class="line">LimitNOFILE=infinity</span><br><span class="line">LimitNPROC=infinity</span><br><span class="line">LimitCORE=infinity</span><br><span class="line"><span class="comment"># Uncomment TasksMax if your systemd version supports it.</span></span><br><span class="line"><span class="comment"># Only systemd 226 and above support this version.</span></span><br><span class="line"><span class="comment">#TasksMax=infinity</span></span><br><span class="line">TimeoutStartSec=0</span><br><span class="line"><span class="comment"># set delegate yes so that systemd does not reset the cgroups of docker containers</span></span><br><span class="line">Delegate=yes</span><br><span class="line"><span class="comment"># kill only the docker process, not all processes in the cgroup</span></span><br><span class="line">KillMode=process</span><br><span class="line"><span class="comment"># restart the docker process if it exits prematurely</span></span><br><span class="line">Restart=on-failure</span><br><span class="line">StartLimitBurst=3</span><br><span class="line">StartLimitInterval=60s</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"><span class="comment"># 4、启动 添加文件权限并启动docker</span></span><br><span class="line">chmod +x /etc/systemd/system/docker.service</span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start docker<span class="comment">#启动Docker</span></span><br><span class="line">systemctl enable docker.service<span class="comment">#设置开机自启</span></span><br><span class="line"><span class="comment"># 5、验证</span></span><br><span class="line">systemctl status docker<span class="comment">#查看Docker状态</span></span><br><span class="line">docker -v<span class="comment">#查看Docker版本</span></span><br></pre></td></tr></table></figure><p>4.离线安装docker-compose</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">https:</span><span class="comment">//github.com/docker/compose/releases/tag/1.24.1</span></span><br><span class="line">下载后上传到服务器<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/bin/</span>目录下</span><br><span class="line">cd <span class="meta-keyword">/usr/</span>local/bin</span><br><span class="line">mv docker-compose-Linux-x86_64  docker-compose</span><br><span class="line">sudo chmod +x docker-compose</span><br><span class="line">docker-compose --version</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下是在linux环境下的安装&lt;/p&gt;
&lt;p&gt;1.&lt;strong&gt;安装docker&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line
      
    
    </summary>
    
      <category term="docker" scheme="http://20177.win/categories/docker/"/>
    
    
      <category term="docker" scheme="http://20177.win/tags/docker/"/>
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>es 简单操作</title>
    <link href="http://20177.win/2019/03/11/other/elastic%20search%20dump/"/>
    <id>http://20177.win/2019/03/11/other/elastic search dump/</id>
    <published>2019-03-11T02:03:56.000Z</published>
    <updated>2019-07-19T06:27:14.903Z</updated>
    
    <content type="html"><![CDATA[<h5 id="集群信息"><a href="#集群信息" class="headerlink" title="集群信息"></a>集群信息</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">GET</span> _cluster/health?pretty</span><br></pre></td></tr></table></figure><h5 id="设置搜索最大条数"><a href="#设置搜索最大条数" class="headerlink" title="设置搜索最大条数"></a>设置搜索最大条数</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -XPUT http:<span class="string">//ip</span><span class="function">:9200</span>/&#123;index&#125;<span class="string">/_settings</span> -d '&#123; <span class="string">"index"</span> : &#123; <span class="string">"max_result_window"</span> : 1000000000&#125;&#125;</span><br></pre></td></tr></table></figure><h5 id="查询全部索引"><a href="#查询全部索引" class="headerlink" title="查询全部索引"></a>查询全部索引</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">GET</span> _cat/indices</span><br></pre></td></tr></table></figure><h5 id="删除index"><a href="#删除index" class="headerlink" title="删除index"></a>删除index</h5><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> &#123;<span class="keyword">index</span>&#125;</span><br></pre></td></tr></table></figure><h5 id="查询结果"><a href="#查询结果" class="headerlink" title="查询结果"></a>查询结果</h5><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">GET &#123;index&#125;/&#123;type&#125;/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"query"</span>: &#123; </span><br><span class="line">     <span class="string">"match_all"</span>: &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="查询分词结果"><a href="#查询分词结果" class="headerlink" title="查询分词结果"></a>查询分词结果</h5><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">直接查询分词结果</span><br><span class="line">GET &#123;index&#125;/&#123;<span class="built_in">type</span>&#125;/&#123;<span class="variable">_id</span>&#125;/<span class="variable">_termvectors</span>?fields=<span class="built_in">className</span></span><br><span class="line">使用指定分词器</span><br><span class="line">http:<span class="comment">//&#123;ip&#125;:9200/_analyze?analyzer=standard&amp;pretty&amp;text=文字</span></span><br></pre></td></tr></table></figure><h5 id="查询mapping"><a href="#查询mapping" class="headerlink" title="查询mapping"></a>查询mapping</h5><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml">GET </span><span class="template-variable">&#123;index&#125;</span><span class="xml">/</span><span class="template-variable">&#123;type&#125;</span><span class="xml">/_mapping</span></span><br></pre></td></tr></table></figure><h5 id="导出mapping-–output-也可以指定的es服务器http-xxxx-9200-index"><a href="#导出mapping-–output-也可以指定的es服务器http-xxxx-9200-index" class="headerlink" title="导出mapping  (–output=也可以指定的es服务器http://xxxx:9200/index)"></a>导出mapping  (–output=也可以指定的es服务器<a href="http://xxxx:9200/index" target="_blank" rel="noopener">http://xxxx:9200/index</a>)</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--ignore-errors</span>=<span class="literal">true</span>  <span class="attribute">--scrollTime</span>=120m  <span class="attribute">--bulk</span>=<span class="literal">true</span> <span class="attribute">--input</span>=http://ip:9200/index <span class="attribute">--output</span>=E:\road_mapping.json <span class="attribute">--type</span>=mapping</span><br></pre></td></tr></table></figure><h5 id="导出数据"><a href="#导出数据" class="headerlink" title="导出数据"></a>导出数据</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--ignore-errors</span>=<span class="literal">true</span>  <span class="attribute">--scrollTime</span>=120m <span class="attribute">--bulk</span>=<span class="literal">true</span> <span class="attribute">--input</span>=http://ip:9200/index <span class="attribute">--output</span>=E:\road.json <span class="attribute">--type</span>=data --searchBody <span class="string">"&#123;\"query\":&#123;\"wildcard\":&#123;\"kind\": \"*\"&#125;&#125;&#125;"</span></span><br></pre></td></tr></table></figure><h5 id="导入mapping"><a href="#导入mapping" class="headerlink" title="导入mapping"></a>导入mapping</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--input</span>=E:\road_mapping.json <span class="attribute">--type</span>=mapping <span class="attribute">--output</span>=http://ip:9200/index</span><br></pre></td></tr></table></figure><h5 id="导入数据"><a href="#导入数据" class="headerlink" title="导入数据"></a>导入数据</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">elasticdump <span class="attribute">--input</span>=E:\road.json <span class="attribute">--type</span>=data <span class="attribute">--output</span>=http://ip:9200/index --limit 1000</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;集群信息&quot;&gt;&lt;a href=&quot;#集群信息&quot; class=&quot;headerlink&quot; title=&quot;集群信息&quot;&gt;&lt;/a&gt;集群信息&lt;/h5&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="es" scheme="http://20177.win/tags/es/"/>
    
  </entry>
  
  <entry>
    <title>docker 简单操作</title>
    <link href="http://20177.win/2019/03/11/other/docker%20in%20out/"/>
    <id>http://20177.win/2019/03/11/other/docker in out/</id>
    <published>2019-03-11T02:03:56.000Z</published>
    <updated>2019-07-19T06:27:14.903Z</updated>
    
    <content type="html"><![CDATA[<h5 id="导出命令-镜像"><a href="#导出命令-镜像" class="headerlink" title="导出命令-镜像"></a>导出命令-镜像</h5><p>docker save [options] images [images…]<br>示例<br>docker save -o nginx.tar nginx:latest </p><h5 id="导入命令-镜像"><a href="#导入命令-镜像" class="headerlink" title="导入命令-镜像"></a>导入命令-镜像</h5><p>docker load [options]<br>示例<br>docker load -i nginx.tar </p><h5 id="容器生成镜像"><a href="#容器生成镜像" class="headerlink" title="容器生成镜像"></a>容器生成镜像</h5><p>docker commit -m “change somth” -a “somebody info” {容器id} {镜像:tag}<br>再导出镜像（保存有镜像历史）</p><h5 id="导出命令-容器"><a href="#导出命令-容器" class="headerlink" title="导出命令-容器"></a>导出命令-容器</h5><p>docker export [options] container<br>示例<br>docker export -o nginx-test.tar nginx-test </p><h5 id="导入命令-容器（运行没成功过…）"><a href="#导入命令-容器（运行没成功过…）" class="headerlink" title="导入命令-容器（运行没成功过…）"></a>导入命令-容器（运行没成功过…）</h5><p>docker import [options] file|URL|- [REPOSITORY[:TAG]]<br>示例<br>docker import nginx-test.tar nginx:imp </p><h5 id="从容器里面拷文件到宿主机"><a href="#从容器里面拷文件到宿主机" class="headerlink" title="从容器里面拷文件到宿主机"></a>从容器里面拷文件到宿主机</h5><p> docker cp 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径<br> 示例<br> docker cp testtomcat:/usr/local/tomcat/webapps/test/js/test.js /opt</p><h5 id="从宿主机拷文件到容器里面"><a href="#从宿主机拷文件到容器里面" class="headerlink" title="从宿主机拷文件到容器里面"></a>从宿主机拷文件到容器里面</h5><p> docker cp 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径<br> docker cp /opt/test.js testtomcat:/usr/local/tomcat/webapps/test/js</p><h5 id="显示命令行"><a href="#显示命令行" class="headerlink" title="显示命令行"></a>显示命令行</h5><p>docker ps –no-trunc</p><h5 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h5><ol><li><p>elasticSearch Docker启动报错：max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]</p><ul><li><p>linux</p><p>解决办法1：<br>在宿主主机中执行<br>[root@localhost ~]# sysctl -w vm.max_map_count=262144<br>[root@localhost ~]# sysctl -a|grep vm.max_map_count<br>vm.max_map_count = 262144<br>这种重启会失效<br>解决办法2：<br>在/etc/sysctl.conf文件最后添加一行：<br>vm.max_map_count=262144<br>立即生效, 执行：<br>/sbin/sysctl -p</p></li><li><p>windows</p><p>docker-machine ssh<br>sudo sysctl -w vm.max_map_count=262144</p></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;导出命令-镜像&quot;&gt;&lt;a href=&quot;#导出命令-镜像&quot; class=&quot;headerlink&quot; title=&quot;导出命令-镜像&quot;&gt;&lt;/a&gt;导出命令-镜像&lt;/h5&gt;&lt;p&gt;docker save [options] images [images…]&lt;br&gt;示例&lt;br&gt;do
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="docker" scheme="http://20177.win/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>linux常规操作</title>
    <link href="http://20177.win/2019/01/29/other/linux%20operator/"/>
    <id>http://20177.win/2019/01/29/other/linux operator/</id>
    <published>2019-01-29T01:13:56.000Z</published>
    <updated>2019-07-19T06:27:14.904Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一般操作"><a href="#一般操作" class="headerlink" title="一般操作"></a>一般操作</h4><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看文件大小：**du -h --<span class="built_in">max</span>-depth=<span class="number">1</span> /tools**</span><br><span class="line"></span><br><span class="line">查看进程：</span><br><span class="line">netstat -apn | <span class="keyword">grep</span> java</span><br><span class="line"><span class="keyword">ps</span> -aux | <span class="keyword">grep</span> java</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一般操作&quot;&gt;&lt;a href=&quot;#一般操作&quot; class=&quot;headerlink&quot; title=&quot;一般操作&quot;&gt;&lt;/a&gt;一般操作&lt;/h4&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="linux" scheme="http://20177.win/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>git操作</title>
    <link href="http://20177.win/2019/01/24/other/git%20operator/"/>
    <id>http://20177.win/2019/01/24/other/git operator/</id>
    <published>2019-01-24T06:57:56.000Z</published>
    <updated>2019-07-19T06:27:14.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一般操作"><a href="#一般操作" class="headerlink" title="一般操作"></a>一般操作</h4><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">查看：*<span class="strong">*git status -s*</span><span class="strong">*</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">暂存文件的命令：*</span><span class="strong">*git add &lt;文件名&gt;*</span><span class="strong">*</span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">将被修改的文件暂存并提交的命令：*</span><span class="strong">*git commit -a*</span>* </span><br><span class="line"></span><br><span class="line">放弃未暂存文件的修改命令：*<span class="strong">*git checkout -- &lt;文件名&gt;*</span><span class="strong">*</span></span><br></pre></td></tr></table></figure><h4 id="强制同步代码"><a href="#强制同步代码" class="headerlink" title="强制同步代码"></a>强制同步代码</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git fetch <span class="comment">--all</span></span><br><span class="line">git <span class="keyword">reset</span>  <span class="comment">--hard origin/要强制同步的分支！</span></span><br><span class="line">git pullx</span><br></pre></td></tr></table></figure><h4 id="git文件太大无法下载"><a href="#git文件太大无法下载" class="headerlink" title="git文件太大无法下载"></a>git文件太大无法下载</h4><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git config <span class="params">--global</span> http.postBuffer 524288000</span><br><span class="line"></span><br><span class="line">git clone https:<span class="string">//xxx.git</span> E:\workspace\blog <span class="params">--depth</span> 1</span><br><span class="line"><span class="keyword">cd</span> E:\workspace\blog</span><br><span class="line">git fetch <span class="params">--unshallow</span></span><br></pre></td></tr></table></figure><h4 id="git只合并某次commit"><a href="#git只合并某次commit" class="headerlink" title="git只合并某次commit"></a>git只合并某次commit</h4><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>##### 使用场景：因开发两个分支并行开发，直接合并会造成很多问题。只是想合并某次改变的commit，就可以实用git cherry-pick</span><br><span class="line"></span><br><span class="line"><span class="bullet">1. </span>通过git log可以查看当前分支的所有提交的哈希值（ID）</span><br><span class="line"></span><br><span class="line"><span class="bullet">2. </span>切到需要合并的目标分支</span><br><span class="line"></span><br><span class="line"><span class="bullet">3. </span>运行 git cherry-pick 哈希值</span><br><span class="line"></span><br><span class="line"><span class="bullet">4. </span>如果遇到error，运行 git status查看 ummerged 下红色的文件路径，用编辑器打开，修改（寻找 === 标志， 上半是旧代码，下半是新代码，自己决定取舍）</span><br><span class="line"></span><br><span class="line"><span class="bullet">5. </span>完成所有冲突文件修改后，git add 对应文件</span><br><span class="line"></span><br><span class="line"><span class="bullet">6. </span>运行 git cherry-pick --continue 即完成。</span><br><span class="line"></span><br><span class="line">   注意：这时会弹出 一段可能会很长的描述性文字，可以全部删除，改成自己要的文字，一般我是保留最上那行，跟之前的历史描述一致，方便查找。不删除也无所谓。然后保存退出即可。</span><br><span class="line">   这个界面是vi的编辑界面，一次删除多行的命令为 “数字X+dd” 即可删除当前光标一下的X行内容。</span><br></pre></td></tr></table></figure><h4 id="给指定提交打tag"><a href="#给指定提交打tag" class="headerlink" title="给指定提交打tag"></a>给指定提交打tag</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="tag">&lt;版本号&gt;</span> <span class="tag">&lt;SHA值&gt;</span> -m <span class="string">"&lt;备注信息&gt;"</span></span><br><span class="line">如<span class="tag">&lt;SHA值&gt;</span>没有，则最新版本打<span class="keyword">tag</span></span><br><span class="line"></span><br><span class="line">比如 git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">1.0</span>.<span class="number">0</span> <span class="number">0</span>c3b62d -m <span class="string">"Release Edition v1.0.0"</span> 就是为SHA为<span class="number">0</span>c3b62d的这次提交打了<span class="number">1.0</span>发行版的<span class="keyword">tag</span></span><br></pre></td></tr></table></figure><h4 id="删除本地tag"><a href="#删除本地tag" class="headerlink" title="删除本地tag"></a>删除本地tag</h4><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-d</span> <span class="tag">&lt;版本号&gt;</span></span><br></pre></td></tr></table></figure><h4 id="推送标签"><a href="#推送标签" class="headerlink" title="推送标签"></a>推送标签</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">所有tag：git <span class="built_in">push</span> <span class="built_in">origin</span> --tags</span><br><span class="line">指定版本：git <span class="built_in">push</span> <span class="built_in">origin</span> &lt;版本号&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;一般操作&quot;&gt;&lt;a href=&quot;#一般操作&quot; class=&quot;headerlink&quot; title=&quot;一般操作&quot;&gt;&lt;/a&gt;一般操作&lt;/h4&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>springboot2.0.6使用sharding jdbc3.0</title>
    <link href="http://20177.win/2018/11/26/springboot/sharding%20jdbc/"/>
    <id>http://20177.win/2018/11/26/springboot/sharding jdbc/</id>
    <published>2018-11-26T11:06:54.000Z</published>
    <updated>2019-07-19T06:27:14.906Z</updated>
    
    <content type="html"><![CDATA[<p>当系统达到一定数据量的时候就需要分库分表处理等一些操作。</p><p>mycat（官网：<a href="http://www.mycat.io）一个彻底开源的，面向企业应用开发的大数据库集群。对java代码透明化。" target="_blank" rel="noopener">http://www.mycat.io）一个彻底开源的，面向企业应用开发的大数据库集群。对java代码透明化。</a></p><p>Sharding-jdbc（官网：<a href="http://shardingsphere.io/index_zh.html）定位为轻量级Java框架，在Java的JDBC层提供的额外服务。" target="_blank" rel="noopener">http://shardingsphere.io/index_zh.html）定位为轻量级Java框架，在Java的JDBC层提供的额外服务。</a> 它使用客户端直连数据库，以jar包形式提供服务，无需额外部署和依赖，可理解为增强版的JDBC驱动，完全兼容JDBC和各种ORM框架。</p><p>本文实现springboot2.0.6使用sharding jdbc3.0+mybatis的分库分表，依照官网例子所得</p><p><strong>pom.xml</strong></p><p>mysql是5.7版本，驱动com.mysql.jdbc.Driver，注意mysql-connector-java版本号也相关</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span></span><br><span class="line"><span class="xml">xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>demo-sharding-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">name</span>&gt;</span>demo-sharding-jdbc<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">relativePath</span> /&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">sharding-sphere.version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">sharding-sphere.version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--spring-boot-web--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--mybatis-spring-boot-starter和pagehelper-spring-boot-starter中都包含，但是5.10版本callback类已经缺失，故直接申明引用--&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.20.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- sharding-jdbc --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;sharding-sphere.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.shardingsphere<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sharding-jdbc-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$</span><span class="template-variable">&#123;sharding-sphere.version&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>sql</strong></p><p>创建2个库，分别创建以下语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">EXISTS</span> <span class="string">`t_order_0`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_order_0`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`order_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`status`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态（1正常）'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否已删除(0未删除，1已经删除)'</span>,</span><br><span class="line">  <span class="string">`create_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'订单表'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">TABLE</span> <span class="keyword">if</span> <span class="keyword">EXISTS</span> <span class="string">`t_order_1`</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`t_order_1`</span> (</span><br><span class="line"><span class="string">`id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`order_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`user_id`</span> <span class="built_in">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户ID'</span>,</span><br><span class="line">  <span class="string">`status`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'状态（1正常）'</span>,</span><br><span class="line">  <span class="string">`is_deleted`</span> tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">'0'</span> <span class="keyword">COMMENT</span> <span class="string">'是否已删除(0未删除，1已经删除)'</span>,</span><br><span class="line">  <span class="string">`create_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_platform`</span> tinyint(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_user`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`update_time`</span> datetime <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 <span class="keyword">COMMENT</span>=<span class="string">'订单表'</span>;</span><br></pre></td></tr></table></figure><p><strong>单库分表配置文件application-dev1.properties</strong></p><p>数据库sharding</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#这是单库的分表</span></span><br><span class="line">spring.application.<span class="attribute">name</span>=demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding.jdbc</span></span><br><span class="line">sharding.jdbc.datasource.<span class="attribute">names</span>=ds0</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">type</span>=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">url</span>=jdbc:mysql://localhost:3307/sharding?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">username</span>=root</span><br><span class="line">sharding.jdbc.datasource.ds0.<span class="attribute">password</span>=123456</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">driver-class-name</span>=<span class="variable">$&#123;sharding.jdbc.datasource.ds.driver-class-name&#125;</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">initial-size</span>=1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">max-active</span>=50</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">min-idle</span>=1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">time-between-eviction-runs-millis</span>=60000</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">min-evictable-idle-time-millis</span>=300000</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">validation-query</span>=select 1</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-while-idle</span>=<span class="literal">true</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-on-borrow</span>=<span class="literal">false</span></span><br><span class="line">sharding.jdbc.datasource.ds0.druid.<span class="attribute">test-on-return</span>=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.<span class="attribute">actual-data-nodes</span>=ds0.t_order_$-&gt;&#123;0<span class="built_in">..</span>1&#125;</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.<span class="attribute">sharding-column</span>=order_id</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.table-strategy.inline.<span class="attribute">algorithm-expression</span>=t_order_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">sharding.jdbc.config.sharding.tables.t_order.<span class="attribute">key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">sharding.jdbc.config.sharding.props.sql.<span class="attribute">show</span>=<span class="literal">true</span></span><br><span class="line"><span class="comment">#mybatis</span></span><br><span class="line">mybatis.<span class="attribute">mapper-locations</span>=classpath:mapper/*Mapper.xml</span><br><span class="line">pagehelper.<span class="attribute">helperDialect</span>=mysql</span><br><span class="line">pagehelper.<span class="attribute">reasonable</span>=<span class="literal">true</span></span><br><span class="line">pagehelper.<span class="attribute">supportMethodsArguments</span>=<span class="literal">true</span></span><br><span class="line">pagehelper.<span class="attribute">params</span>=count=countSql</span><br><span class="line"></span><br><span class="line">logging.level.com.example.demo.<span class="attribute">dao</span>=DEBUG</span><br><span class="line">logging.level.com.example.<span class="attribute">demo</span>=INFO</span><br><span class="line"><span class="comment">#logging.level.file=/Users/yaojie/Desktop/demo.log</span></span><br></pre></td></tr></table></figure><p><strong>分库分表配置文件application-dev.properties</strong></p><p>数据库ds0，ds1</p><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">spring.application.name=demo</span><br><span class="line"></span><br><span class="line"><span class="comment">#sharding.jdbc</span></span><br><span class="line">sharding.jdbc.datasource.names=ds0,ds1</span><br><span class="line">sharding.jdbc.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource</span><br><span class="line">sharding.jdbc.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver</span><br><span class="line">sharding.jdbc.datasource.ds0.url=jdbc:mysql://localhost:3307/ds0?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding.jdbc.datasource.ds0.username=root</span><br><span class="line">sharding.jdbc.datasource.ds0.password=123456</span><br><span class="line">sharding.jdbc.datasource.ds0.druid.driver-class-name=$&#123;<span class="attribute">sharding.jdbc.datasource.ds.driver-class-name&#125;</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.initial-size=1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.max-active=50</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.min-idle=1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.time-between-eviction-runs-millis=60000</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.min-evictable-idle-time-millis=300000</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.validation-query=select 1</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-while-idle=true</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-on-borrow=false</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds0.druid.test-on-return=false</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attribute">sharding.jdbc.datasource.ds1.url=jdbc</span>:mysql://localhost:3307/ds1?autoReconnect=true&amp;allowMultiQueries=true&amp;useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.username</span>=root</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.password</span>=123456</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.driver-class-name</span>=$&#123;sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span><span class="variable">.driver-class-name</span>&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.initial-size</span>=1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.max-active</span>=50</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.min-idle</span>=1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.time-between-eviction-runs-millis</span>=60000</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.min-evictable-idle-time-millis</span>=300000</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.validation-query</span>=select 1</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-while-idle</span>=true</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-on-borrow</span>=false</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.datasource</span><span class="variable">.ds</span>1<span class="variable">.druid</span><span class="variable">.test-on-return</span>=false</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-database-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=user_id</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-database-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=ds$-&gt;&#123;user_id % 2&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.default-data-source-name</span>=ds0</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.actual-data-nodes</span>=ds$-&gt;&#123;0..1&#125;<span class="variable">.t_order_</span>$-&gt;&#123;0..1&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=order_id</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=t_order_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t_order</span><span class="variable">.key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.actual-data-nodes</span>=ds$-&gt;&#123;0..1&#125;<span class="variable">.t_order_item_</span>$-&gt;&#123;0..1&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.sharding-column</span>=order_id</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.table-strategy</span><span class="variable">.inline</span><span class="variable">.algorithm-expression</span>=t_order_item_$-&gt;&#123;order_id % 2&#125;</span><br><span class="line">#sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.tables</span><span class="variable">.t-order-item</span><span class="variable">.key-generator-column-name</span>=id</span><br><span class="line"></span><br><span class="line">sharding<span class="variable">.jdbc</span><span class="variable">.config</span><span class="variable">.sharding</span><span class="variable">.props</span><span class="variable">.sql</span><span class="variable">.show</span>=true</span><br><span class="line"></span><br><span class="line">#mybatis</span><br><span class="line">mybatis<span class="variable">.mapper-locations</span>=classpath:mapper/*Mapper<span class="variable">.xml</span></span><br><span class="line">pagehelper<span class="variable">.helperDialect</span>=mysql</span><br><span class="line">pagehelper<span class="variable">.reasonable</span>=true</span><br><span class="line">pagehelper<span class="variable">.supportMethodsArguments</span>=true</span><br><span class="line">pagehelper<span class="variable">.params</span>=count=countSql</span><br><span class="line"></span><br><span class="line">logging<span class="variable">.level</span><span class="variable">.com</span><span class="variable">.example</span><span class="variable">.demo</span><span class="variable">.dao</span>=DEBUG</span><br><span class="line">logging<span class="variable">.level</span><span class="variable">.com</span><span class="variable">.example</span><span class="variable">.demo</span>=INFO</span><br><span class="line">#logging<span class="variable">.level</span><span class="variable">.file</span>=/Users/yaojie/Desktop/demo<span class="variable">.log</span></span><br></pre></td></tr></table></figure><p><strong>配置文件application.properties</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.profiles</span><span class="selector-class">.active</span>=dev</span><br></pre></td></tr></table></figure><p><strong>DAO的mybatis写法即可</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DemoDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert</span>(&#123;<span class="string">"insert into t_order(`order_id`,`user_id`) values(#&#123;orderId&#125;, #&#123;userId&#125;)"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">insertOrder</span><span class="params">(OrderDto orderDto)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样即可实现分库分表</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当系统达到一定数据量的时候就需要分库分表处理等一些操作。&lt;/p&gt;
&lt;p&gt;mycat（官网：&lt;a href=&quot;http://www.mycat.io）一个彻底开源的，面向企业应用开发的大数据库集群。对java代码透明化。&quot; target=&quot;_blank&quot; rel=&quot;noope
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>springboot一些方法</title>
    <link href="http://20177.win/2018/11/23/springboot/tip-springboot%20tip/"/>
    <id>http://20177.win/2018/11/23/springboot/tip-springboot tip/</id>
    <published>2018-11-23T04:24:22.000Z</published>
    <updated>2019-07-19T06:27:14.907Z</updated>
    
    <content type="html"><![CDATA[<p>1、动态加载类，不需要<code>@Autowired</code>注入类,可在没有<code>@Component</code>中使用</p><p>使用</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> SspSchoolClient sspSchoolClient = SpringUtil.getBean(SspSchoolClient.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure><p>方法</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.InitializingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ApplicationObjectSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.WebApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.support.WebApplicationContextUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringUtil</span> <span class="keyword">extends</span> <span class="title">ApplicationObjectSupport</span> <span class="keyword">implements</span> <span class="title">InitializingBean</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ApplicationContext wac;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">T <span class="title">getBean</span><span class="params">(Class&lt;T&gt; clazz)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(clazz)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Object <span class="title">getBean</span><span class="params">(String beanName)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(beanName)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function">Object <span class="title">getBean</span><span class="params">(String beanName, ServletContext sc)</span> </span>&#123;</span><br><span class="line">        WebApplicationContext wac = WebApplicationContextUtils.getRequiredWebApplicationContext(sc);</span><br><span class="line">        <span class="function"><span class="keyword">return</span> wac.<span class="title">getBean</span><span class="params">(beanName)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">afterPropertiesSet</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        wac = <span class="keyword">super</span>.getApplicationContext();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、动态加载类，不需要&lt;code&gt;@Autowired&lt;/code&gt;注入类,可在没有&lt;code&gt;@Component&lt;/code&gt;中使用&lt;/p&gt;
&lt;p&gt;使用&lt;/p&gt;
&lt;figure class=&quot;highlight crystal&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>docker安装工具</title>
    <link href="http://20177.win/2018/10/08/docker/docker%20install%20tools/"/>
    <id>http://20177.win/2018/10/08/docker/docker install tools/</id>
    <published>2018-10-08T06:51:56.000Z</published>
    <updated>2019-07-19T06:27:14.901Z</updated>
    
    <content type="html"><![CDATA[<p>环境：docker 17.03.0</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">windwos坑：</span><br><span class="line">docker是运行在Linux上的，在Windows中运行docker，实际上还是在Windows下先安装了一个Linux环境，然后在这个系统中运行的docker。也就是说，服务中使用的localhost指的是这个Linux环境的地址，而不是我们的宿主环境Windows。我们可以通过命令： </span><br><span class="line">docker-machine<span class="built_in"> ip default </span></span><br><span class="line">找到这个Linux的ip地址</span><br><span class="line"></span><br><span class="line">docker的-v在windows上也是坑</span><br><span class="line"></span><br><span class="line">docker <span class="builtin-name">run</span> -d -p 3306:3306 <span class="attribute">--privileged</span>=<span class="literal">true</span> -e <span class="attribute">MYSQL_ROOT_PASSWORD</span>=123456 --name mysql mysql:5.7 <span class="attribute">--character-set-server</span>=utf8mb4 <span class="attribute">--collation-server</span>=utf8mb4_general_ci</span><br></pre></td></tr></table></figure><p>以下是在linux环境下的安装</p><p>1.<strong>安装mysql</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">docker pull mysql:5.7</span><br><span class="line">docker run -d -p 3307:3306 <span class="comment">--privileged=true -v /Users/yaojie/Documents/docker/mysql/my.cnf:/etc/mysql/my.cnf -v /Users/yaojie/Documents/docker/mysql/my:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql mysql:5.7</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--privileged=true：容器内的root拥有真正root权限，否则容器内root只是外部普通用户权限</span></span><br><span class="line">-v /docker/mysql/conf/my.cnf:/etc/my.cnf：映射配置文件</span><br><span class="line">-v /docker/mysql/data:/var/lib/mysql：映射数据目录</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加用户</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> <span class="string">'rams'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'123'</span>;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>,<span class="keyword">INSERT</span>,<span class="keyword">CREATE</span>,<span class="keyword">UPDATE</span>,<span class="keyword">DELETE</span>,<span class="keyword">DROP</span>,<span class="keyword">ALTER</span> <span class="keyword">ON</span> rams.* <span class="keyword">TO</span> <span class="string">'rams'</span>@<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">User</span> = <span class="string">'root'</span> <span class="keyword">and</span> Host=<span class="string">'%'</span>;</span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>;</span><br></pre></td></tr></table></figure><p>本地文件/docker/mysql/conf/my.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="comment">#data     = /var/lib/mysql</span></span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主服务器</span></span><br><span class="line"><span class="comment">#server-id = 1</span></span><br><span class="line"><span class="comment">#log_bin = mysql-bin</span></span><br><span class="line"><span class="comment">#lower_case_table_names=1</span></span><br></pre></td></tr></table></figure><p>创建本地目录/docker/mysql/data</p><p>2.<strong>安装redis</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">redis:</span><span class="number">3.2</span></span><br><span class="line">docker run --name redis -d -p <span class="number">6379</span>:<span class="number">6379</span> -v <span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker<span class="regexp">/redis/</span><span class="string">data:</span>/data <span class="string">redis:</span><span class="number">3.2</span> redis-server --requirepass <span class="string">"mypassword"</span> --appendonly yes</span><br><span class="line"></span><br><span class="line">-p <span class="number">6379</span>:<span class="number">6379</span> : 将容器的<span class="number">6379</span>端口映射到主机的<span class="number">6379</span>端口</span><br><span class="line">-v $PWD<span class="regexp">/data:/</span><span class="string">data :</span> 将主机中当前目录下的data挂载到容器的/data</span><br><span class="line">redis-server --appendonly <span class="string">yes :</span> 在容器执行redis-server启动命令，并打开redis持久化配置</span><br></pre></td></tr></table></figure><p>创建本地目录/Users/yaojie/Documents/docker/redis/data</p><p>3.<strong>安装rabbitmq</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">search</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span></span><br><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span>     |  <span class="selector-tag">docker</span> <span class="selector-tag">pull</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:3.6.9-management</span></span><br><span class="line"><span class="selector-tag">docker</span> <span class="selector-tag">run</span> <span class="selector-tag">-d</span> <span class="selector-tag">--name</span> <span class="selector-tag">rabbitmq</span> <span class="selector-tag">-p</span> <span class="selector-tag">5671</span><span class="selector-pseudo">:5671</span> <span class="selector-tag">-p</span> <span class="selector-tag">5672</span><span class="selector-pseudo">:5672</span> <span class="selector-tag">-p</span> <span class="selector-tag">4369</span><span class="selector-pseudo">:4369</span> <span class="selector-tag">-p</span> <span class="selector-tag">25672</span><span class="selector-pseudo">:25672</span> <span class="selector-tag">-p</span> <span class="selector-tag">15671</span><span class="selector-pseudo">:15671</span> <span class="selector-tag">-p</span> <span class="selector-tag">15672</span><span class="selector-pseudo">:15672</span> <span class="selector-tag">rabbitmq</span><span class="selector-pseudo">:management</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">http</span>:<span class="comment">//宿主机IP:15672，默认创建了一个 guest 用户，密码也是 guest</span></span><br><span class="line"><span class="selector-tag">management</span> 是带界面的<span class="selector-tag">rabbitmq</span></span><br></pre></td></tr></table></figure><p>4.<strong>安装ftp</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker pull fauria/vsftpd</span><br><span class="line">docker run -d -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>vsftpd:<span class="meta-keyword">/home/</span>vsftpd -p <span class="number">20</span>:<span class="number">20</span> -p <span class="number">21</span>:<span class="number">21</span> -p <span class="number">21100</span><span class="number">-21110</span>:<span class="number">21100</span><span class="number">-21110</span> -e FTP_USER=test -e FTP_PASS=test --name vsftpd fauria/vsftpd</span><br><span class="line"></span><br><span class="line">会以登录用户名 (test) 创建一个目录 (/Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>vsftpd/test) 作为 ftp 根目录</span><br><span class="line">测试时发现不加 -p <span class="number">20</span>:<span class="number">20</span> 依然可以正常操作</span><br><span class="line"></span><br><span class="line"><span class="meta"># 添加新用户</span></span><br><span class="line">docker exec -it vsftpd <span class="meta-keyword">/bin/</span>bash</span><br><span class="line">mkdir <span class="meta-keyword">/home/</span>vsftpd<span class="class">/&#123;myuser&#125;</span></span><br><span class="line"><span class="class">chown -R ftp:ftp <span class="meta-keyword">/home/</span>vsftpd(请别忘了这一句的执行否者写文件的时候可能会存在没有权限问题)</span></span><br><span class="line"><span class="class">vi <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.txt（奇数行用户名 偶数行密码）</span></span><br><span class="line"><span class="class"><span class="meta-keyword">/usr/</span>bin/db_load -T -t hash -f <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.txt <span class="meta-keyword">/etc/</span>vsftpd/virtual_users.db</span></span><br><span class="line"><span class="class">exit</span></span><br><span class="line"><span class="class">docker restart vsftpd</span></span><br></pre></td></tr></table></figure><p>安装tomcat映射ftp的文件以http方式提供出去</p><p>首先在本地/Users/yaojie/Documents/docker/tomcat/server.xml的host中增加：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">"/Users/yaojie/Documents/docker/vsftpd"</span> <span class="attribute">path</span>=<span class="string">"/images"</span> /&gt;</span><br></pre></td></tr></table></figure><p>以上ftp已创建目录/Users/yaojie/Documents/docker/vsftpd为ftp的根目录</p><p>docker部署tomcat</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">tomcat:</span><span class="number">7.0</span><span class="number">.75</span></span><br><span class="line">docker run -d -v <span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker<span class="regexp">/tomcat/</span>server.<span class="string">xml:</span><span class="regexp">/usr/</span>local<span class="regexp">/tomcat/</span>conf<span class="regexp">/server.xml -v /</span>Users<span class="regexp">/yaojie/</span>Documents<span class="regexp">/docker/</span><span class="string">vsftpd:</span><span class="regexp">/Users/</span>yaojie<span class="regexp">/Documents/</span>docker/vsftpd -p <span class="number">9090</span>:<span class="number">8080</span> --name tomcat <span class="string">tomcat:</span><span class="number">7.0</span><span class="number">.75</span></span><br></pre></td></tr></table></figure><p>访问<a href="http://localhost:9090/images/test/timg.jpeg即可" target="_blank" rel="noopener">http://localhost:9090/images/test/timg.jpeg即可</a></p><p>5.<strong>安装es</strong></p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="string">elasticsearch:</span><span class="number">5.6</span><span class="number">.6</span></span><br><span class="line"></span><br><span class="line">docker run -e ES_JAVA_OPTS=<span class="string">"-Xms512m -Xmx512m"</span> -d -p <span class="number">9200</span>:<span class="number">9200</span> -p <span class="number">9300</span>:<span class="number">9300</span> -v <span class="regexp">/具体地址/</span>elasticsearch.<span class="string">yml:</span><span class="regexp">/usr/</span>share<span class="regexp">/elasticsearch/</span>config<span class="regexp">/elasticsearch.yml -v /</span>本地存放数据目录(先创建好)<span class="regexp">/data:/</span>usr<span class="regexp">/share/</span>elasticsearch/data --name myes <span class="string">elasticsearch:</span><span class="number">5.6</span><span class="number">.6</span></span><br></pre></td></tr></table></figure><p>6.<strong>安装postgis</strong></p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull mdillon/<span class="symbol">postgis:</span><span class="number">10</span></span><br><span class="line"></span><br><span class="line">docker run --name mypostgis -e POSTGRES_PASSWORD=root -e POSTGRES_USER=user_ctserver -v 本地目录<span class="symbol">:/var/lib/postgresql/data</span> -p <span class="number">54321</span><span class="symbol">:</span><span class="number">5432</span> -d mdillon/<span class="symbol">postgis:</span><span class="number">10</span></span><br></pre></td></tr></table></figure><p>7.<strong>安装yapi</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name mongo-yapi -v /tools/docker/yapi/mongo_data_yapi:/data/db mongo</span><br><span class="line"></span><br><span class="line">docker pull registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi</span><br><span class="line"></span><br><span class="line">docker run -it --rm --link mongo-yapi:mongo --entrypoint npm --workdir /api/vendors registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi run install-server</span><br><span class="line"></span><br><span class="line">docker run -d --name yapi --link mongo-yapi:mongo --workdir /api/vendors -<span class="selector-tag">p</span> <span class="number">3000</span>:<span class="number">3000</span> registry<span class="selector-class">.cn-hangzhou</span><span class="selector-class">.aliyuncs</span><span class="selector-class">.com</span>/anoy/yapi server/app.js</span><br></pre></td></tr></table></figure><p>访问 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> 登录账号 <a href="mailto:admin@admin.com" target="_blank" rel="noopener">admin@admin.com</a>，密码 ymfe.org</p><p><strong>注：docker简单操作</strong></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">导出命令-镜像</span><br><span class="line">docker save [<span class="keyword">options</span>] images [images...] </span><br><span class="line">示例 </span><br><span class="line">docker save -<span class="keyword">o</span> nginx.tar nginx:latest </span><br><span class="line"></span><br><span class="line">导入命令-镜像</span><br><span class="line">docker load [<span class="keyword">options</span>] </span><br><span class="line">示例 </span><br><span class="line">docker load -i nginx.tar </span><br><span class="line"></span><br><span class="line">容器生成镜像-</span><br><span class="line">docker commit -<span class="keyword">m</span> <span class="string">"change somth"</span> -<span class="keyword">a</span> <span class="string">"somebody info"</span> [容器id] [新的镜像:<span class="keyword">tag</span>]</span><br><span class="line">再导出镜像</span><br><span class="line"></span><br><span class="line">导出命令-容器</span><br><span class="line">docker export [<span class="keyword">options</span>] container </span><br><span class="line">示例 </span><br><span class="line">docker export -<span class="keyword">o</span> nginx-test.tar nginx-test </span><br><span class="line"></span><br><span class="line">导入命令-容器</span><br><span class="line">docker import [<span class="keyword">options</span>] <span class="keyword">file</span>|URL|- [REPOSITORY[:TAG]] </span><br><span class="line">示例 </span><br><span class="line">docker import nginx-test.tar nginx:imp </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">从容器里面拷文件到宿主机</span><br><span class="line"> docker <span class="keyword">cp</span> 容器名：要拷贝的文件在容器里面的路径       要拷贝到宿主机的相应路径 </span><br><span class="line"> 示例 </span><br><span class="line"> docker <span class="keyword">cp</span> testtomcat：/usr/local/tomcat/webapps/test/js/test.js /<span class="keyword">opt</span></span><br><span class="line"></span><br><span class="line">从宿主机拷文件到容器里面</span><br><span class="line"> docker <span class="keyword">cp</span> 要拷贝的文件路径 容器名：要拷贝到容器里面对应的路径</span><br><span class="line"> docker <span class="keyword">cp</span> /<span class="keyword">opt</span>/test.js testtomcat：/usr/local/tomcat/webapps/test/js</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> docker <span class="keyword">ps</span> --<span class="keyword">no</span>-<span class="built_in">trunc</span> </span><br><span class="line"> </span><br><span class="line"> 镜像-<span class="keyword">tag</span>-搜索：</span><br><span class="line"> http<span class="variable">s:</span>//hub.docker.<span class="keyword">com</span>/</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境：docker 17.03.0&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l
      
    
    </summary>
    
      <category term="docker" scheme="http://20177.win/categories/docker/"/>
    
    
      <category term="docker" scheme="http://20177.win/tags/docker/"/>
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>gitlab+jenkins部署springboot</title>
    <link href="http://20177.win/2018/09/28/other/gitlab_jenkins+springboot/"/>
    <id>http://20177.win/2018/09/28/other/gitlab_jenkins+springboot/</id>
    <published>2018-09-28T06:51:56.000Z</published>
    <updated>2019-07-19T06:27:14.904Z</updated>
    
    <content type="html"><![CDATA[<p>环境：linux</p><ul><li>部署Gitlab</li></ul><p>邮件</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install postfix</span><br><span class="line">service postfix start</span><br></pre></td></tr></table></figure><p>Gitlab</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum <span class="keyword">install</span> gitlab-ce</span><br></pre></td></tr></table></figure><p>编辑访问地址</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/gitlab/gitlab.rb;</span><br><span class="line">以下</span><br><span class="line">external_url 'http://IP:<span class="number">1008</span>0'                                                                                                     </span><br><span class="line">unicorn['port'] = <span class="number">18080</span></span><br></pre></td></tr></table></figure><p>使配置生效且重新启动</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="meta">opt</span>/gitlab/<span class="keyword">bin/gitlab-ctl </span>reconfigure<span class="comment">;</span></span><br></pre></td></tr></table></figure><p>系统防火墙啥的关注下</p><p>访问<a href="http://IP:10080" target="_blank" rel="noopener">http://IP:10080</a> ，初次进入需要设置管理员密码，用户默认root</p><p><strong><em>备注</em></strong></p><p>一些常用命令：</p><p>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl status<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail –查看所有日志<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail nginx/gitlab_access.log –查看nginx访问日志<br>[root@iZbp14cvwowqu27clxb6pxZ ~]# gitlab-ctl tail unicorn –跟踪unicorn的状态</p><p>一些目录结构：</p><p>主配置文件：/etc/gitlab/gitlab.rb // 可以自定义一些邮件服务等<br>日志地址：/var/log/gitlab/ // 对应各服务的打印日志<br>服务地址：/var/opt/gitlab/ // 对应各服务的主目录<br>仓库地址：/var/opt/gitlab/git-data // 记录项目仓库等提交信息<br>重置配置：gitlab-ctl reconfigure // 不要乱用，会重置为最原始的配置的<br>重启服务：gitlab-ctl stop/start/restart/uninstall // 停止、启动、重启、卸载<br>默认安装：postgres、nginx、redis、unicorn …… </p><p>测试邮件：执行 gitlab-rails console进入控制台。 然后在控制台提示符后输入下面的命令 发送一封测试邮件：Notify.test_email(‘收件人邮箱’, ‘邮件标题’, ‘邮件正文’).deliver_now</p><ul><li>部署jenkins</li></ul><p><strong><em>前提</em></strong></p><ol><li>安装有jdk</li><li>安装有maven</li><li>在<a href="https://jenkins.io/download/" target="_blank" rel="noopener">https://jenkins.io/download/</a> 下载war包</li></ol><p>默认情况下Jenkins在编译好后会杀掉所有衍生进程。这里需要禁止这个功能：在启动Jenkins的时候直接通过Java选项来关闭的这个功能，这个war又自带的jetty，所以可以直接启动：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -Dhudson<span class="selector-class">.util</span><span class="selector-class">.ProcessTree</span><span class="selector-class">.disable</span>=true -jar jenkins<span class="selector-class">.war</span> &amp;</span><br></pre></td></tr></table></figure><p>也可以放入tomcat等服务器启动。</p><p>这里默认端口8080，所以访问<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a> 即可</p><p>(1) 按照提示全局配置：</p><ol><li>填写Jenkins自动生成的随机的按照口令</li><li>建议选择安装官方推荐插件</li><li>配置用户名密码</li><li>至此进入系统，以下全局配置</li><li>系统管理-》全局工具配置 （1）jdk路径（2）maven路径（3）maven-setting.xml路径。去掉勾选自动安装</li><li>插件：Git和Git Paramter，Maven Integration，publish over SSH、SSH插件</li></ol><p>(2) 按照提示配置springboot项目：</p><p>首页点击<strong>新建</strong>：输入项目名称等一系列操作截图：</p><ol><li>-<img src="/images/other/gitlab_jenkins+springboot_1.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_2.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_3.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_4.jpeg" alt></li><li>-<img src="/images/other/gitlab_jenkins+springboot_5.jpeg" alt></li></ol><p>执行的shell，kill旧项目，删除旧项目，启动新项目，备份老项目</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">DATE=$(date +%Y%m%d)</span><br><span class="line">export JAVA_HOME PATH CLASSPATH</span><br><span class="line">JAVA_HOME=<span class="regexp">/Library/</span>Java/JavaVirtualMachines/jdk1.<span class="number">8.0_161</span>.jdk/Contents/Home</span><br><span class="line">PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH</span><br><span class="line">CLASSPATH=.:$JAVA_HOME/lib:$JAVA_HOME/jre/lib:$CLASSPATH</span><br><span class="line">DIR=<span class="regexp">/Users/xxx</span><span class="regexp">/Desktop/springboot</span>-<span class="keyword">study</span></span><br><span class="line">JARFILE=springboot-<span class="keyword">study</span>-<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT.jar</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -d $DIR/backup ];then</span><br><span class="line">   <span class="keyword">mkdir</span> -p $DIR/backup</span><br><span class="line">fi</span><br><span class="line">cd $DIR</span><br><span class="line"></span><br><span class="line">ps -ef | <span class="keyword">grep</span> $JARFILE | <span class="keyword">grep</span> -v <span class="keyword">grep</span> | awk <span class="string">'&#123;print $2&#125;'</span> | xargs <span class="keyword">kill</span> -<span class="number">9</span></span><br><span class="line">mv $JARFILE backup/$JARFILE$DATE</span><br><span class="line">mv -f /Users/xxx/Documents/apache-maven-<span class="number">3.3</span>.<span class="number">9</span>/.m2/repository/com/example/springboot-<span class="keyword">study</span>/<span class="number">0</span>.<span class="number">0</span>.<span class="number">1</span>-SNAPSHOT/$JARFILE .</span><br><span class="line"></span><br><span class="line">java -jar $JARFILE --server.port=<span class="number">8888</span> &gt; out.log &amp;</span><br><span class="line"><span class="keyword">if</span> [ $? = <span class="number">0</span> ];then</span><br><span class="line">        <span class="keyword">sleep</span> <span class="number">30</span></span><br><span class="line">        tail -n <span class="number">50</span> out.log</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">cd backup/</span><br><span class="line">ls -<span class="keyword">lt</span>|awk <span class="string">'NR&gt;5&#123;print $NF&#125;'</span>|xargs rm -rf</span><br></pre></td></tr></table></figure><p>完结…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;环境：linux&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部署Gitlab&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;邮件&lt;/p&gt;
&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;li
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>验证码</title>
    <link href="http://20177.win/2018/09/17/other/captcha/"/>
    <id>http://20177.win/2018/09/17/other/captcha/</id>
    <published>2018-09-17T06:07:54.000Z</published>
    <updated>2019-07-19T06:27:14.903Z</updated>
    
    <content type="html"><![CDATA[<p>验证码类</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class CaptchaDto &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> code;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">byte</span>[] <span class="built_in">image</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getCode() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setCode(<span class="keyword">final</span> <span class="keyword">String</span> code) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">byte</span>[] getImage() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">image</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> setImage(<span class="keyword">final</span> <span class="built_in">byte</span>[] <span class="built_in">image</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.<span class="built_in">image</span> = <span class="built_in">image</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>生成的类Util</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.CaptchaDto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.geom.AffineTransform;</span><br><span class="line"><span class="keyword">import</span> java.awt.<span class="built_in">image</span>.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> class VerifyCodeUtil &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Random <span class="built_in">random</span> = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 字符集，排除0和O</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">char</span>[] codeOption = &#123; <span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'G'</span>, <span class="string">'H'</span>, <span class="string">'I'</span>, <span class="string">'J'</span>, <span class="string">'K'</span>, <span class="string">'L'</span>, <span class="string">'M'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'Q'</span>,</span><br><span class="line">            <span class="string">'R'</span>, <span class="string">'S'</span>, <span class="string">'T'</span>, <span class="string">'U'</span>, <span class="string">'V'</span>, <span class="string">'W'</span>, <span class="string">'X'</span>, <span class="string">'Y'</span>, <span class="string">'Z'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, <span class="string">'8'</span>, <span class="string">'9'</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//randomCode 为验证码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CaptchaDto generateCaptcha(<span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> <span class="built_in">int</span> codeCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span>[] fonts = &#123; <span class="string">"Bodoni MT"</span>, <span class="string">"Times New Roman"</span>, <span class="string">"Palatino Linotype"</span>, <span class="string">"DFKai-SB"</span>, <span class="string">"Lucida Console"</span>,</span><br><span class="line">                <span class="string">"Verdana"</span>, <span class="string">"Traditional Arabic"</span>, <span class="string">"Meiryo UI"</span>, <span class="string">"Malgun Gothic"</span>, <span class="string">"Century"</span>, <span class="string">"Algerian"</span> &#125;;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> fontFace = fonts[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> lineCount = <span class="number">20</span>; <span class="comment">// 干扰线数目</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">float</span> noiseRate = <span class="number">0.02</span>f; <span class="comment">// 噪点率</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> BufferedImage <span class="built_in">image</span> = <span class="keyword">new</span> BufferedImage(imageWidth, imageHeight, BufferedImage.TYPE_INT_RGB);</span><br><span class="line">        <span class="keyword">final</span> Graphics2D g = <span class="built_in">image</span>.<span class="built_in">createGraphics</span>();</span><br><span class="line">        <span class="comment">// 背景色，浅色</span></span><br><span class="line">        <span class="keyword">final</span> Color backgroundColor = getRandomLightColor();</span><br><span class="line">        g.setColor(backgroundColor);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, imageWidth, imageHeight);</span><br><span class="line">        <span class="comment">// 边框</span></span><br><span class="line">        g.setColor(Color.GRAY);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, imageWidth - <span class="number">1</span>, imageHeight - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isRandomLine = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isRandomNoise = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> isShearBackground = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 干扰线</span></span><br><span class="line">        <span class="keyword">if</span> (isRandomLine) &#123;</span><br><span class="line">            drawRandomLine(g, imageWidth, imageHeight, lineCount);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 噪点</span></span><br><span class="line">        <span class="keyword">if</span> (isRandomNoise) &#123;</span><br><span class="line">            drawRandomNoise(<span class="built_in">image</span>, imageWidth, imageHeight, noiseRate);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 扭曲背景</span></span><br><span class="line">        <span class="keyword">if</span> (isShearBackground) &#123;</span><br><span class="line">            shearBackground(g, imageWidth, imageHeight, backgroundColor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 随机字符</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> randomCode = generateCaptchaCode(codeCount);</span><br><span class="line">        <span class="comment">// 绘制随机字符</span></span><br><span class="line">        drawRandomCode(g, imageWidth, imageHeight, randomCode, fontFace);</span><br><span class="line">        g.dispose();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// captchaImage</span></span><br><span class="line">        <span class="keyword">final</span> ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        <span class="built_in">byte</span>[] bytes = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ImageIO.write(<span class="built_in">image</span>, <span class="string">"png"</span>, baos);</span><br><span class="line">            bytes = baos.toByteArray();</span><br><span class="line">            baos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CaptchaDto captchaDto = <span class="keyword">new</span> CaptchaDto();</span><br><span class="line">        captchaDto.setCode(randomCode);</span><br><span class="line">        captchaDto.setImage(bytes);</span><br><span class="line">        <span class="keyword">return</span> captchaDto;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制随机字符</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomCode(<span class="keyword">final</span> Graphics2D g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                       <span class="keyword">final</span> <span class="keyword">String</span> randomCode, <span class="keyword">final</span> <span class="keyword">String</span> fontFace) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeCount = randomCode.length();</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeSpace = imageWidth / (codeCount + <span class="number">1</span>); <span class="comment">// 字符宽度</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> fontHeight = (<span class="built_in">int</span>) (<span class="number">0.9</span> * imageHeight); <span class="comment">// 字符高度</span></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> codeBase = fontHeight; <span class="comment">// 字符基线</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Font codeFont = <span class="keyword">new</span> Font(fontFace, Font.ITALIC, fontHeight);</span><br><span class="line">        g.setFont(codeFont);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; randomCode.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> AffineTransform affine = <span class="keyword">new</span> AffineTransform();</span><br><span class="line">            affine.setToRotation(Math.<span class="literal">PI</span> / <span class="number">4</span> * <span class="built_in">random</span>.nextDouble() * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>),</span><br><span class="line">                    (imageWidth / codeCount) * i + fontHeight / <span class="number">2</span>, imageHeight / <span class="number">2</span>);</span><br><span class="line">            g.setTransform(affine);</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> randomStr = <span class="keyword">String</span>.valueOf(randomCode.charAt(i));</span><br><span class="line">            g.setColor(getRandomDeepColor());</span><br><span class="line">            g.drawString(randomStr, codeSpace * i + codeSpace / <span class="number">2</span>, codeBase);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取浅随机色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomDeepColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">double</span> dec = <span class="number">0.5</span>;</span><br><span class="line">        r = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        g = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        b = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        <span class="keyword">while</span> (r * <span class="number">0.299</span> + g * <span class="number">0.587</span> + b * <span class="number">0.114</span> &gt; <span class="number">64</span>) &#123;</span><br><span class="line">            r *= dec;</span><br><span class="line">            g *= dec;</span><br><span class="line">            b *= dec;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成随机验证码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">String</span> generateCaptchaCode(<span class="keyword">final</span> <span class="built_in">int</span> codeCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> StringBuffer randomCode = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; codeCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> randomStr = <span class="keyword">String</span>.valueOf(codeOption[<span class="built_in">random</span>.nextInt(codeOption.length)]);</span><br><span class="line">            randomCode.<span class="built_in">append</span>(randomStr);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> randomCode.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取浅随机色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomLightColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        r = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line">        g = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line">        b = <span class="number">192</span> + <span class="built_in">random</span>.nextInt(<span class="number">64</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制干扰线,随机长度，随机位置</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomLine(<span class="keyword">final</span> Graphics2D g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                       <span class="keyword">final</span> <span class="built_in">int</span> lineCount) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> lineLength = (<span class="built_in">int</span>) (<span class="number">0.8</span> * imageHeight);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; lineCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> x = <span class="built_in">random</span>.nextInt(imageWidth);</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> y = <span class="built_in">random</span>.nextInt(imageHeight);</span><br><span class="line">            <span class="built_in">int</span> xl = x + <span class="built_in">random</span>.nextInt(lineLength) * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">int</span> yl = y + <span class="built_in">random</span>.nextInt(lineLength) * (<span class="built_in">random</span>.nextBoolean() ? <span class="number">1</span> : <span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span> (xl &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                xl = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (xl &gt; imageWidth) &#123;</span><br><span class="line">                xl = imageWidth;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (yl &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                yl = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (yl &gt; imageHeight) &#123;</span><br><span class="line">                yl = imageHeight;</span><br><span class="line">            &#125;</span><br><span class="line">            g.setColor(getRandomColor());</span><br><span class="line">            g.drawLine(x, y, xl, yl);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成随机颜色</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Color getRandomColor() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">int</span> r, g, b;</span><br><span class="line">        r = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        g = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        b = <span class="built_in">random</span>.nextInt(<span class="number">256</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Color(r, g, b);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 绘制随机噪点</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> drawRandomNoise(<span class="keyword">final</span> BufferedImage <span class="built_in">image</span>, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                        <span class="keyword">final</span> <span class="built_in">float</span> noiseRate) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> noiseCount = (<span class="built_in">int</span>) (imageWidth * imageHeight * noiseRate);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; noiseCount; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> x = <span class="built_in">random</span>.nextInt(imageWidth);</span><br><span class="line">            <span class="keyword">final</span> <span class="built_in">int</span> y = <span class="built_in">random</span>.nextInt(imageHeight);</span><br><span class="line">            <span class="keyword">final</span> Color c = getRandomColor();</span><br><span class="line">            <span class="built_in">image</span>.setRGB(x, y, c.getRGB());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 扭曲背景</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> shearBackground(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight,</span><br><span class="line">                                        <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">shearX</span>(g, imageWidth, imageHeight, <span class="built_in">color</span>);</span><br><span class="line">        <span class="built_in">shearY</span>(g, imageWidth, imageHeight, <span class="built_in">color</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">shearX</span>(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> period = <span class="built_in">random</span>.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> frames = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> phase = <span class="built_in">random</span>.nextInt(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; imageHeight; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">double</span> d = (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.<span class="built_in">sin</span>((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period + (<span class="number">6.2831853071795862</span>D * phase) / frames);</span><br><span class="line">            g.copyArea(<span class="number">0</span>, i, imageWidth, <span class="number">1</span>, (<span class="built_in">int</span>) d, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(<span class="built_in">color</span>);</span><br><span class="line">                g.drawLine((<span class="built_in">int</span>) d, i, <span class="number">0</span>, i);</span><br><span class="line">                g.drawLine((<span class="built_in">int</span>) d + imageWidth, i, imageWidth, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="built_in">shearY</span>(<span class="keyword">final</span> Graphics g, <span class="keyword">final</span> <span class="built_in">int</span> imageWidth, <span class="keyword">final</span> <span class="built_in">int</span> imageHeight, <span class="keyword">final</span> Color <span class="built_in">color</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> period = <span class="built_in">random</span>.nextInt(imageWidth / <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> borderGap = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> frames = <span class="number">20</span>;</span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> phase = <span class="number">7</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; imageWidth; i++) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">double</span> d = (period &gt;&gt; <span class="number">1</span>)</span><br><span class="line">                    * Math.<span class="built_in">sin</span>((<span class="keyword">double</span>) i / (<span class="keyword">double</span>) period + (<span class="number">6.2831853071795862</span>D * phase) / frames);</span><br><span class="line">            g.copyArea(i, <span class="number">0</span>, <span class="number">1</span>, imageHeight, <span class="number">0</span>, (<span class="built_in">int</span>) d);</span><br><span class="line">            <span class="keyword">if</span> (borderGap) &#123;</span><br><span class="line">                g.setColor(<span class="built_in">color</span>);</span><br><span class="line">                g.drawLine(i, (<span class="built_in">int</span>) d, i, <span class="number">0</span>);</span><br><span class="line">                g.drawLine(i, (<span class="built_in">int</span>) d + imageHeight, i, imageHeight);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Service 代码</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">BusinessException</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">CaptchaDto</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.dto.util.<span class="type">Constant</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.service.<span class="type">ICaptchaService</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.util.<span class="type">HttpSessionUtil</span>;</span><br><span class="line"><span class="keyword">import</span> com.example.manager.util.<span class="type">VerifyCodeUtil</span>;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.<span class="type">Service</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">CaptchaServiceImpl</span> <span class="title">implements</span> <span class="title">ICaptchaService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成验证码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public byte[] getCaptcha(<span class="keyword">final</span> int imageWidth, <span class="keyword">final</span> int imageHeight, <span class="keyword">final</span> int codeCount, <span class="keyword">final</span> <span class="type">Integer</span> <span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> <span class="title">null</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">BusinessException</span>(<span class="type">Constant</span>.<span class="type">Code</span>.<span class="type">BUSINESS_EXCEPTION_CAPTCHA_ERROR</span>, <span class="string">"验证码类型不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">CaptchaDto</span> captchaDto = <span class="type">VerifyCodeUtil</span>.generateCaptcha(imageWidth, imageHeight, codeCount);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 0) </span>&#123;</span><br><span class="line">            <span class="comment">// 0 注册验证码</span></span><br><span class="line">            <span class="type">HttpSessionUtil</span>.getHttpSession().setAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_REGISTER</span>, captchaDto.getCode());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 1) </span>&#123;</span><br><span class="line">            <span class="comment">// 1 登录验证码</span></span><br><span class="line">            <span class="type">HttpSessionUtil</span>.getHttpSession().setAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_LOGIN</span>, captchaDto.getCode());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> captchaDto.getImage();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 校验验证码</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public boolean checkCaptcha(<span class="keyword">final</span> <span class="type">String</span> code, <span class="keyword">final</span> <span class="type">Integer</span> <span class="class"><span class="keyword">type</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">Object</span> sessionCode = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 0) </span>&#123;</span><br><span class="line">            <span class="comment">// 0 注册验证码</span></span><br><span class="line">            sessionCode = <span class="type">HttpSessionUtil</span>.getHttpSession().getAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_REGISTER</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="class"><span class="keyword">type</span> <span class="title">==</span> 1) </span>&#123;</span><br><span class="line">            <span class="comment">// 1 登录验证码</span></span><br><span class="line">            sessionCode = <span class="type">HttpSessionUtil</span>.getHttpSession().getAttribute(<span class="type">Constant</span>.<span class="type">SessionKey</span>.<span class="type">CAPTCHA_LOGIN</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (code == <span class="literal">null</span> || sessionCode == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (sessionCode.toString().toUpperCase().equals(code.toUpperCase())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;验证码类&lt;/p&gt;
&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
      <category term="工具类" scheme="http://20177.win/tags/%E5%B7%A5%E5%85%B7%E7%B1%BB/"/>
    
  </entry>
  
  <entry>
    <title>切面防止redis的穿透问题</title>
    <link href="http://20177.win/2018/08/24/other/redisDealwithNull/"/>
    <id>http://20177.win/2018/08/24/other/redisDealwithNull/</id>
    <published>2018-08-24T03:00:56.000Z</published>
    <updated>2019-07-19T06:27:14.904Z</updated>
    
    <content type="html"><![CDATA[<p>首先得定义一个切面注解</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Documented;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.<span class="keyword">annotation</span>.Target;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 懒加载存redis seconds秒内不会改变，除非手动删除</span></span><br><span class="line"><span class="meta">@Target(&#123;ElementType.PARAMETER,ElementType.METHOD&#125;)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="meta">@Documented</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> RedisSetWithNull &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">enum</span> DataType &#123;</span><br><span class="line">        BEAN, BEAN_LIST, SIMPLE_LIST, STRING, INTEGER, BOOLEAN</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// redis 的key</span></span><br><span class="line">    String redisKey();</span><br><span class="line">    <span class="comment">// 存时间</span></span><br><span class="line">    int seconds();</span><br><span class="line">    <span class="comment">// 返回具体Class类型，基础类型可不填</span></span><br><span class="line">    Class clazz();</span><br><span class="line">    <span class="comment">// 返回类型</span></span><br><span class="line">    DataType dataType();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后切面实现</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.<span class="keyword">JSONArray</span>;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.cache.shared.RedisClient;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.constants.TypeConstants;</span><br><span class="line"><span class="keyword">import</span> com.chinamobile.cmss.eshub.services.util.json.JsonUtil;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.JsonNode;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Around;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.Aspect;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.annotation.Order;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.CollectionUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * log aspect, auto writing log.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @author luyao</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Component</span><br><span class="line">@Aspect</span><br><span class="line">@Order(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">public</span> class RedisSetWithNullAspect &#123;</span><br><span class="line"></span><br><span class="line">    @Resource</span><br><span class="line">    <span class="keyword">private</span> RedisClient redisClient;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(RedisSetWithNullAspect.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取日志信息中的动态参数，然后替换</span></span><br><span class="line"><span class="comment">     * @param desc</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;<span class="keyword">String</span>&gt; descFormat(<span class="keyword">final</span> <span class="keyword">String</span> desc)&#123;</span><br><span class="line">        <span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">final</span> Pattern pattern = Pattern.compile(<span class="string">"#\\&#123;([^\\&#125;]+)\\&#125;"</span>);</span><br><span class="line">        <span class="keyword">final</span> Matcher matcher = pattern.matcher(desc);</span><br><span class="line">        <span class="keyword">while</span>(matcher.find())&#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">String</span> t = matcher.group(<span class="number">1</span>);</span><br><span class="line">            list.<span class="built_in">add</span>(t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> getObjByParamName(ProceedingJoinPoint thisJoinPoint, <span class="keyword">String</span> paramIndex) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">Object</span>[] paramValues = thisJoinPoint.getArgs();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> paramValues[Integer.parseInt(paramIndex)];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Around(<span class="string">"@annotation(redisSetWithNull)"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> dealRedis(<span class="keyword">final</span> ProceedingJoinPoint thisJoinPoint, RedisSetWithNull redisSetWithNull) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 返回值</span></span><br><span class="line">        <span class="keyword">Object</span> result = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 解析入参</span></span><br><span class="line">        <span class="keyword">String</span> redisKey = redisSetWithNull.redisKey();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 假如#&#123;0.aa&#125;,替换为第一个参数的.aa的值 0代表第一个参数</span></span><br><span class="line">        <span class="keyword">final</span> List&lt;<span class="keyword">String</span>&gt; list = descFormat(redisKey);</span><br><span class="line">        <span class="keyword">if</span> (!CollectionUtils.isEmpty(list)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">final</span> <span class="keyword">String</span> s : list) &#123;</span><br><span class="line">                <span class="keyword">String</span>[] classParam = s.<span class="built_in">split</span>(<span class="string">"\\."</span>);</span><br><span class="line">                <span class="keyword">if</span> (classParam.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">String</span> value = <span class="keyword">String</span>.valueOf(getObjByParamName(thisJoinPoint, classParam[<span class="number">0</span>]));</span><br><span class="line">                    redisKey = redisKey.replace(<span class="string">"#&#123;"</span>+s+<span class="string">"&#125;"</span>, value);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">final</span> JsonNode jsonNode = JsonUtil.toJsonNode(JsonUtil.toString((getObjByParamName(thisJoinPoint, classParam[<span class="number">0</span>]))));</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">String</span> value = jsonNode.<span class="built_in">get</span>(classParam[<span class="number">1</span>]).asText();</span><br><span class="line">                    redisKey = redisKey.replace(<span class="string">"#&#123;"</span>+s+<span class="string">"&#125;"</span>, value);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">int</span> seconds = redisSetWithNull.seconds();</span><br><span class="line">        <span class="keyword">final</span> RedisSetWithNull.DataType type = redisSetWithNull.dataType();</span><br><span class="line">        <span class="keyword">final</span> Class&lt;?&gt; clazz = redisSetWithNull.clazz();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">str</span> = redisClient.<span class="built_in">get</span>(redisKey);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">str</span> == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                result = thisJoinPoint.proceed();<span class="comment">//再执行方法</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Throwable e) &#123;</span><br><span class="line">                LOGGER.error(<span class="string">"RedisWithNullDealAspect"</span>, e);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (result == <span class="keyword">null</span>) &#123;</span><br><span class="line">                redisClient.<span class="built_in">set</span>(redisKey, TypeConstants.REDIS_DEFAULT_VALUE, seconds);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                redisClient.<span class="built_in">set</span>(redisKey, JsonUtil.toString(result), seconds);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (!TypeConstants.REDIS_DEFAULT_VALUE.equals(<span class="built_in">str</span>)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BEAN) &#123;</span><br><span class="line">                    result = JsonUtil.toBean(<span class="built_in">str</span>, clazz);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BEAN_LIST) &#123;</span><br><span class="line">                    result = JsonUtil.toList(<span class="built_in">str</span>, clazz);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.SIMPLE_LIST) &#123;</span><br><span class="line">                    result = <span class="keyword">JSONArray</span>.parse(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.INTEGER) &#123;</span><br><span class="line">                    result = Integer.parseInt(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.BOOLEAN) &#123;</span><br><span class="line">                    result = Boolean.parseBoolean(<span class="built_in">str</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type == RedisSetWithNull.DataType.STRING) &#123;</span><br><span class="line">                    result = <span class="built_in">str</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@RedisSetWithNull</span>(redisKey = <span class="string">"#&#123;0.abilityId&#125;-in-#&#123;1&#125;"</span>, seconds = <span class="number">600</span>,</span><br><span class="line">            dataType = RedisSetWithNull.DataType.STRING,clazz = <span class="built_in">String</span>.<span class="keyword">class</span>)</span><br><span class="line">public <span class="built_in">String</span> getAppAbilityStatus(<span class="keyword">final</span> AbilityInfoInputDto abilityInfoInputDto, <span class="built_in">String</span> aa) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"sss"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;首先得定义一个切面注解&lt;/p&gt;
&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>搭建springboot的高可用框架，其中包含了mysql，redis，kakfa，log4j等</title>
    <link href="http://20177.win/2018/04/25/springboot/springboot%20high%20available/"/>
    <id>http://20177.win/2018/04/25/springboot/springboot high available/</id>
    <published>2018-04-25T06:07:54.000Z</published>
    <updated>2019-07-19T06:27:14.907Z</updated>
    
    <content type="html"><![CDATA[<p>搭建springboot的高可用框架，其中包含了mysql，redis，kakfa，log4j等</p><p><strong>环境</strong></p><p>此次示例是在macos10.13.3的环境下</p><p>已经安装好docker；</p><p>mysql等软件均安装在docker下，以下演示</p><p>开发工具是spring的sts，使用了jdk8，springboot2.0.1</p><p>注：首先查询本地ip，放入/ect/hosts 文件中 <code>192.168.1.169 myhost</code></p><p>mysql5.6 读写分离主主自动切换</p><p>redis4.0.1 redisCluster集群</p><p>Springboot2.0.1 + mybatis(分页插件pagehelper)</p><p><strong>mysql+mycat 搭建数据库集群</strong></p><p>下载mysql的镜像<code>docker pull mysql:5.6</code></p><p><em>mysql主从自动备份和自动切换</em></p><p>​    从数据安全性考虑，对数据库的数据进行及时备份非常重要。mysql就提供了主从备份的机制，从数据库会非常及时的将主数据库的操作更新到从库上，从而当主数据库down掉之后，数据不会丢失；同时，也可以通过keepalived等程序来实现主库down掉之后，迅速将数据访问服务切换到从库，从而尽可能维护数据库服务的不间断运行。</p><p><em>mycat 数据库中间件</em></p><p>​    Mycat是一个彻底开源的新颖的数据库中间件产品。它的出现将彻底结束数据库的瓶颈问题，从而使数据库的高可用，高负载成为可能。Mycat功能强大，这里实现利用Mycat来实现主从数据库的读写分离和自动切换。mycat的单节点问题可以考虑Keepalived，暂时不做处理</p><ul><li>首先启动主从数据库</li></ul><p>首先在自己的主机上配置好mysql的配置文件my-m.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="attr">data</span>     = /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主服务器</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">1</span></span><br><span class="line"><span class="attr">log_bin</span> = mysql-bin</span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>从my-s.cnf</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysql.server]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld_safe]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[client]</span></span><br><span class="line"><span class="attr">default-character-set</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pid-file</span> = /var/run/mysqld/mysqld.pid</span><br><span class="line"><span class="attr">socket</span>   = /var/run/mysqld/mysqld.sock</span><br><span class="line"><span class="attr">data</span>     = /var/lib/mysql</span><br><span class="line"></span><br><span class="line"><span class="attr">character_set_server</span> = utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从服务器</span></span><br><span class="line"><span class="attr">server-id</span> = <span class="number">2</span></span><br><span class="line"><span class="attr">log_bin</span> = mysql-bin</span><br><span class="line"><span class="attr">lower_case_table_names</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>我们直接指定外部配置文件</p><p>主：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地映射地址/Users/yaojie/Documents/docker/mysql/master/</span></span><br><span class="line"><span class="comment"># 文件/Users/yaojie/Documents/docker/mysql/my-m.cnf</span></span><br><span class="line">docker run --restart=always -p <span class="number">3307</span>:<span class="number">3306</span> -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/m</span>aster<span class="regexp">/:/</span>var<span class="regexp">/lib/my</span>sql -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/my</span>-m.cnf:<span class="regexp">/etc/my</span>sql<span class="regexp">/mysql.conf.d/my</span>sqld.cnf -e MYSQL_ROOT_PASSWORD=<span class="number">123456</span> --name mysql-master -d mysql:<span class="number">5.6</span></span><br></pre></td></tr></table></figure><p>查看是否启动成功 <code>docker ps</code></p><p>进入容器<code>docker exec -it mysql-master /bin/bash</code></p><p>连接到mysql-master</p><p>查看用户名密码<code>mysql -u root -p</code>输入123456进入mysql</p><p>查看数据库字符集<code>mysql&gt;SHOW VARIABLES LIKE &#39;character_set_%&#39;;</code></p><p>查看collection的编码<code>mysql&gt;SHOW VARIABLES LIKE &#39;collation_%&#39;;</code></p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 给从库设一个专门用的用户</span></span><br><span class="line">mysql&gt; grant replication slave <span class="keyword">on</span> *.* <span class="keyword">to</span> 'salves1' @'%' identified <span class="keyword">by</span> '<span class="number">123456</span>';  <span class="comment">-- %是指所有ip，这里可以指定具体ip</span></span><br><span class="line">mysql&gt; flush privileges; <span class="comment">-- 刷新MySQL的系统权限相关表;</span></span><br><span class="line">mysql&gt; select user,Host <span class="keyword">from</span> mysql.user;</span><br></pre></td></tr></table></figure><p>查看主库状态</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show <span class="keyword">master</span> <span class="title">status</span>;</span><br></pre></td></tr></table></figure><p>从：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地映射地址/Users/yaojie/Documents/docker/mysql/slave/</span></span><br><span class="line"><span class="comment"># 文件/Users/yaojie/Documents/docker/mysql/my-s.cnf</span></span><br><span class="line">docker run --restart=always -p <span class="number">3308</span>:<span class="number">3306</span> -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/</span>slave<span class="regexp">/:/</span>var<span class="regexp">/lib/my</span>sql -v <span class="regexp">/Users/y</span>aojie<span class="regexp">/Documents/</span>docker<span class="regexp">/mysql/my</span>-s.cnf:<span class="regexp">/etc/my</span>sql<span class="regexp">/mysql.conf.d/my</span>sqld.cnf -e MYSQL_ROOT_PASSWORD=<span class="number">123456</span> --name mysql-slave -d mysql:<span class="number">5.6</span></span><br></pre></td></tr></table></figure><p>连接到mysql-slave</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先测试下能否连接主数据库</span><br><span class="line">mysql -h myhost -P 3307 -u salves1 -p</span><br><span class="line">退出连接本地mysql再运行一下</span><br><span class="line">mysql&gt; change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'myhost'</span>,master_port=3307, <span class="attribute">master_user</span>=<span class="string">'salves1'</span>, <span class="attribute">master_password</span>=<span class="string">'123456'</span>,master_log_file='mysql-bin.000004',master_log_pos=400; -- master_log_file和master_log_pos是主库show master status获得的数据，必须统一</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G;  -- Slave_IO_Running和Slave_Sql_Running。这两个值为<span class="literal">Yes</span>，从库配置好了</span><br></pre></td></tr></table></figure><p>创建好之后，会发现master和slave之间会同步，比如master中创建数据库，slave中也会自动创建，在master中更改数据，slave中也会自动修改</p><ul><li>主主是从主从衍生而来的，可以从服务器给主服务器分配一个用户，让主服务器使用，这里直接使用root用户</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">从</span><br><span class="line">mysql&gt; show master status;</span><br><span class="line">主</span><br><span class="line">mysql&gt; change master <span class="keyword">to</span> <span class="attribute">master_host</span>=<span class="string">'myhost'</span>,master_port=3308, <span class="attribute">master_user</span>=<span class="string">'root'</span>, <span class="attribute">master_password</span>=<span class="string">'123456'</span>,master_log_file='mysql-bin.000004',master_log_pos=120;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">mysql&gt; show slave status\G;</span><br></pre></td></tr></table></figure><p>这样就可以互为主从，即主主备份</p><ul><li>读写分离是mycat配置的</li></ul><p>前提，以上主主创建数据库</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="keyword">create</span> <span class="keyword">database</span> test_sb; # test_sb 以下需要配置</span><br></pre></td></tr></table></figure><p>安装mycat</p><p>编写Dockerfile</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">############################################</span><br><span class="line"># version : debugman007/c7-mycat:v1</span><br><span class="line"># desc : centos7 上安装的mycat</span><br><span class="line">############################################</span><br><span class="line"># 设置继承自 centos7 官方镜像</span><br><span class="line">FROM centos:<span class="number">7</span> </span><br><span class="line">RUN echo <span class="string">"root:root"</span> | chpasswd</span><br><span class="line">RUN yum -y install net-tools</span><br><span class="line"># install java</span><br><span class="line">ADD http:<span class="comment">//mirrors.linuxeye.com/jdk/jdk-7u80-linux-x64.tar.gz /usr/local/  </span></span><br><span class="line">RUN cd /usr/local &amp;&amp; tar -zxvf jdk<span class="number">-7</span>u80-linux-x64.tar.gz &amp;&amp; rm -f jdk<span class="number">-7</span>u80-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">ENV JAVA_HOME /usr/local/jdk1<span class="number">.7</span><span class="number">.0</span>_80</span><br><span class="line">ENV CLASSPATH $&#123;JAVA_HOME&#125;/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">ENV PATH $PATH:$&#123;JAVA_HOME&#125;/bin</span><br><span class="line">#install mycat</span><br><span class="line">ADD http:<span class="comment">//dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz /usr/local</span></span><br><span class="line">RUN cd /usr/local &amp;&amp; tar -zxvf Mycat-server<span class="number">-1.6</span>-RELEASE<span class="number">-20161028204710</span>-linux.tar.gz &amp;&amp; rm -f Mycat-server<span class="number">-1.6</span>-RELEASE<span class="number">-20161028204710</span>-linux.tar.gz  </span><br><span class="line"></span><br><span class="line">VOLUME /usr/local/mycat/conf</span><br><span class="line">EXPOSE <span class="number">8066</span> <span class="number">9066</span></span><br><span class="line">CMD [<span class="string">"/usr/local/mycat/bin/mycat"</span>, <span class="string">"console"</span>]</span><br></pre></td></tr></table></figure><p>创建镜像</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t debugman007/<span class="built_in">c7</span>-mycat .</span><br></pre></td></tr></table></figure><p>运行容器</p><p>下载<a href="http://dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz" target="_blank" rel="noopener">http://dl.mycat.io/1.6-RELEASE/Mycat-server-1.6-RELEASE-20161028204710-linux.tar.gz</a> 将conf文件夹复制到/Users/yaojie/Documents/docker/mycat/下，网盘下载<a href="https://pan.baidu.com/s/1Bq9oiTgVF3OFs3t11Ek4Cg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Bq9oiTgVF3OFs3t11Ek4Cg</a></p><p>修改schema，读写分离，主从替换，修改database，writeHost，readHost</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE mycat:schema SYSTEM "schema.dtd"&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">mycat:schema</span> <span class="attr">xmlns:mycat</span>=<span class="string">"http://io.mycat/"</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">schema</span> <span class="attr">name</span>=<span class="string">"TESTDB"</span> <span class="attr">checkSQLschema</span>=<span class="string">"false"</span> <span class="attr">sqlMaxLimit</span>=<span class="string">"100"</span> <span class="attr">dataNode</span>=<span class="string">"dn1"</span>&gt;</span>    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">schema</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataNode</span> <span class="attr">name</span>=<span class="string">"dn1"</span> <span class="attr">dataHost</span>=<span class="string">"localhost1"</span> <span class="attr">database</span>=<span class="string">"test_sb"</span> /&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">dataHost</span> <span class="attr">name</span>=<span class="string">"localhost1"</span> <span class="attr">maxCon</span>=<span class="string">"1000"</span> <span class="attr">minCon</span>=<span class="string">"10"</span> <span class="attr">balance</span>=<span class="string">"1"</span> <span class="attr">writeType</span>=<span class="string">"0"</span>  </span></span><br><span class="line"><span class="tag">             <span class="attr">dbType</span>=<span class="string">"mysql"</span> <span class="attr">dbDriver</span>=<span class="string">"native"</span> <span class="attr">switchType</span>=<span class="string">"1"</span>  <span class="attr">slaveThreshold</span>=<span class="string">"100"</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">heartbeat</span>&gt;</span>show slave status<span class="tag">&lt;/<span class="name">heartbeat</span>&gt;</span>  </span><br><span class="line">        <span class="comment">&lt;!-- can have multi write hosts --&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM1"</span> <span class="attr">url</span>=<span class="string">"myhost:3307"</span> <span class="attr">user</span>=<span class="string">"root"</span>  </span></span><br><span class="line"><span class="tag">                   <span class="attr">password</span>=<span class="string">"123456"</span>&gt;</span>  </span><br><span class="line">            <span class="comment">&lt;!-- can have multi read hosts --&gt;</span>  </span><br><span class="line">            <span class="tag">&lt;<span class="name">readHost</span> <span class="attr">host</span>=<span class="string">"hostS2"</span> <span class="attr">url</span>=<span class="string">"myhost:3308"</span> <span class="attr">user</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">"123456"</span> /&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;/<span class="name">writeHost</span>&gt;</span>  </span><br><span class="line">        <span class="tag">&lt;<span class="name">writeHost</span> <span class="attr">host</span>=<span class="string">"hostM2"</span> <span class="attr">url</span>=<span class="string">"myhost:3308"</span> <span class="attr">user</span>=<span class="string">"root"</span>  </span></span><br><span class="line"><span class="tag">                   <span class="attr">password</span>=<span class="string">"123456"</span>/&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">dataHost</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">mycat:schema</span>&gt;</span></span><br><span class="line"></span><br><span class="line">以下为注释：</span><br><span class="line">name属性唯一标识dataHost标签，供上层的标签使用。</span><br><span class="line">maxCon属性指定每个读写实例连接池的最大连接。也就是说，标签内嵌套的</span><br><span class="line">writeHost、readHost标签都会使用这个属性的值来实例化出连接池的最大连接数。</span><br><span class="line">minCon属性指定每个读写实例连接池的最小连接，初始化连接池的大小。</span><br><span class="line"></span><br><span class="line">balance属性负载均衡类型，目前的取值有3种：</span><br><span class="line">1.balance="0",不开启读写分离机制，所有读操作都发送到当前可用的writeHost上。</span><br><span class="line">2.balance="1"，全部的readHost与stand by writeHost参与select语句的负载均衡，简单的说，当双主双从模式(M1-&gt;S1，M2-&gt;S2，并且M1与M2互为主备)，</span><br><span class="line">正常情况下，M2,S1,S2都参与select语句的负载均衡。</span><br><span class="line">3.balance="2"，所有读操作都随机的在writeHost、readhost上分发。</span><br><span class="line">4.balance="3"，所有读请求随机的分发到wiriterHost对应的readhost执行，</span><br><span class="line">writerHost不负担读压力，注意balance=3只在1.4及其以后版本有，1.3没有。</span><br><span class="line"></span><br><span class="line">writeType属性负载均衡类型，目前的取值有3种：</span><br><span class="line">1.writeType="0", 所有写操作发送到配置的第一个writeHost，第一个挂了切到还生存的第二个writeHost，重新启动后已切换后的为准，即第二个writeHost，切换记录在配置文件中:dnindex.properties.</span><br><span class="line">2.writeType="1"，所有写操作都随机的发送到配置的writeHost，1.5以后废弃不推荐。</span><br><span class="line">3.writeType="2"，不执行写操作</span><br><span class="line"></span><br><span class="line">switchType属性</span><br><span class="line">-1 表示不自动切换</span><br><span class="line">1 默认值，自动切换</span><br><span class="line">2 基于MySQL主从同步的状态决定是否切换</span><br><span class="line">3 基于MySQLgalarycluster的切换机制（适合集群）（1.4.1）</span><br><span class="line">心跳语句为show status like‘wsrep%’</span><br><span class="line"></span><br><span class="line">dbType属性</span><br><span class="line">指定后端连接的数据库类型，目前支持二进制的mysql协议，还有其他使用</span><br><span class="line">JDBC连接的数据库。例如：mongodb、oracle、spark等。</span><br><span class="line"></span><br><span class="line">dbDriver属性指定连接后端数据库使用的</span><br><span class="line">Driver，目前可选的值有native和JDBC。使用native的话，因为这个值执行的是二进制的mysql协议，所以可以使用mysql和maridb。其他类型的数据库则需要使用JDBC驱动来支持。从1.6版本开始支持postgresql的native原始协议。如果使用JDBC的话需要将符合JDBC 4标准的驱动JAR包放到MYCAT\lib目录下，并检查驱动JAR包中包括如下目录结构的文件：</span><br><span class="line">META-INF\services\java.sql.Driver。在这个文件内写上具体的Driver类名，例如：com.mysql.jdbc.Driver。</span><br><span class="line"></span><br><span class="line">heartbeat标签这个标签内指明用于和后端数据库进行心跳检查的语句。例如,MYSQL可以使用select user()，Oracle可以使用select 1 from dual等。这个标签还有一个</span><br><span class="line">connectionInitSql属性，主要是当使用Oracla数据库时，需要执行的初始化SQL</span><br><span class="line">语句就这个放到这里面来。例如：altersession set nls_date_format='yyyy-mm-dd hh24:mi:ss'</span><br><span class="line">1.4主从切换的语句必须是：showslave status</span><br></pre></td></tr></table></figure><p>改文件log4j2.xml为debug</p><p>启动mycat，并查看日志</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 本地文件夹 /Users/yaojie/Documents/docker/mycat/conf</span></span><br><span class="line"><span class="meta"># 本地文件夹 /Users/yaojie/Documents/docker/mycat/logs</span></span><br><span class="line">docker run --name mysql-mycat -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>mycat/conf:<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/mycat/</span>conf -v /Users<span class="meta-keyword">/yaojie/</span>Documents<span class="meta-keyword">/docker/</span>mycat/logs:<span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/mycat/</span>logs -p <span class="number">8066</span>:<span class="number">8066</span> -p <span class="number">9066</span>:<span class="number">9066</span> debugman007/c7-mycat</span><br><span class="line"></span><br><span class="line"><span class="meta"># 8066端口是对数据进行操作，9066端口是控制端口</span></span><br></pre></td></tr></table></figure><p>用数据库连接工具连接8066端口，插入从3307，查询从3308端口。。事务的话都从3307端口。关闭主服务，从服务接管。</p><p><strong>redis集群</strong></p><p>首先下载镜像</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pull <span class="keyword">redi</span><span class="variable">s:4</span>.<span class="number">0.1</span></span><br><span class="line">docker pull <span class="keyword">ruby</span></span><br></pre></td></tr></table></figure><p>创建自定义network</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> network </span>create redis-net</span><br></pre></td></tr></table></figure><p>在本地文件夹/Users/yaojie/Documents/docker/redis/下创建redis-cluster.tmpl</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">port <span class="variable">$&#123;PORT&#125;</span></span><br><span class="line"><span class="keyword">cluster</span>-enabled yes</span><br><span class="line"><span class="keyword">cluster</span>-config-<span class="keyword">file</span> nodes.<span class="keyword">conf</span></span><br><span class="line"><span class="keyword">cluster</span>-node-timeout 5000</span><br><span class="line"><span class="keyword">cluster</span>-announce-ip 具体ip地址</span><br><span class="line"><span class="keyword">cluster</span>-announce-port 192.168.1.169</span><br><span class="line"><span class="keyword">cluster</span>-announce-bus-port 1<span class="variable">$&#123;PORT&#125;</span></span><br><span class="line">appendonly yes</span><br></pre></td></tr></table></figure><p>linux下有envsubst命令时，创建文件夹7000到7005和子文件夹conf，data和conf下的配置文件，port已经替换</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  mkdir -p ./<span class="variable">$&#123;port&#125;</span>/conf \</span><br><span class="line">  &amp;&amp; <span class="attribute">PORT</span>=<span class="variable">$&#123;port&#125;</span> envsubst &lt; ./redis-cluster.tmpl &gt; ./<span class="variable">$&#123;port&#125;</span>/conf/redis.conf \</span><br><span class="line">  &amp;&amp; mkdir -p ./<span class="variable">$&#123;port&#125;</span>/data; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>macos下没有envsubst命令，创建文件夹7000到7005和子文件夹conf，data和conf下的配置文件，再逐一改配置文件中的端口</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  mkdir -p ./<span class="variable">$&#123;port&#125;</span>/conf \</span><br><span class="line">  &amp;&amp; cp ./redis-cluster.tmpl ./<span class="variable">$&#123;port&#125;</span>/conf/redis.conf \</span><br><span class="line">  &amp;&amp; mkdir -p ./<span class="variable">$&#123;port&#125;</span>/data; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>启动7000到7005的redis容器</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span><span class="built_in"> port </span><span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">  docker <span class="builtin-name">run</span> -d -ti -p <span class="variable">$&#123;port&#125;</span>:<span class="variable">$&#123;port&#125;</span> -p 1<span class="variable">$&#123;port&#125;</span>:1<span class="variable">$&#123;port&#125;</span> \</span><br><span class="line">  -v /Users/yaojie/Documents/docker/redis/<span class="variable">$&#123;port&#125;</span>/conf/redis.conf:/usr/local/etc/redis/redis.conf \</span><br><span class="line">  -v /Users/yaojie/Documents/docker/redis/<span class="variable">$&#123;port&#125;</span>/data:/data \</span><br><span class="line">  --restart always --name redis-<span class="variable">$&#123;port&#125;</span> --net redis-net \</span><br><span class="line">  --sysctl net.core.<span class="attribute">somaxconn</span>=1024 redis:4.0.1 redis-server /usr/local/etc/redis/redis.conf; \</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>以下是使用ruby集群redis，提供2种</p><p>第一种/Users/yaojie/Documents/docker/redis/下Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> ruby</span><br><span class="line"><span class="keyword">MAINTAINER</span> yj</span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> gem sources --remove https://rubygems.org/</span></span><br><span class="line"><span class="bash">RUN gem <span class="built_in">source</span> -a https://gems.ruby-china.org</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">RUN gem install redis -v 4.0.1</span></span><br><span class="line"><span class="bash">ADD ./redis-4.0.1.tar.gz /usr/<span class="built_in">local</span></span></span><br><span class="line"><span class="bash">RUN <span class="built_in">cd</span> /usr/<span class="built_in">local</span> &amp;&amp; ln -s redis-4.0.1 redis</span></span><br></pre></td></tr></table></figure><p>创建镜像</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t yj/ruby_redis .</span><br></pre></td></tr></table></figure><p>启动容器</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">run</span> -<span class="keyword">it</span> yj/ruby_redis /bin/bash</span><br></pre></td></tr></table></figure><p>启动集群</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/redis/src/redis-trib.rb create --replicas <span class="number">1</span> \</span><br><span class="line"><span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7000</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7001</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7002</span> \</span><br><span class="line"><span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7003</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7004</span> <span class="number">192.168</span><span class="meta">.1</span><span class="meta">.169</span>:<span class="number">7005</span></span><br></pre></td></tr></table></figure><p>第二种，直接启动</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">echo yes | docker <span class="keyword">run</span> -i --<span class="keyword">rm</span> --<span class="keyword">net</span> redis-<span class="keyword">net</span> ruby <span class="keyword">sh</span> -c '\</span><br><span class="line">  gem sources --remove https:<span class="comment">//rubygems.org/ \</span></span><br><span class="line">  &amp;&amp; gem source -a https:<span class="comment">//gems.ruby-china.org \</span></span><br><span class="line">  &amp;&amp; gem install redis -v 4.0.1 \</span><br><span class="line">  &amp;&amp; wget http:<span class="comment">//download.redis.io/redis-stable/src/redis-trib.rb \</span></span><br><span class="line">  &amp;&amp; ruby redis-trib.rb create --replicas 1 \</span><br><span class="line">  '"$(<span class="keyword">for</span> port <span class="keyword">in</span> `seq 7000 7005`; <span class="keyword">do</span> \</span><br><span class="line">    echo -<span class="keyword">n</span> <span class="string">"$(docker inspect --format '&#123;&#123; (index .NetworkSettings.Networks "</span>redis-<span class="keyword">net</span><span class="string">").IPAddress &#125;&#125;' "</span>redis-<span class="variable">$&#123;port&#125;</span><span class="string">")"</span>:<span class="variable">$&#123;port&#125;</span> ' ' ; \</span><br><span class="line">  done)"</span><br></pre></td></tr></table></figure><p>再来说说单机或集群密码问题（暂不考虑）</p><p>java-springboot连接</p><p>jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>application.properties增加redis节点配置</p><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># REDIS（RedisProperties）</span></span><br><span class="line"><span class="meta"># （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。</span></span><br><span class="line"><span class="meta"># spring.redis.cluster.max-redirects=</span></span><br><span class="line"><span class="meta"># （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。</span></span><br><span class="line"><span class="meta"># spring.redis.cluster.nodes=</span></span><br><span class="line"><span class="meta"># 连接工厂使用的数据库索引。</span></span><br><span class="line">spring.redis.database=<span class="number">0</span></span><br><span class="line"><span class="meta"># 可用以下分开来配置，连接URL，将覆盖主机，端口和密码（用户将被忽略），例如：redis://user:password@example.com:6379</span></span><br><span class="line">spring.redis.url=</span><br><span class="line"><span class="meta"># Redis服务器主机。</span></span><br><span class="line">spring.redis.host=localhost</span><br><span class="line"><span class="meta"># 登录redis服务器的密码。</span></span><br><span class="line">spring.redis.password=</span><br><span class="line"><span class="meta"># 启用SSL支持。</span></span><br><span class="line">spring.redis.ssl=<span class="literal">false</span></span><br><span class="line"><span class="meta"># 池在给定时间可以分配的最大连接数。使用负值无限制。</span></span><br><span class="line">spring.redis.jedis.pool.max-active=<span class="number">8</span></span><br><span class="line"><span class="meta"># 池中“空闲”连接的最大数量。使用负值表示无限数量的空闲连接。</span></span><br><span class="line">spring.redis.jedis.pool.max-idle=<span class="number">8</span></span><br><span class="line"><span class="meta"># 连接分配在池被耗尽时抛出异常之前应该阻塞的最长时间量（以毫秒为单位）。使用负值可以无限期地阻止。</span></span><br><span class="line">spring.redis.jedis.pool.max-wait=<span class="number">-1</span></span><br><span class="line"><span class="meta"># 目标为保持在池中的最小空闲连接数。这个设置只有在正面的情况下才有效果。</span></span><br><span class="line">spring.redis.jedis.pool.min-idle=<span class="number">0</span></span><br><span class="line"><span class="meta"># Redis服务器端口。</span></span><br><span class="line">spring.redis.port=<span class="number">6379</span></span><br><span class="line"><span class="meta"># （哨兵模式，不使用则不用开启）Redis服务器的名称。</span></span><br><span class="line"><span class="meta"># spring.redis.sentinel.master=</span></span><br><span class="line"><span class="meta"># （哨兵模式，不使用则不用开启）主机：端口对的逗号分隔列表。 </span></span><br><span class="line"><span class="meta"># spring.redis.sentinel.nodes=</span></span><br><span class="line"><span class="meta"># 以毫秒为单位的连接超时。0太小会超时</span></span><br><span class="line">spring.redis.timeout=<span class="number">0</span></span><br></pre></td></tr></table></figure><p>说明：以上是单机版本的，如果是集群的只需要开启这两项(我们这里也用了这个配置)，密码还是使用<code>spring.redis.password</code>：</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># （普通集群，不使用则不用开启）在群集中执行命令时要遵循的最大重定向数目。</span><br><span class="line">spring.redis.cluster.max-redirects=<span class="number">5</span></span><br><span class="line"># （普通集群，不使用则不用开启）以逗号分隔的“主机：端口”对列表进行引导。</span><br><span class="line">spring.redis.cluster.nodes=<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7000</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7001</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7002</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7003</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7004</span>,<span class="number">127.0</span><span class="meta">.0</span><span class="meta">.1</span>:<span class="number">7005</span></span><br></pre></td></tr></table></figure><p>注意：一旦开启了集群模式，那么基于单机的配置就会覆盖</p><p>提示：可以这么说，上面的配置应该是最全的了。当然上面针对客户端的操作估计会比较少，比如哨兵模式，分片等等的，因为这些高可用在服务已经做了，如果想要在客户端实现这些，那么可以重新注入想要实现Bean即可。比如注入建立工厂，实现自己的Session。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码使用</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;String, String&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping(<span class="meta-string">"/aa"</span>)</span></span><br><span class="line"><span class="keyword">public</span> void <span class="keyword">init</span>() &#123;</span><br><span class="line">    redisTemplate.opsForValue().<span class="keyword">set</span>(<span class="string">"alais"</span>, <span class="string">"iouo"</span>);</span><br><span class="line">    System.<span class="keyword">out</span>.println(redisTemplate.opsForValue().<span class="keyword">get</span>(<span class="string">"alais"</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用技巧：</p><p>在市面上可能存在两种个用法，1中是针对opsForValue，另一种是execute的，那么这两种的使用区别如下：</p><p>1、在redistemplate中配置Serializer</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ValueOperations<span class="variable">&lt;String, User&gt;</span> valueops = redisTemplate.opsForValue();</span><br><span class="line">valueops.<span class="built_in">set</span>(<span class="keyword">user</span>.getId(), <span class="keyword">user</span>);</span><br></pre></td></tr></table></figure><p>2、不在redistemplate中配置Serializer，而是在Service的实现类中单独指定Serializer。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">boolean</span> result = redisTemplate.execute(<span class="keyword">new</span> RedisCallback&lt;Boolean&gt;() &#123;</span><br><span class="line">      <span class="keyword">public</span> Boolean doInRedis(RedisConnection redisConnection) <span class="keyword">throws</span> DataAccessException &#123; </span><br><span class="line">          RedisSerializer&lt;<span class="keyword">String</span>&gt; redisSerializer = redisTemplate .getStringSerializer(); </span><br><span class="line">          <span class="built_in">byte</span>[] <span class="built_in">key</span> = redisSerializer.serialize(user.getId());</span><br><span class="line">          <span class="built_in">byte</span>[] value = redisSerializer.serialize(user.getName()); </span><br><span class="line">          <span class="keyword">return</span> redisConnection.setNX(<span class="built_in">key</span>, value); &#125; &#125;); </span><br><span class="line">     <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>也就是说这两者的区别的序列化是自己实现的。</p><p>可以一开始就@SpringBootApplication自定义redis的序列化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    public RedisTemplate&lt;<span class="built_in">String</span>, ?&gt; redisTemplate(<span class="keyword">final</span> RedisConnectionFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(<span class="keyword">factory</span>);</span><br><span class="line">        <span class="keyword">final</span> RedisSerializer&lt;<span class="built_in">String</span>&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();<span class="comment">//KEY只能存string，否则会报错;</span></span><br><span class="line">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义value的序列化方式</span></span><br><span class="line">        <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;?&gt; jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;<span class="built_in">Object</span>&gt;(<span class="built_in">Object</span>.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">final</span> ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>kakfa</strong></p><p>这里安装单机的kakfa，只要用于springboot的测试，</p><ol><li>docker pull wurstmeister/zookeeper  </li><li>docker pull wurstmeister/kafka  </li><li>docker run -d –name zookeeper -p 2181 -t wurstmeister/zookeeper  </li><li>docker run -d –name kafka -p 9092:9092 –link zookeeper:zk -e KAFKA_ZOOKEEPER_CONNECT=zk:2181 -e KAFKA_ADVERTISED_HOST_NAME=127.0.0.1 -e KAFKA_ADVERTISED_PORT=9092 wurstmeister/kafka</li></ol><p>测试是否成功</p><ol><li>docker exec -it ${CONTAINER ID} /bin/bash   </li><li>cd opt/kafka_2.11-0.10.1.1/   </li><li>创建一个主题：bin/kafka-topics.sh –create –zookeeper zookeeper:2181 –replication-factor 1 –partitions 1 –topic mykafka</li><li>运行一个消息生产者，指定topic为刚刚创建的主题:bin/kafka-console-producer.sh –broker-list localhost:9092 –topic mykafka  </li><li>运行一个消费者，指定同样的主题:bin/kafka-console-consumer.sh –zookeeper zookeeper:2181 –topic mykafka –from-beginning </li></ol><p><strong>代码编写</strong></p><p>sts创建springboot项目很简单，目前最新2.0.1版本</p><p>需要联网,点击File&gt;&gt;New&gt;&gt;Spring Start Project</p><p>跳出Service Url（<a href="http://start.spring.io）填写" target="_blank" rel="noopener">http://start.spring.io）填写</a></p><ul><li>Name(springboot-study)</li><li>Group(com.example)</li><li>Artifact(springboot-study)</li><li>Version(0.0.1-SNAPSHOT)</li><li>Package(com.example.demo)</li><li>Type(Maven)</li><li>Java Version(8)</li><li>Package(Jar)</li><li>Language(Java)</li></ul><p>点击下一步，让我们选择使用的jar</p><p>我们这里一步一步添加jar包，我们先勾上Web，点击finish。第一次会下载jar，等待下载完之后，项目目录就好了。</p><p>我们先把基础的package名字建好，</p><ul><li>com.example.demo.controller</li><li>com.example.demo.service</li><li>com.example.demo.dao</li><li>com.example.demo.dto</li><li>com.example.demo.util</li><li>com.example.demo.client</li><li>com.example.demo.task</li></ul><p>(1) 引入mybatis+mysql</p><p>数据库中创建表</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DROP TABLE <span class="keyword">IF</span> EXISTS `person`;</span><br><span class="line">CREATE TABLE `person` (</span><br><span class="line">  `id` int(11) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(50)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  `age` int(11)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  `sex` int(11)<span class="built_in"> DEFAULT </span><span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>pom.xml中引入jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scope</span>&gt;</span>runtime<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将application.properties改成application.yml格式，可以不改</p><p>添加mybatis和mysql配置</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">server</span>:</span><br><span class="line">  <span class="attribute">port</span>: <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">spring</span>:</span><br><span class="line">  <span class="attribute">datasource</span>:</span><br><span class="line">    <span class="attribute">driver-class-name</span>: com.mysql.jdbc.Driver</span><br><span class="line">    <span class="attribute">url</span>: <span class="attribute">jdbc</span>:<span class="attribute">mysql</span>:<span class="comment">//localhost:8066/TESTDB?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=false&amp;autoReconnect=true</span></span><br><span class="line">    <span class="attribute">username</span>: root</span><br><span class="line">    <span class="attribute">password</span>: <span class="number">123456</span></span><br><span class="line">    </span><br><span class="line"><span class="attribute">mybatis</span>: </span><br><span class="line">  <span class="attribute">mapper-locations</span>:</span><br><span class="line">  - <span class="attribute">classpath</span>:mapper<span class="comment">/*Mapper.xml</span></span><br></pre></td></tr></table></figure><p>在SpringbootStudyApplication上添加</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@MapperScan</span>(<span class="string">"com.example.demo.dao"</span>)  指定扫描的dao处理地址</span><br><span class="line"><span class="variable">@EnableTransactionManagement</span>   开启事务机制</span><br></pre></td></tr></table></figure><p>创建对于的dto</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Serializable序列化为了之后的redisCache存入redis的，单mybatis可以不加</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">final</span> Integer id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> Integer age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getSex</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSex</span><span class="params">(<span class="keyword">final</span> Integer sex)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建dao</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Insert;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @Mapper 等同于@MapperScan(..)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">PersonDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以直接在这里写sql处理</span></span><br><span class="line">    <span class="meta">@Insert</span>(<span class="string">"insert into person(id, name, age, sex) values (#&#123;id&#125;,#&#123;name&#125;,#&#123;age&#125;,#&#123;sex&#125;)"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">insertOne</span><span class="params">(Person person)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from person where id = #&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function">Person <span class="title">findOne</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 也可以去xml中处理语句</span></span><br><span class="line">    <span class="function">List&lt;Person&gt; <span class="title">searchAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于searchAll是从xml解析的sql。我们配置了<code>classpath:mapper/*Mapper.xml</code>，所以在resources下创建mapper文件夹，并在文件夹中创建personMapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.example.demo.dao.PersonDao"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"searchAll"</span> <span class="attr">resultType</span>=<span class="string">"com.example.demo.dto.Person"</span>&gt;</span></span><br><span class="line">    select * from person</span><br><span class="line">  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建对于的service和controller</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.dao.PersonDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PersonDao personDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Person <span class="title">insertOne</span><span class="params">(<span class="keyword">final</span> Person person)</span> </span>&#123;</span><br><span class="line">        personDao.insertOne(person);</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">        <span class="comment">//        Integer.parseInt("sssss");</span></span><br><span class="line">        <span class="comment">//        personDao.insertOne(person);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Person <span class="title">findOne</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> personDao.<span class="title">findOne</span><span class="params">(id)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">deleteOne</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">return</span> personDao.<span class="title">searchAll</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">package</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">java</span><span class="selector-class">.util</span><span class="selector-class">.List</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">javax</span><span class="selector-class">.annotation</span><span class="selector-class">.Resource</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.PathVariable</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestBody</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RequestMapping</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">org</span><span class="selector-class">.springframework</span><span class="selector-class">.web</span><span class="selector-class">.bind</span><span class="selector-class">.annotation</span><span class="selector-class">.RestController</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.dto</span><span class="selector-class">.Person</span>;</span><br><span class="line"><span class="selector-tag">import</span> <span class="selector-tag">com</span><span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.service</span><span class="selector-class">.PersonService</span>;</span><br><span class="line"></span><br><span class="line">@<span class="keyword">RestController</span></span><br><span class="line"><span class="keyword">public</span> class PersonController &#123;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">Resource</span></span><br><span class="line">    private PersonService personService;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">insertOne</span>")</span><br><span class="line">    public void insertOne(@RequestBody final Person person) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">personService</span><span class="selector-class">.insertOne</span>(<span class="selector-tag">person</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/&#123;<span class="selector-tag">id</span>&#125;")</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">Person</span> <span class="selector-tag">findOne</span>(@<span class="keyword">PathVariable</span> final int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">personService</span><span class="selector-class">.findOne</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">deleteOne</span>/&#123;<span class="selector-tag">id</span>&#125;")</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">void</span> <span class="selector-tag">deleteOne</span>(@<span class="keyword">PathVariable</span> final int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">personService</span><span class="selector-class">.deleteOne</span>(<span class="selector-tag">id</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="keyword">RequestMapping</span>("/<span class="keyword">searchAll</span>")</span><br><span class="line">    public List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">personService</span><span class="selector-class">.searchAll</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们可以运行，run as &gt;&gt; spring boot app ，查看运行成功</p><p>调用POST <a href="http://localhost:8080/insertOne" target="_blank" rel="noopener">http://localhost:8080/insertOne</a></p><p>报文</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"id"</span>: <span class="number">2</span>,</span><br><span class="line"><span class="attr">"name"</span>: <span class="string">"namess"</span>,</span><br><span class="line"><span class="attr">"age"</span>: <span class="number">22</span>,</span><br><span class="line"><span class="attr">"sex"</span>: <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用GET <a href="http://localhost:8080/2" target="_blank" rel="noopener">http://localhost:8080/2</a> ，<a href="http://localhost:8080/searchAll" target="_blank" rel="noopener">http://localhost:8080/searchAll</a> 都成功了</p><p>（2）考虑到分页实现，我们引用开源的分页插件pagehelper</p><p>pom.xml中引入jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 分页插件pagehelper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>5.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 分页插件pagehelper --&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置分页插件pagehelper</span></span><br><span class="line"><span class="attr">pagehelper:</span></span><br><span class="line"><span class="attr">  helperDialect:</span> <span class="string">mysql</span></span><br><span class="line"><span class="attr">  reasonable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  supportMethodsArguments:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  params:</span> <span class="string">count=countSql</span></span><br></pre></td></tr></table></figure><p>dao层加入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Select</span>(<span class="string">"select * from person"</span>)</span><br><span class="line"><span class="function">Page&lt;Person&gt; <span class="title">findByPage</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><p>service层加入</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.page.PageMethod;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Page&lt;Person&gt; searchPage(<span class="keyword">final</span> <span class="keyword">int</span> pageNo, <span class="keyword">final</span> <span class="keyword">int</span> pageSize) &#123;</span><br><span class="line"></span><br><span class="line">    PageMethod.startPage(pageNo, pageSize);</span><br><span class="line">    <span class="function"><span class="keyword">return</span> personDao.<span class="title">findByPage</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于分页插件自带的Page不能用作返回，我们在dto封装我们的PageInfo</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.dto;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PageInfo</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当前页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageNum;</span><br><span class="line">    <span class="comment">//每页的数量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pageSize;</span><br><span class="line">    <span class="comment">//总记录数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> total;</span><br><span class="line">    <span class="comment">//总页数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pages;</span><br><span class="line">    <span class="comment">//结果集</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;T&gt; list;</span><br><span class="line">    <span class="comment">//是否为第一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isFirstPage = <span class="keyword">false</span>;</span><br><span class="line">    <span class="comment">//是否为最后一页</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> isLastPage = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 包装Page对象</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> list</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PageInfo</span><span class="params">(<span class="keyword">final</span> List&lt;T&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Page) &#123;</span><br><span class="line">            <span class="keyword">final</span> Page page = (Page) list;</span><br><span class="line">            <span class="keyword">this</span>.pageNum = page.getPageNum();</span><br><span class="line">            <span class="keyword">this</span>.pageSize = page.getPageSize();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.pages = page.getPages();</span><br><span class="line">            <span class="keyword">this</span>.list = page;</span><br><span class="line">            <span class="keyword">this</span>.total = page.getTotal();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">            <span class="keyword">this</span>.pageNum = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.pageSize = list.size();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.pages = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">this</span>.list = list;</span><br><span class="line">            <span class="keyword">this</span>.total = list.size();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (list <span class="keyword">instanceof</span> Collection) &#123;</span><br><span class="line">            <span class="comment">//判断页面边界</span></span><br><span class="line">            judgePageBoudary();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判定页面边界</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">judgePageBoudary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        isFirstPage = pageNum == <span class="number">1</span>;</span><br><span class="line">        isLastPage = pageNum == pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageNum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageNum</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pageNum)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageNum = pageNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPageSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPageSize</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pageSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pageSize = pageSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTotal</span><span class="params">(<span class="keyword">final</span> <span class="keyword">long</span> total)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.total = total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPages</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPages</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> pages)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pages = pages;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">getList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setList</span><span class="params">(<span class="keyword">final</span> List&lt;T&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.list = list;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIsFirstPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isFirstPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsFirstPage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isFirstPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.isFirstPage = isFirstPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIsLastPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isLastPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setIsLastPage</span><span class="params">(<span class="keyword">final</span> <span class="keyword">boolean</span> isLastPage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.isLastPage = isLastPage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> StringBuffer sb = <span class="keyword">new</span> StringBuffer(<span class="string">"PageInfo&#123;"</span>);</span><br><span class="line">        sb.append(<span class="string">"pageNum="</span>).append(pageNum);</span><br><span class="line">        sb.append(<span class="string">", pageSize="</span>).append(pageSize);</span><br><span class="line">        sb.append(<span class="string">", total="</span>).append(total);</span><br><span class="line">        sb.append(<span class="string">", pages="</span>).append(pages);</span><br><span class="line">        sb.append(<span class="string">", list="</span>).append(list);</span><br><span class="line">        sb.append(<span class="string">", isFirstPage="</span>).append(isFirstPage);</span><br><span class="line">        sb.append(<span class="string">", isLastPage="</span>).append(isLastPage);</span><br><span class="line">        sb.append(<span class="string">", navigatepageNums="</span>);</span><br><span class="line">        sb.append(<span class="string">'&#125;'</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> com.example.demo.dto.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.service.PersonService;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/searchPage/&#123;pageNo&#125;/&#123;pageSize&#125;"</span>)</span><br><span class="line"><span class="keyword">public</span> PageInfo&lt;Person&gt; searchPage(<span class="meta">@PathVariable</span> <span class="keyword">final</span> <span class="keyword">int</span> pageNo, <span class="meta">@PathVariable</span> <span class="keyword">final</span> <span class="keyword">int</span> pageSize) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Page&lt;Person&gt; persons = personService.searchPage(pageNo, pageSize);</span><br><span class="line">    <span class="keyword">final</span> PageInfo&lt;Person&gt; pageInfo = <span class="keyword">new</span> PageInfo&lt;&gt;(persons);</span><br><span class="line">    <span class="keyword">return</span> pageInfo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用GET <a href="http://localhost:8080/searchPage/1/1" target="_blank" rel="noopener">http://localhost:8080/searchPage/1/1</a> 即可看到分页成功</p><p>（3）为了看运行的sql语句等，我们加入log日志</p><p>Pom.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件加入</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">loggin<span class="variable">g:</span></span><br><span class="line">  leve<span class="variable">l:</span></span><br><span class="line">    <span class="keyword">com</span>.example.demo.dao: DEBUG</span><br><span class="line">  <span class="keyword">file</span>: /Users/yaojie/Desktop/demo.<span class="built_in">log</span></span><br></pre></td></tr></table></figure><p>默认每天压缩前一天日志，生成一个新的日志。</p><p>这样我们就能在控制台看到具体的sql</p><p>（4）redis集成</p><p>pom.xml中jar</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件在spring下</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">spring</span>:   </span><br><span class="line">  <span class="selector-tag">redis</span>:</span><br><span class="line">    <span class="selector-tag">cluster</span>:</span><br><span class="line">      <span class="selector-tag">max-redirects</span>: 5</span><br><span class="line">      <span class="selector-tag">nodes</span>: 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7000</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7001</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7002</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7003</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7004</span>,127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:7005</span></span><br><span class="line">    <span class="selector-tag">database</span>: 0</span><br><span class="line">    <span class="selector-tag">password</span>: </span><br><span class="line">    <span class="selector-tag">ssl</span>: <span class="selector-tag">false</span></span><br><span class="line">    <span class="selector-tag">jedis</span>:</span><br><span class="line">      <span class="selector-tag">pool</span>:</span><br><span class="line">        <span class="selector-tag">max-active</span>: 8</span><br><span class="line">        <span class="selector-tag">max-idle</span>: 8</span><br><span class="line">        <span class="selector-tag">max-wait</span>: <span class="selector-tag">-1</span></span><br><span class="line">        <span class="selector-tag">min-idle</span>: 0</span><br><span class="line">    # 配置了<span class="selector-tag">cluster</span>集群 单独的配置自动失效</span><br><span class="line">    <span class="selector-tag">host</span>: 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span></span><br><span class="line">    <span class="selector-tag">port</span>: 6900</span><br><span class="line">    <span class="selector-tag">timeout</span>: 5000</span><br></pre></td></tr></table></figure><p>SpringbootDemoApplication中配置redis的序列化，使查看值和key的时候更加方便，需要存redis的实体需要序列化</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    public RedisTemplate&lt;<span class="built_in">String</span>, ?&gt; redisTemplate(<span class="keyword">final</span> RedisConnectionFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt;();</span><br><span class="line">        redisTemplate.setConnectionFactory(<span class="keyword">factory</span>);</span><br><span class="line">        <span class="keyword">final</span> RedisSerializer&lt;<span class="built_in">String</span>&gt; stringRedisSerializer = <span class="keyword">new</span> StringRedisSerializer();<span class="comment">//Long类型不可以会出现异常信息;</span></span><br><span class="line">        redisTemplate.setKeySerializer(stringRedisSerializer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//定义value的序列化方式</span></span><br><span class="line">        <span class="keyword">final</span> Jackson2JsonRedisSerializer&lt;?&gt; jackson2JsonRedisSerializer = <span class="keyword">new</span> Jackson2JsonRedisSerializer&lt;<span class="built_in">Object</span>&gt;(</span><br><span class="line">                <span class="built_in">Object</span>.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">final</span> ObjectMapper om = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line"></span><br><span class="line">        redisTemplate.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>引用RedisTemplate即可使用redis</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">Object</span>&gt; redisTemplate;</span><br></pre></td></tr></table></figure><p>（5）springsession redis共享</p><p>pom.xml中加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- springsession redis共享 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SpringbootStudyApplication中配置</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableRedisHttpSession(maxInactiveIntervalInSeconds = 1800)</span><span class="comment">//SpringSession时间1800s</span></span><br></pre></td></tr></table></figure><p>util下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.RequestContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.context.request.ServletRequestAttributes;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpSessionUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> HttpSession <span class="title">getHttpSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        HttpSession httpSession = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> ServletRequestAttributes requestAttributes = (ServletRequestAttributes) RequestContextHolder</span><br><span class="line">                .currentRequestAttributes();</span><br><span class="line">        httpSession = requestAttributes.getRequest().getSession();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> httpSession;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>controller中加入</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/setSession"</span>)</span><br><span class="line">   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       HttpSessionUtil.getHttpSession().setAttribute(<span class="string">"userToken"</span>, <span class="string">"userTokenxxxxxxxxxxxxx"</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@RequestMapping</span>(<span class="string">"/getSession"</span>)</span><br><span class="line">   <span class="keyword">public</span> <span class="function">Object <span class="title">getSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> HttpSessionUtil.getHttpSession().getAttribute(<span class="string">"userToken"</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>这样springboot的集群起不同端口，分布式都可以共享session了</p><p>（6）使用redis-cache</p><p>pom.xml加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-cache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>配置文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span> </span><br><span class="line"><span class="symbol">  cache:</span></span><br><span class="line"><span class="symbol">    type:</span> redis</span><br></pre></td></tr></table></figure><p>SpringbootStudyApplication</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableCaching</span><span class="comment">//使用redis的话需要序列化实体</span></span><br></pre></td></tr></table></figure><p>service修改</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.<span class="keyword">annotation</span>.Resource;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.CacheEvict;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.CachePut;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.<span class="keyword">annotation</span>.Cacheable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.<span class="keyword">annotation</span>.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.dao.PersonDao;</span><br><span class="line"><span class="keyword">import</span> com.example.demo.dto.Person;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.Page;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.page.PageMethod;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PersonDao personDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务</span></span><br><span class="line">    <span class="meta">@Transactional</span></span><br><span class="line">    <span class="comment">// 将返回数据插入缓存</span></span><br><span class="line">    <span class="meta">@CachePut(key=<span class="meta-string">"#person.id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> Person insertOne(<span class="keyword">final</span> Person person) &#123;</span><br><span class="line">        personDao.insertOne(person);</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">        <span class="comment">//        Integer.parseInt("sssss");</span></span><br><span class="line">        <span class="comment">//        personDao.insertOne(person);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查找缓存，有返回，没有调用方法，将值存入缓存</span></span><br><span class="line">    <span class="meta">@Cacheable(key=<span class="meta-string">"#id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> Person findOne(<span class="keyword">final</span> int id) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> personDao.findOne(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@CacheEvict 删除缓存</span></span><br><span class="line">    <span class="meta">@CacheEvict(key=<span class="meta-string">"#id"</span>, value=<span class="meta-string">"person"</span>)</span></span><br><span class="line">    <span class="keyword">public</span> void deleteOne(<span class="keyword">final</span> int id) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;Person&gt; searchAll() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> personDao.searchAll();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Page&lt;Person&gt; searchPage(<span class="keyword">final</span> int pageNo, <span class="keyword">final</span> int pageSize) &#123;</span><br><span class="line"></span><br><span class="line">        PageMethod.startPage(pageNo, pageSize);</span><br><span class="line">        <span class="keyword">return</span> personDao.findByPage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（7）定时任务</p><p>使用spring3之后的Scheduling</p><p>SpringbootStudyApplication加上</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableScheduling</span></span><br></pre></td></tr></table></figure><p>task下，由于集群多个部署会多次执行，由业务控制执行一次，以下用redis</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.Async;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.<span class="keyword">annotation</span>.Scheduled;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.example.demo.client.RedisClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonTask</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(PersonTask.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RedisClient redisClient;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 定时任务执行结束才能下一次执行，redis控制集群并发</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @Async 不添加则直接单线程执行定时任务，顺序执行，集群后需要每次触发，控制由redis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Scheduled(fixedRate = 5000)</span></span><br><span class="line">    <span class="meta">@Async</span></span><br><span class="line">    <span class="keyword">public</span> void taskTwo() &#123;</span><br><span class="line"></span><br><span class="line">        System.<span class="keyword">out</span>.println(Thread.currentThread().getName() + <span class="string">"======taskTwo===="</span>);</span><br><span class="line">        <span class="keyword">if</span> (redisClient.<span class="keyword">get</span>(<span class="string">"taskTwoKey"</span>) == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (redisClient.<span class="keyword">set</span>(<span class="string">"taskTwoKey"</span>, <span class="string">"value"</span>)) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 定时任务执行</span></span><br><span class="line">                    System.<span class="keyword">out</span>.println(Thread.currentThread().getName() + <span class="string">"----333------"</span>);</span><br><span class="line">                    Thread.sleep(<span class="number">30000</span>);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> Exception e) &#123;</span><br><span class="line">                    LOGGER.error(<span class="string">"taskOne定时任务异常"</span>);</span><br><span class="line">                &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                    System.<span class="keyword">out</span>.println(</span><br><span class="line">                            Thread.currentThread().getName() + <span class="string">"----redisClient.remove(\"taskTwoKey\");------"</span>);</span><br><span class="line">                    redisClient.remove(<span class="string">"taskTwoKey"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>client下</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line">@Component</span><br><span class="line"><span class="keyword">public</span> class RedisClient &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    <span class="keyword">private</span> RedisTemplate&lt;<span class="keyword">String</span>, <span class="keyword">Object</span>&gt; redisTemplate;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(<span class="string">"boxing"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> setIfNotExsit(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">final</span> <span class="keyword">Object</span> value) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().setIfAbsent(<span class="built_in">key</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @SuppressWarnings(<span class="string">"boxing"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">boolean</span> setIfNotExsit(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">final</span> <span class="keyword">String</span> value, <span class="keyword">final</span> <span class="built_in">int</span> <span class="built_in">second</span>) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="built_in">boolean</span> bool = redisTemplate.opsForValue().setIfAbsent(<span class="built_in">key</span>, value);</span><br><span class="line">        redisTemplate.expire(<span class="built_in">key</span>, <span class="built_in">second</span>, TimeUnit.SECONDS);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> bool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">Object</span> <span class="built_in">get</span>(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> redisTemplate.opsForValue().<span class="built_in">get</span>(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> remove(<span class="keyword">final</span> <span class="keyword">String</span> <span class="built_in">key</span>) &#123;</span><br><span class="line"></span><br><span class="line">        redisTemplate.delete(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>（8）kakfa</p><p>pom.xml中jar</p><p>这里我使用的spring-kafka（它包装了apache的kafka-client）使用的kafka的时候要注意，kafka客户端（kafka-client）的版本要和kafka服务器的版本一一对应，否则，消息发送会失败。具体: <a href="https://projects.spring.io/spring-kafka/" target="_blank" rel="noopener">https://projects.spring.io/spring-kafka/</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.kafka<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-kafka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>属性文件</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">spring</span>:    </span><br><span class="line">  <span class="selector-tag">kafka</span>:</span><br><span class="line">    <span class="selector-tag">producer</span>:</span><br><span class="line">      <span class="selector-tag">bootstrap-servers</span>:</span><br><span class="line">      <span class="selector-tag">-</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:9092</span></span><br></pre></td></tr></table></figure><p>生产者</p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> KafkaTemplate&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; kafkaTemplate;</span><br><span class="line"></span><br><span class="line">kafkaTemplate.send(<span class="string">"test"</span>, <span class="string">"这是一个测试kafka的消息"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>());</span><br></pre></td></tr></table></figure><p>消费者</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo.task;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.kafka.annotation.KafkaListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KafkaConsumer</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger LOGGER = LoggerFactory.getLogger(KafkaConsumer.<span class="keyword">class</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 监听test主题,有消息就读取</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@KafkaListener</span>(topics = &#123;<span class="string">"test"</span>&#125;,groupId=<span class="string">"testGroup"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> consumer(<span class="keyword">final</span> String message)&#123;</span><br><span class="line"></span><br><span class="line">        LOGGER.info(<span class="string">"test topic message : &#123;&#125;"</span>, message);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体代码：<a href="https://pan.baidu.com/s/1EpXrBR7DHv0zkGinD6qVUQ" target="_blank" rel="noopener">百度网盘</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;搭建springboot的高可用框架，其中包含了mysql，redis，kakfa，log4j等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此次示例是在macos10.13.3的环境下&lt;/p&gt;
&lt;p&gt;已经安装好docker；&lt;/p&gt;
&lt;p&gt;mysq
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
      <category term="部署" scheme="http://20177.win/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>005 springboot的web配置</title>
    <link href="http://20177.win/2018/04/10/springboot/005.springboot%20web/"/>
    <id>http://20177.win/2018/04/10/springboot/005.springboot web/</id>
    <published>2018-04-10T04:24:22.000Z</published>
    <updated>2019-07-19T06:27:14.906Z</updated>
    
    <content type="html"><![CDATA[<p>这里还是以一开始创建的springboot-study为例子，添加的Thymeleaf的支持（包含了spring-boot-starter-web）。</p><p>web的开发就涉及到了模板引擎。需要注意的是springboot内置的tomcat或者jetty对jsp的jar运行。springboot提供了FreeMarker，Thymeleaf等模板，这里以Thymeleaf为模板，springboot为它提供了完美的springMvc支持。</p><p>通过查看spring-boot-autoconfigure.jar&gt;&gt;web&gt;&gt;ResourceProperties 可以看出静态资源位置，我们放在默认的src/main/resources/static文件夹下。我们这里放了bootstrap和jquery</p><p>通过查看spring-boot-autoconfigure.jar&gt;&gt;thymeleaf&gt;&gt;ThymeleafProperties 可以看出模板默认位置是src/main/resources/templates文件夹，后缀html，我们新建一个index.html （静态首页默认直接放static下，直接访问localhost:8080即可）</p><p>在默认配置下，我们可以直接使用Thymeleaf为模板的springboot的web项目了，以下代码：</p><p>实体：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">final</span> String name, <span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制器：</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.ArrayList;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> java.util.List;</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.SpringApplication;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.stereotype.Controller;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.ui.Model;</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span></span><br><span class="line"></span><br><span class="line">@SpringBootApplication</span><br><span class="line">@Controller</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpringbootStudyApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">final</span> String[] args) &#123;</span><br><span class="line">SpringApplication.run(SpringbootStudyApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@RequestMapping(<span class="string">"/"</span>)</span><br><span class="line"><span class="keyword">public</span> String index(<span class="keyword">final</span> Model model) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> Person person = <span class="keyword">new</span> Person(<span class="string">"xiaoming"</span>, <span class="number">11</span>);</span><br><span class="line">    model.addAttribute(<span class="string">"singlePerson"</span>, person);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> List&lt;Person&gt; people = <span class="keyword">new</span> ArrayList&lt;Person&gt;();</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaofang"</span>, <span class="number">20</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaowang"</span>, <span class="number">30</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaoli"</span>, <span class="number">10</span>));</span><br><span class="line">    people.add(<span class="keyword">new</span> Person(<span class="string">"xiaozhang"</span>, <span class="number">25</span>));</span><br><span class="line">    model.addAttribute(<span class="string">"people"</span>, people);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">"index"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Thymeleaf 页面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 静态页面化动态视图，动态资源th前缀 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns:th</span>=<span class="string">"http://www.thymeleaf.org"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">content</span>=<span class="string">"text/html;charset=UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width,initial-scale=1"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- @&#123;&#125;引入静态资源 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;bootstrap-3.3.7/css/bootstrap.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">th:href</span>=<span class="string">"@&#123;bootstrap-3.3.7/css/bootstrap-theme.min.css&#125;"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span>访问model<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- $&#123;&#125; model中的属性获取 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;singlePerson.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- $&#123;not #lists.isEmpty(people)&#125; 判断不为空，也支持 &gt; &lt; != == &lt;= &gt;= 和el表达式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">th:if</span>=<span class="string">"$&#123;not #lists.isEmpty(people)&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-primary"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span>列表<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"list-group"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- th:each 做遍历 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"list-group-item"</span> <span class="attr">th:each</span>=<span class="string">"person:$&#123;people&#125;"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;person.name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">th:text</span>=<span class="string">"$&#123;person.age&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn"</span> <span class="attr">th:onclick</span>=<span class="string">"'getName(\''+ $&#123;person.name&#125; +'\');'"</span>&gt;</span>获取名字<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;jquery.min.1.12.4.js&#125;"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:src</span>=<span class="string">"@&#123;bootstrap-3.3.7/js/bootstrap.min.js&#125;"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- th:inline="javascript" 这样js中就可以获取model的值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">th:inline</span>=<span class="string">"javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="comment">// [[$&#123;&#125;]] 获取值</span></span></span><br><span class="line"><span class="actionscript"><span class="keyword">var</span> single = [[$&#123;singlePerson&#125;]];</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(single.name + <span class="string">"/"</span> + single.age);</span></span><br><span class="line"><span class="undefined"></span></span><br><span class="line"><span class="actionscript"><span class="function"><span class="keyword">function</span> <span class="title">getName</span><span class="params">(name)</span> </span>&#123;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(<span class="string">"取得名字："</span> + name);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>springboot-study.zip( <a href="https://pan.baidu.com/s/1lfTmGCD3kxxPBvh6uiJQ1A" target="_blank" rel="noopener">https://pan.baidu.com/s/1lfTmGCD3kxxPBvh6uiJQ1A</a> )这样就可以启动了，访问localhost:8080，可以跳转到页面</p><p>当我们需要完全使用自己的配置web，添加一个类有<code>@Configuration</code>和<code>@EnableWebMvc</code>就可以了；但是大部分时候，我们是需要复用springboot帮助我们实现的代码，我们只需要我们自己的特殊配置，这时候我们需要添加一个注解有<code>@Configuration</code>的类并implements WebMvcConfigurer（extends WebMvcConfigurerAdapter类在boot2.0.1已经过时，不推荐使用了）:</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">（<span class="number">1</span>）<span class="meta">@EnableWebMvc</span>+<span class="keyword">extends</span> WebMvcConfigurationAdapter</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式会屏蔽Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置。</span><br><span class="line"></span><br><span class="line">（<span class="number">2</span>）<span class="keyword">extends</span> WebMvcConfigurationSupport</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式会屏蔽Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置。</span><br><span class="line"></span><br><span class="line">（<span class="number">3</span>）<span class="keyword">extends</span> WebMvcConfigurationAdapter</span><br><span class="line">在扩展的类中重写父类的方法即可，这种方式依旧使用Spring Boot的<span class="meta">@EnableAutoConfiguration</span>中的设置</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableWebMvc</span>注解的作用： 就是把WebMvcConfigurationSupport中的配置加载过来，你继承WebMvcConfigurerAdapter时自定义的一些配置会覆盖WebMvcConfigurationSupport 里的默认配置。</span><br><span class="line"></span><br><span class="line">如果使用的是（<span class="number">3</span>）<span class="keyword">extends</span> WebMvcConfigurationAdapter，这种方式依旧使用了spring boot的<span class="meta">@EnableAutoConfiguration</span>的设置，也就是<span class="meta">@EnableWebMvc</span>的配置也是生效的，那么WebMvcConfigurationSupport中的配置就会被加载进来，而我们继承的WebMvcConfigurerAdapter覆盖的方法又会覆盖WebMvcConfigurationSupport 里的默认配置。</span><br></pre></td></tr></table></figure><p>配置server</p><p>第一种是配置文件：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">server<span class="selector-class">.servlet</span><span class="selector-class">.context-path</span>=/xxx</span><br><span class="line">server<span class="selector-class">.servlet</span><span class="selector-class">.session</span><span class="selector-class">.timeout</span><span class="selector-class">.seconds</span>=<span class="number">1</span></span><br><span class="line">server.port=<span class="number">9999</span></span><br></pre></td></tr></table></figure><p>第二种是实现WebServerFactoryCustomizer(EmbeddedServletContainerCustomizer已经改成WebServer)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.web.server.WebServerFactoryCustomizer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">ServerConfig</span> <span class="keyword">implements</span> <span class="title">WebServerFactoryCustomizer</span>&lt;<span class="title">ConfigurableServletWebServerFactory</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public <span class="keyword">void</span> customize(<span class="keyword">final</span> ConfigurableServletWebServerFactory <span class="keyword">factory</span>) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">factory</span>.setPort(<span class="number">9999</span>);</span><br><span class="line">        <span class="keyword">factory</span>.setContextPath(<span class="string">"/aa"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><em>SSL配置</em></strong></p><p>SSL证书可以是自签名的，也可以是SSL证书授权中心的。这演示自签名的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keytool -genkey -<span class="built_in">alias</span> tomcat -keyalg RSA -keystore ./server.keystore </span><br><span class="line"><span class="comment">#需要注意的是，一定要指定keyalg RSA 否则会出现ERR_SSL_VERSION_OR_CIPHER_MISMATCH 错误 导致无法访问</span></span><br></pre></td></tr></table></figure><p>生成一个.keystore文件，放入项目主目录下，配置文件</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server.port=<span class="number">8443</span></span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store</span>=server.keystore</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store-password</span>=yaojie</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-store-type</span>=JKS</span><br><span class="line">server<span class="selector-class">.ssl</span><span class="selector-class">.key-alias</span>=tomcat</span><br></pre></td></tr></table></figure><p>这样，访问<a href="https://localhost:8443/" target="_blank" rel="noopener">https://localhost:8443/</a> 即可</p><p>要做http向https的自动跳转需要改代码,放@SpringBootApplication下：</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Connector <span class="title">httpConnector</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> Connector connector = <span class="keyword">new</span> Connector(<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span>);</span><br><span class="line">        connector.setScheme(<span class="string">"http"</span>);</span><br><span class="line">        connector.setPort(<span class="number">8080</span>);</span><br><span class="line">        connector.setSecure(<span class="keyword">false</span>);</span><br><span class="line">        connector.setRedirectPort(<span class="number">8443</span>);</span><br><span class="line">        <span class="keyword">return</span> connector;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">TomcatServletWebServerFactory <span class="title">servletContainerFactory</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> TomcatServletWebServerFactory containerFactory = <span class="keyword">new</span> TomcatServletWebServerFactory() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">postProcessContext</span><span class="params">(<span class="keyword">final</span> Context context)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">super</span>.postProcessContext(context);</span><br><span class="line">                <span class="keyword">final</span> SecurityConstraint constraint = <span class="keyword">new</span> SecurityConstraint();</span><br><span class="line">                constraint.setUserConstraint(<span class="string">"CONFIDENTIAL"</span>);</span><br><span class="line">                <span class="keyword">final</span> SecurityCollection collection = <span class="keyword">new</span> SecurityCollection();</span><br><span class="line">                collection.addPattern(<span class="string">"/*"</span>);</span><br><span class="line">                constraint.addCollection(collection);</span><br><span class="line">                context.addConstraint(constraint);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        containerFactory.addAdditionalTomcatConnectors(httpConnector());</span><br><span class="line">        <span class="keyword">return</span> containerFactory;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong><em>Favicon</em></strong></p><p>将favicon.ico放根目录或静态目录下</p><p>不展示的话配置：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.mvc</span><span class="selector-class">.favicon</span><span class="selector-class">.enabled</span>=false</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里还是以一开始创建的springboot-study为例子，添加的Thymeleaf的支持（包含了spring-boot-starter-web）。&lt;/p&gt;
&lt;p&gt;web的开发就涉及到了模板引擎。需要注意的是springboot内置的tomcat或者jetty对jsp的j
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>004 自动配置的使用</title>
    <link href="http://20177.win/2018/04/10/springboot/004.springboot%20autoconfig/"/>
    <id>http://20177.win/2018/04/10/springboot/004.springboot autoconfig/</id>
    <published>2018-04-09T18:16:22.000Z</published>
    <updated>2019-07-19T06:27:14.906Z</updated>
    
    <content type="html"><![CDATA[<p>1.新建springboot项目，添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-autoconfigure<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.添加属性文件读取类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties</span>(prefix=<span class="string">"hello"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloProperties</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过属性文件hello.name设置。默认defaultname</span></span><br><span class="line">    <span class="keyword">private</span> String name = <span class="string">"defaultname"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过属性文件hello.age设置。默认9999</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age = <span class="number">9999</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">final</span> String name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.待注册成bean的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello,"</span> + msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMsg</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMsg</span><span class="params">(<span class="keyword">final</span> String msg)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.条件配置注册bean</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.demo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.<span class="keyword">annotation</span>.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.EnableConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.<span class="keyword">annotation</span>.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(HelloProperties.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(HelloService.class)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(prefix=<span class="meta-string">"hello"</span>,value=<span class="meta-string">"enable"</span>,matchIfMissing=true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceAutoConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> HelloProperties helloProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(HelloService.class)</span></span><br><span class="line">    <span class="keyword">public</span> HelloService helloService() &#123;</span><br><span class="line">        <span class="keyword">final</span> HelloService helloService = new HelloService();</span><br><span class="line">        helloService.setMsg(helloProperties.getName());</span><br><span class="line">        <span class="keyword">return</span> helloService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.在src/main/resources下新建META-INF/spring.factories</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">org<span class="selector-class">.springframework</span><span class="selector-class">.boot</span><span class="selector-class">.autoconfigure</span><span class="selector-class">.EnableAutoConfiguration</span>=\</span><br><span class="line">com<span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.HelloServiceAutoConfig</span>,com<span class="selector-class">.example</span><span class="selector-class">.demo</span><span class="selector-class">.HelloServiceAutoConfig2</span></span><br><span class="line"></span><br><span class="line">注：\符号可以让换行续读，多个自动配置用,隔开</span><br></pre></td></tr></table></figure><p>下载springboot-autoconfig.zip(<a href="https://pan.baidu.com/s/1twGPd6xoMEN0-wm3NJp2rQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1twGPd6xoMEN0-wm3NJp2rQ</a>)</p><p>6.在需要用到的项目里添加这个包的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springboot-autoconfig<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以在属性文件中配置hello.name 或 hello.age覆盖默认配置</p><p>现在可以直接使用以下，调用方法了</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> HelloService helloService;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.新建springboot项目，添加maven依赖&lt;/p&gt;
&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>003 springboot基础运行了解</title>
    <link href="http://20177.win/2018/04/10/springboot/003.springboot%20start/"/>
    <id>http://20177.win/2018/04/10/springboot/003.springboot start/</id>
    <published>2018-04-09T17:06:22.000Z</published>
    <updated>2019-07-19T06:27:14.906Z</updated>
    
    <content type="html"><![CDATA[<p>1.springboot项目的起始类默认是注解了@SpringBootApplication，支持去除特定的自动配置类，如@SpringBootApplication(exclude=DataSourceAutoConfiguration.class)</p><p>2.属性文件可以是properties或yml文件</p><p>3.虽然springboot推荐不用xml配置，但必须的时候，可以@ImportResource({“classpath:xxxx.xml”})</p><p>4.springboot默认自带tomcat，打jar包，这个时候和运行普通jar一样，可以带参数，如：java -jar boot.jar –server.port=8888</p><p>5.属性文件中的值获取application.properties</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student1.<span class="attribute">name</span>=xiaoming</span><br><span class="line">student1.<span class="attribute">age</span>=10</span><br></pre></td></tr></table></figure><ul><li><p>直接在代码中用<code>@Value(&quot;${student1.age}&quot;)</code>获取</p></li><li><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Component</span></span><br><span class="line"><span class="variable">@ConfigurationProperties</span>(prefix=<span class="string">"student1"</span>)</span><br><span class="line">public class Student1 &#123;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">private</span> <span class="selector-tag">String</span> <span class="selector-tag">name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="selector-tag">private</span> <span class="selector-tag">int</span> <span class="selector-tag">age</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="selector-tag">set</span>，<span class="selector-tag">get</span>方法...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后使用</p><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> Student1 student1;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">aa</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   System.out.println(<span class="string">"==================="</span> + student1.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>6.日志</p><p>默认Logback</p>  <figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logging.<span class="attribute">file</span>=/User/yy/mylog.log</span><br><span class="line"></span><br><span class="line">logging.level.包名=<span class="builtin-name">INFO</span> #或者DEBUG什么的级别</span><br></pre></td></tr></table></figure><p>7.profile</p><ul><li><p>再创建一个application-dev.properties</p><p>在原来的application.properties中指定spring.profiles.active=dev</p></li><li><p>使用application.yml </p></li></ul><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">student1.name</span>: xiaoming</span><br><span class="line"><span class="attribute">student1.age</span>: 10</span><br><span class="line"></span><br><span class="line"><span class="attribute">spring.profiles.active</span>: dev #使用dev的环境</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="attribute">spring.profiles</span>: dev</span><br><span class="line"><span class="attribute">server.port</span>: 8999</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="attribute">spring.profiles</span>: test</span><br><span class="line"><span class="attribute">server.port</span>: 8888</span><br></pre></td></tr></table></figure><p>8.配置属性文件参数debug: true，可以查看已启用和未启用的自动配置</p><p><strong><em>一个不重要的玩意</em></strong></p><p>启动动画修改：在src/main/resources下新建一个banner.txt。这个文件里是显示的图案</p><p>关闭启动动画：修改main方法</p>  <figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SpringApplication <span class="keyword">app</span> = new SpringApplication(SpringbootStudyApplication.<span class="keyword">class</span>);</span><br><span class="line"><span class="keyword">app</span>.setBannerMode(Mode.OFF);</span><br><span class="line"><span class="keyword">app</span>.<span class="keyword">run</span>(<span class="keyword">args</span>);</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">或</span><br><span class="line"><span class="selector-tag">new</span> <span class="selector-tag">SpringApplicationBuilder</span>(<span class="selector-tag">SpringbootStudyApplication</span><span class="selector-class">.class</span>)<span class="selector-class">.bannerMode</span>(<span class="selector-tag">Mode</span><span class="selector-class">.OFF</span>)<span class="selector-class">.run</span>(<span class="selector-tag">args</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.springboot项目的起始类默认是注解了@SpringBootApplication，支持去除特定的自动配置类，如@SpringBootApplication(exclude=DataSourceAutoConfiguration.class)&lt;/p&gt;
&lt;p&gt;2.属
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>002 springboot搭建</title>
    <link href="http://20177.win/2018/04/09/springboot/002.springboot%20create/"/>
    <id>http://20177.win/2018/04/09/springboot/002.springboot create/</id>
    <published>2018-04-09T15:58:22.000Z</published>
    <updated>2019-07-19T06:27:14.906Z</updated>
    
    <content type="html"><![CDATA[<p>springboot项目的创建方式多种，这里主要介绍一种最简单的方式：</p><h5 id="sts创建"><a href="#sts创建" class="headerlink" title="sts创建"></a>sts创建</h5><p>1.File&gt;&gt;New&gt;&gt;Spring Starter Project<img src="/images/springboot/002-01.png" alt="002-01"></p><p>2.填写好一些基本的maven配置，点击下一步<img src="/images/springboot/002-02.png" alt="002-02"></p><p>3.选择好spring Boot Version，选择web，直接点击Finish即可<img src="/images/springboot/002-03.png" alt="002-03"></p><p>4.这样等待下载jar，之后就会有以下的项目出现</p><p><img src="/images/springboot/002-04.png" alt="002-04"></p><p>官网参考 <a href="https://projects.spring.io/spring-boot/#quick-start" target="_blank" rel="noopener">https://projects.spring.io/spring-boot/#quick-start</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;springboot项目的创建方式多种，这里主要介绍一种最简单的方式：&lt;/p&gt;
&lt;h5 id=&quot;sts创建&quot;&gt;&lt;a href=&quot;#sts创建&quot; class=&quot;headerlink&quot; title=&quot;sts创建&quot;&gt;&lt;/a&gt;sts创建&lt;/h5&gt;&lt;p&gt;1.File&amp;gt;&amp;gt;N
      
    
    </summary>
    
      <category term="springboot" scheme="http://20177.win/categories/springboot/"/>
    
    
  </entry>
  
  <entry>
    <title>RestTemplate的用法</title>
    <link href="http://20177.win/2018/04/08/other/restTemplate/"/>
    <id>http://20177.win/2018/04/08/other/restTemplate/</id>
    <published>2018-04-08T08:07:54.000Z</published>
    <updated>2019-07-19T06:27:14.904Z</updated>
    
    <content type="html"><![CDATA[<p>Object… urlVariables 是对url的补充</p><p>Class responseType是返回的类型</p><p>Object request是实体(MultiValueMap是可以的)或者HttpEntity</p><ol><li><p>getForEntity(String url, Class responseType, Object… urlVariables);</p><p>getForObject(String url, Class responseType, Object… urlVariables);</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ResponseEntity&lt;<span class="built_in">String</span>&gt; result = getForEntity(<span class="string">"http://USER-SERVICE/user?name=&#123;1&#125;"</span>, <span class="built_in">String</span>.<span class="keyword">class</span>, <span class="string">"xiaoming"</span>);</span><br><span class="line"><span class="built_in">String</span> result = getForObject(<span class="string">"http://USER-SERVICE/user?name=&#123;1&#125;"</span>, <span class="built_in">String</span>.<span class="keyword">class</span>, <span class="string">"xiaoming"</span>)</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(String url, Class responseType, Map urlVariables);</p><p>getForObject(String url, Class responseType, Map urlVariables);</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; <span class="built_in">map</span> = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(<span class="string">"name"</span>, <span class="string">"xiaoming"</span>);</span><br><span class="line">ResponseEntity&lt;<span class="keyword">String</span>&gt; result = getForEntity(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>, <span class="keyword">String</span>.class, <span class="built_in">map</span>);</span><br><span class="line"><span class="keyword">String</span> result = getForObject(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>, <span class="keyword">String</span>.class, <span class="built_in">map</span>)</span><br></pre></td></tr></table></figure></li><li><p>getForEntity(URI url, Class responseType)</p><p>getForObject(URI url, Class responseType)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">UriComponents uriComponents = UriComponentsBuilder.fromUriString(<span class="string">"http://USER-SERVICE/user?name=&#123;name&#125;"</span>).build().expand(<span class="string">"xiaoming"</span>).encode();</span><br><span class="line">ResponseEntity&lt;<span class="built_in">String</span>&gt; result = restTemplate.getForEntity(uriComponents.toUri(), <span class="built_in">String</span>.<span class="keyword">class</span>);</span><br><span class="line"><span class="built_in">String</span> result = restTemplate.getForObject(uriComponents.toUri(), <span class="built_in">String</span>.<span class="keyword">class</span>);</span><br></pre></td></tr></table></figure></li><li><p>postForEntity(String url, Object request, Class responseType, Object… urlVariables)</p><p>postForObject(String url, Object request, Class responseType, Object… urlVariables)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span> request 可以是普通对象(MultiValueMap也行)，也可以是HttpEntity</span><br></pre></td></tr></table></figure></li><li><p>postForEntity(String url, Object request, Class responseType, Map urlVariables)</p><p>postForObject(String url, Object request, Class responseType, Map urlVariables)</p></li><li><p>postForEntity(String url, Object request, Class responseType)</p><p>postForObject(String url, Object request, Class responseType)    </p></li><li><p>….等等PUT，DELETE都是一样的</p></li></ol><p>SSL访问的RestTemplate</p><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.apache.httpcomponents&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;httpclient&lt;/artifactId&gt;</span><br><span class="line">            &lt;<span class="keyword">version</span>&gt;<span class="number">4.5</span>.3&lt;/<span class="keyword">version</span>&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RestTemplate restTemplate() throws KeyStoreException, NoSuchAlgorithmException, KeyManagementException &#123;</span><br><span class="line">        <span class="keyword">final</span> TrustStrategy acceptingTrustStrategy = (<span class="keyword">final</span> X509Certificate[] chain, <span class="keyword">final</span> String authType) -&gt; <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SSLContext sslContext = org.apache.http.ssl.SSLContexts.custom()</span><br><span class="line">                .loadTrustMaterial(<span class="literal">null</span>, acceptingTrustStrategy)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> SSLConnectionSocketFactory csf = <span class="keyword">new</span> SSLConnectionSocketFactory(sslContext);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> CloseableHttpClient httpClient = HttpClients.custom()</span><br><span class="line">                .setSSLSocketFactory(csf)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> HttpComponentsClientHttpRequestFactory requestFactory =</span><br><span class="line">                <span class="keyword">new</span> HttpComponentsClientHttpRequestFactory();</span><br><span class="line"></span><br><span class="line">        requestFactory.setHttpClient(httpClient);</span><br><span class="line">        <span class="keyword">final</span> RestTemplate restTemplate = <span class="keyword">new</span> RestTemplate(requestFactory);</span><br><span class="line">        <span class="keyword">return</span> restTemplate;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>设置头访问</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这个对象有add()方法，可往请求头存入信息</span></span><br><span class="line">    <span class="keyword">final</span> HttpHeaders headers = <span class="keyword">new</span> HttpHeaders();</span><br><span class="line">    <span class="comment">// 解决中文乱码</span></span><br><span class="line">    headers.setContentType(MediaType.APPLICATION_JSON_UTF8);</span><br><span class="line">    <span class="keyword">final</span> HttpEntity&lt;<span class="built_in">Object</span>&gt; entity = <span class="keyword">new</span> HttpEntity&lt;<span class="built_in">Object</span>&gt;(request, headers);</span><br><span class="line">    <span class="keyword">final</span> ResponseEntity&lt;responseClass&gt; responseObject = restTemplate.exchange(url, HttpMethod.POST, entity, responseClass);</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.jianshu.com/p/beafe38428c7" target="_blank" rel="noopener">https://www.jianshu.com/p/beafe38428c7</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Object… urlVariables 是对url的补充&lt;/p&gt;
&lt;p&gt;Class responseType是返回的类型&lt;/p&gt;
&lt;p&gt;Object request是实体(MultiValueMap是可以的)或者HttpEntity&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;get
      
    
    </summary>
    
      <category term="杂记" scheme="http://20177.win/categories/%E6%9D%82%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
